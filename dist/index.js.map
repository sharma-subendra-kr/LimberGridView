{"version":3,"sources":["webpack://LimberGridView/webpack/universalModuleDefinition","webpack://LimberGridView/webpack/bootstrap","webpack://LimberGridView/external {\"commonjs\":\"IntervalTreeJS\",\"commonjs2\":\"IntervalTreeJS\",\"amd\":\"IntervalTreeJS\",\"root\":\"IntervalTreeJS\"}","webpack://LimberGridView/external {\"commonjs\":\"ClosestBST\",\"commonjs2\":\"ClosestBST\",\"amd\":\"ClosestBST\",\"root\":\"ClosestBST\"}","webpack://LimberGridView/./src/store/constants/privateConstants.js","webpack://LimberGridView/./src/store/constants/publicConstants.js","webpack://LimberGridView/./src/libs/utils/utils.js","webpack://LimberGridView/./src/store/variables/essentials.js","webpack://LimberGridView/./src/store/variables/elements.js","webpack://LimberGridView/./src/libs/utils/essentials.js","webpack://LimberGridView/./src/libs/eventHandlerLib/eventHandlerUtils.js","webpack://LimberGridView/./src/store/variables/options.js","webpack://LimberGridView/./src/libs/eventHandlerLib/itemInteractionUtils.js","webpack://LimberGridView/./src/libs/rect/rectUtils.js","webpack://LimberGridView/./src/libs/eventHandlerLib/deskInteractionUtils.js","webpack://LimberGridView/./src/libs/arrange/arrangeUtils.js","webpack://LimberGridView/./src/store/variables/bindedFunctions.js","webpack://LimberGridView/./src/libs/eventHandlerLib/initializers.js","webpack://LimberGridView/./src/store/variables/eventSpecific.js","webpack://LimberGridView/./src/libs/array/arrayUtils.js","webpack://LimberGridView/./src/libs/stack/stack.js","webpack://LimberGridView/./src/libs/debug/debug.js","webpack://LimberGridView/./src/libs/arrange/arrange.js","webpack://LimberGridView/./src/libs/renderers/renderers.js","webpack://LimberGridView/./src/libs/renderers/rendererUtils.js","webpack://LimberGridView/./src/libs/eventHandlerLib/deskInteraction.js","webpack://LimberGridView/./src/libs/interaction/itemInteractionUtils.js","webpack://LimberGridView/./src/libs/interaction/itemInteraction.js","webpack://LimberGridView/./src/libs/eventHandlerLib/itemInteraction.js","webpack://LimberGridView/./src/store/flags/flagDetails.js","webpack://LimberGridView/./src/initializers/initializers.js","webpack://LimberGridView/./src/libs/eventHandlerLib/miscellaneous.js","webpack://LimberGridView/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getPrivateConstants","context","store","constants","privateConstants","setWidth","val","WIDTH","setHeight","HEIGHT","setWidthScaleFactor","WIDTH_SCALE_FACTOR","setMargin","MARGIN","setDefinedMinHeightAndWidth","DEFINED_MIN_HEIGHT_AND_WIDTH","setPublicConstantByName","publicConstants","getPublicConstants","isMobile","isMobileFunction","options","isMobileCheck","matchMedia","matches","fixTo","num","to","Math","trunc","pow","filter","arr","len","length","temp","Array","count","undefined","res","getRandomString","floor","random","join","setPositionData","pd","variables","essentials","positionData","getPositionData","setModifiedPositionData","modifiedPositionData","getModifiedPositionData","getCallbacks","callbacks","set$el","elm","elements","$el","set$limberGridViewItems","$limberGridViewItems","getElements","adjustHeight","yMouseOrTouchPosition","e","$limberGridView","scrollHeight","AUTO_SCROLL_POINT","$limberGridViewHeightAdjustGuide","style","height","MOVE_OR_RESIZE_HEIGHT_INCREMENTS","adjustScroll","limberGridViewOnVisibleAreaY","limberGridViewHeightVisibleHeight","scrollTop","programScrolled","AUTO_SCROLL_DISTANCE","calculateMousePosOnDesk","event","limberGridViewPosition","getBoundingClientRect","clientX","left","width","clientY","top","scrollLeft","mouseXOnLimberGridView","PADDING_LEFT","mouseYOnLimberGridView","PADDING_TOP","x","y","calculateTouchPosOnDesk","touch","type","changedTouches","touches","touchXOnLimberGridView","touchYOnLimberGridView","calculateTouchPosOnItem","limberGridViewItemPosition","currentTarget","attributes","getOptions","getUserActionData","itemIndex","parseInt","radius","touchPosOnLimberGridItem","X","Y","which","sqrt","offsetX","offsetY","resizeUIBox","offsetWidth","RESIZE_SQUARE_GUIDE_LENGTH","offsetHeight","RESIZE_SQUARE_GUIDE_BORDER_WIDTH","itemMouseDownMoveCheck","target","MOVE_GUIDE_RADIUS","itemMouseDownResizeCheck","loadResizingState","userActionData","item","classList","add","$limberGridViewPseudoItem","setAttribute","transform","itemX","itemY","remove","$body","itemsLen","loadMoveState","$pseudoContainerItem","pageX","pageY","loadOnMoveState","$limberGridViewMoveGuide","isPointInsideRect","rect","point","rectCo","getCoordinates","tl","tr","bl","doesPointTouchRect","doRectsOverlap","rectA","rectB","isNaN","tlA","brA","tlB","brB","doRectsOnlyTouch","subtractRect","oCoForm","rectACo","rectBCo","subRects","subRectT","br","subRectR","subRectB","subRectL","keys","isValidRectCoForm","tm","rm","bm","lm","tlNtm","tmNtr","trNrm","rmNbr","brNbm","bmNbl","blNlm","lmNtl","rects","horizontalSubtract","verticalSubtract","getRectObjectFromCo","map","result","abs","right","bottom","areRectsAdjacent","mergeRects","merge","isRectInside","diff","mergeOverlapping","areRectsOnSameYAxisExPath","areRectsIdentical","loadInitState","DESK_INTERACTION_MODE","$limberGridViewAddCutGuide","getMinMaxXY","affectedItems","resizedRightX","resizedBottomY","toY","movedBottomY","minY","Number","MAX_SAFE_INTEGER","maxY","minX","maxX","getTopBottomWS","workSpaceRectCo","topWorkSpaceCo","bottomWorkSpaceCo","bottomMax","mpd","mItem","max","getItemDimenWithMargin","getBottomMax","getItemsInWorkSpace","workSpaceRect","getIndices","itemsInWorkSpace","getResizeWSItemsDetail","wsCo","topWsCo","bottomWsCo","cWsCo","arranged","itemsToArrange","wsPlusTopWsCo","wsPlusTopWs","bottomWs","cWs","iToALen","_itemsToArrange","filteredItemsToArrange","updatedItemsToArrange","uCount","iCount","_item","cBSTRectComparator","node","v","cBSTLComp","cBSTRComp","getScore","maxHWSum","getPerfectMatch","hwSum","score","sort","a","b","shiftItemsDown","items","shiftItemsUp","shiftHeight","addItemAllowCheck","tempPlane","isInside","cutSpaceAllowCheck","isOverlapping","atLeastOneOverlapping","topPoint","bottomPoint","getBindedFunctions","bindedFunctions","initializeEvents","this","bf","editable","enableInteractiveAddAndCut","addEventListener","onDeskMouseDown","enableTouchInteraction","onDeskTouchStart","onItemMouseDown","onItemTouchStart","onItemClickCallback","onItemClick","unInitializeEvents","removeEventListener","initializeItemTouchEvents","unInitializeItemTouchEvents","getItemInteractionVars","eventSpecific","itemInteraction","getDeskInteractionVars","deskInteraction","shuffle","j","Stack","stack","ptr","constructor","push","data","resize","pop","wipePop","oldlen","oldStack","getTop","isEmpty","getData","getAllData","getSize","empty","wipe","arrangeMove","async","isDemo","p1","performance","now","idCount","combinedWorkSpaceRectCo","shrinkRes","shrinkTopBottomWS","integrateTop","integrateBottom","itemsInBottomWorkSpace","itemsBelowBottomWorkSpace","getItemsBelowBottomWorkSpace","combinedWorkSpaceRect","itemsInCombinedWorkSpace","arrangedCount","workSpaceResizeCount","DEBUG_COUNT","it","freeRectsItY","lastId1","sweepLine","freeRectsArr","getSortedData","assignAdjacentRects","mergedRects","lastId2","mergeFreeRects","overlappedRects","findOverlapped","_arranged","_itemsInBottomWorkSpace","lastId3","arrange","id","_arrangedArr","values","console","log","p2","arrangeResize","_workSpaceRectCo","_combinedWorkSpaceRectCo","_topWorkSpaceCo","_bottomWorkSpaceCo","_combinedWorkSpaceRect","incrementHeight","passCount","_freeRectsItY","_itemsInCombinedWorkSpace","arrangeFromHeight","topWorkSpace","bottomWorkSpace","topWSItems","bottomWSItems","sweepRes","sweepLineTop","sweepLineBottom","area","IntervalTreesIterative","insert","low","high","rLen","resultPoint","breakSig","findAll","areaCo","lastId","tempItem","ref","intervals","fInterval","iLen","dLen","k","interval","rectsItY","rectItYArr","resY","lenY","stackIt","resultIt","adjacents","adj","keyslen","mergedObject","mergedRect","mergeRectsLen","atLeastOneFullMerge","freeRectsLen","filterAdjacents","isRectIdenticalOrInside","obj","isIdenticalOrInside","visited","adjs","adjsKeys","adjsKeysLen","completeOverlapped","itArr","rlen","_rect","olpds","oLen","resArr","filteredResArr","wCBST","ClosestBST","orLen","itemsToArrangeStack","itemsToArrangeLaterStack","itemsToArrangeWithScore","maxHeight","maxWidth","scoreArr","getItemsToArrangeScore","aItem","wCBSTRes","findUsingComparator","pm","arrangeCleanUp","resLen","diffLen","diffObj","olpd","iolpd","ioKeys","ioKeysLen","indirectOverlaps","diffStack","itemWithMargins","subtractFlag","directOverlaps","pmOlps","pmOlapsLen","diffStackData","diffStackDataLen","_overlappedRects","completeOverlappedLen","_overlappedRectsLen","render","scale","nodes","spd","getSerializedPositionData","MOBILE_ASPECT_RATIO","itemEl","document","createElement","index","removeChild","appendChild","renderData","renderContent","renderItemContent","getElementsByClassName","renderComplete","addItem","allow","bottomY","getPdBottomMax","addComplete","error","innerHTML","Element","renderPlugin","dkiv","contains","stopPropagation","mouseDownCancel","mouseDownTimerComplete","clearTimeout","longPressCheck","setTimeout","mouseDownCheck","MOUSE_DOWN_TIME","onDeskMouseMove","onDeskMouseUp","onDeskContextMenu","tapHoldCancel","tapHoldTimerComplete","onDeskTouchMove","onDeskTouchEnd","onDeskTouchCancel","onDeskTouchContextMenu","longTouchCheck","tapHoldCheck","TOUCH_HOLD_TIME","addPositionX","addPositionY","touchPositionOnLimberGrid","$limberGridViewTouchHoldGuide","preventDefault","newWidth","newHeight","yMousePosition","addItemAllowCheckTimeOutVariable","addItemAllowCheckTimeOut","DEMO_WAIT_TIME","cutSpaceAllowCheckTimeOutVariable","cutSpaceAllowCheckTimeOut","limberGridViewBoundingClientRect","yTouchPosition","cutDetails","unloadInitState","getResizeAffectedItems","affectedArr","getMoveAffectedItems","resizeItemInitialChecks","moveItemInitialChecks","toX","resetDemoUIChanges","movePointAdjust","pt","inside","overlappedItemIndex","resizeItem","modifiedItem","arrangedArr","resizeComplete","resizeItemDemo","moveItem","LATCH_MOVED_ITEM","adjustedPt","ANIMATE_MOVED_ITEM","transition","ANIMATE_TIME","moveComplete","moveItemDemo","iiv","onItemContextMenu","_userActionData","assign","onItemMouseMove","onItemMouseUp","onItemTouchContextMenu","touchHoldCancel","touchHoldTimerComplete","onItemTouchMove","onItemTouchEnd","onItemTouchCancel","showMoveDemoTimeOutVariable","mousePositionOnLimberGrid","showMoveDemo","showResizeDemoTimeOutVariable","showResizeDemo","updatedCoordinates","revertShowMoveOrResizeDemo","unloadResizingState","unloadMoveState","mousePosition","ADD","CUTSPACE","true","false","init","isResize","autoArrange","isArray","checkPositionData","warn","GRID_WIDTH","GRID_HEIGHT","GRID_MARGIN","MIN_HEIGHT_AND_WIDTH","setPaddingLeft","getComputedStyle","getPropertyValue","PADDING_RIGHT","setPaddingRight","setPaddingTop","PADDING_BOTTOM","setPaddingBottom","clientWidth","clientHeight","initConstantsAndFlags","gridData","setGridHeight","setGridMargin","setMinHeightAndWidth","mobileAspectRatio","moveGuideRadius","resizeSquareGuideLength","resizeSquareBorderGuideWidth","autoScrollDistance","autoScrollPoint","moveOrResizeHeightIncrements","mouseDownTime","touchHoldTime","demoWaitTime","windowResizeWaitTime","deskInteractionMode","latchMovedItem","animateMovedItem","animateTime","initRender","pseudoContainerId","getElementsByTagName","getElementById","setPseudoContainerId","pseudoContainer","$pseudoContainer","set$pseudoContainer","pseudoElementContainer","$pseudoElementContainer","$limberGridViewContainer","set$limberGridViewContainer","set$limberGridView","pseudoContainerItem","limberGridViewPseudoItem","limberGridViewMoveGuide","limberGridViewHeightAdjustGuide","limberGridViewAddCutGuide","limberGridViewTouchHoldGuide","set$pseudoContainerItem","set$limberGridViewPseudoItem","set$limberGridViewMoveGuide","set$limberGridViewHeightAdjustGuide","set$limberGridViewAddCutGuide","set$limberGridViewTouchHoldGuide","onWindowResize","onWindowResizeTimerCallback","WINDOW_RESIZE_WAIT_TIME","reRenderOnResize","LimberGridView","cbs","initializeStore","setOptions","el","$limberGridViewDebugMergedTempRects","$limberGridViewDebugStackTopRect","$limberGridViewDebugStackTopAdjRect","$limberGridViewDebugMergedRect","$limberGridViewDebugAdjRect","$limberGridViewDebugResultStackRects","$limberGridViewDebugStackRects","$limberGridViewDebugUnmergedRects","$limberGridViewDebugMergedFreeRects","renderItem","_renderItem","getGridData","margin","setDeskInteractMode","flag","setLatchMovedItem","_addItem","removeItem","isInteger","splice","removePlugin","removeComplete","_removeItem","setIsMobileCheck","f"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,EAAQG,QAAQ,kBAAmBA,QAAQ,eACnC,mBAAXC,QAAyBA,OAAOC,IAC9CD,OAAO,CAAC,iBAAkB,cAAeJ,GACf,iBAAZC,QACdA,QAAwB,eAAID,EAAQG,QAAQ,kBAAmBA,QAAQ,eAEvEJ,EAAqB,eAAIC,EAAQD,EAAqB,eAAGA,EAAiB,YAR5E,CASGO,QAAQ,SAASC,EAAgCC,GACpD,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUV,QAGnC,IAAIC,EAASO,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHZ,QAAS,IAUV,OANAa,EAAQH,GAAUI,KAAKb,EAAOD,QAASC,EAAQA,EAAOD,QAASS,GAG/DR,EAAOW,GAAI,EAGJX,EAAOD,QA0Df,OArDAS,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASjB,EAASkB,EAAMC,GAC3CV,EAAoBW,EAAEpB,EAASkB,IAClCG,OAAOC,eAAetB,EAASkB,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAASzB,GACX,oBAAX0B,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAetB,EAAS0B,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAetB,EAAS,aAAc,CAAE4B,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAASnC,GAChC,IAAIkB,EAASlB,GAAUA,EAAO8B,WAC7B,WAAwB,OAAO9B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAQ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,SAIjBhC,EAAoBA,EAAoBiC,EAAI,G,gBClFrDzC,EAAOD,QAAUM,G,cCAjBL,EAAOD,QAAUO,G,kFC4CjB,MAIMoC,EAAsB,SAAUC,GACrC,OAAOA,EAAQC,MAAMC,UAAUC,kBAa1BC,EAAW,SAAUJ,EAASK,GACnCL,EAAQC,MAAMC,UAAUC,iBAAiBG,MAAQD,GAO5CE,EAAY,SAAUP,EAASK,GACpCL,EAAQC,MAAMC,UAAUC,iBAAiBK,OAASH,GAuC7CI,EAAsB,SAAUT,EAASK,GAC9CL,EAAQC,MAAMC,UAAUC,iBAAiBO,mBAAqBL,GAOzDM,EAAY,SAAUX,EAASK,GACpCL,EAAQC,MAAMC,UAAUC,iBAAiBS,OAASP,GAO7CQ,EAA8B,SAAUb,EAASK,GACtDL,EAAQC,MAAMC,UAAUC,iBAAiBW,6BAA+BT,GAwC1DN,QCvHf,MAQMgB,EAA0B,SAAUf,EAAS1B,EAAMU,GACpDgB,EAAQC,MAAMC,UAAUc,gBAAgBpB,eAAetB,KAC1D0B,EAAQC,MAAMC,UAAUc,gBAAgB1C,GAAQU,IAQnCiC,MAdY,SAAUjB,GACpC,OAAOA,EAAQC,MAAMC,UAAUc,iBCjBzB,IAAIE,EAAW,SAAUlB,GAC/B,MAAMmB,EAAmBnB,EAAQoB,QAAQC,cAEzC,OAAIF,EACIA,IAID1D,OAAO6D,WAEb,4DACCC,SAGI,MAAMC,EAAQ,CAACC,EAAKC,EAAK,IACxBC,KAAKC,MAAMH,EAAME,KAAKE,IAAI,GAAIH,IAAOC,KAAKE,IAAI,GAAIH,GAG7CI,EAAUC,IACtB,MAAMC,EAAMD,EAAIE,OACVC,EAAO,IAAIC,MAAMH,GACvB,IAAII,EAAQ,EACZ,IAAK,IAAIrE,EAAI,EAAGA,EAAIiE,EAAKjE,IACT,OAAXgE,EAAIhE,SAA0BsE,IAAXN,EAAIhE,KAC1BmE,EAAKE,KAAWL,EAAIhE,IAItB,MAAMuE,EAAM,IAAIH,MAAMC,GACtB,IAAK,IAAIrE,EAAI,EAAGA,EAAIqE,EAAOrE,IAC1BuE,EAAIvE,GAAKmE,EAAKnE,GAGf,OAAOuE,GAGKC,EAAkB,CAACP,EAAM,MACrC,MAEMD,EAAM,IAAII,MAAMH,GACtB,IAAK,IAAIjE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgE,EAAIhE,GAJU,uCAIE4D,KAAKa,MAAsB,GAAhBb,KAAKc,WAEjC,OAAOV,EAAIW,KAAK,KCrBXC,EAAkB,SAAU3C,EAAS4C,GAC1C,MAAMZ,EAAMY,EAAGX,OACTF,EAAM,IAAII,MAAMH,GACtB,IAAK,IAAIjE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgE,EAAIhE,GAAK,IAAK6E,EAAG7E,IAGlBiC,EAAQC,MAAM4C,UAAUC,WAAWC,aAAehB,GAG7CiB,EAAkB,SAAUhD,GACjC,OAAOA,EAAQC,MAAM4C,UAAUC,WAAWC,cAGrCE,EAA0B,SAAUjD,EAAS4C,GAClD,MAAMZ,EAAMY,EAAGX,OACTF,EAAM,IAAII,MAAMH,GACtB,IAAK,IAAIjE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgE,EAAIhE,GAAK,IAAK6E,EAAG7E,IAGlBiC,EAAQC,MAAM4C,UAAUC,WAAWI,qBAAuBnB,GAGrDoB,EAA0B,SAAUnD,GACzC,OAAOA,EAAQC,MAAM4C,UAAUC,WAAWI,sBA2BrCE,EAAe,SAAUpD,GAC9B,OAAOA,EAAQC,MAAM4C,UAAUC,WAAWO,WC3D3C,MA+BMC,EAAS,SAAUtD,EAASuD,GACjCvD,EAAQC,MAAM4C,UAAUW,SAASC,IAAMF,GAuBlCG,EAA0B,SAAU1D,EAASuD,GAClDvD,EAAQC,MAAM4C,UAAUW,SAASG,qBAAuBJ,GAyH1CK,MAjLK,SAAU5D,GAC7B,OAAOA,EAAQC,MAAM4C,UAAUW,UCvBzB,MAyMMK,EAAe,SAAU7D,EAAS8D,GAC9C,MAAMC,EAAIH,EAAY5D,GAChBgB,EAAkBC,EAAmBjB,GAEtB+D,EAAEC,gBAAgBC,aAEvBH,GACf9C,EAAgBkD,oBAEhBH,EAAEI,iCAAiCC,MAAMC,OACxCP,EACA9C,EAAgBsD,iCAChB,OAIUC,EAAe,SAC3BvE,EACAwE,EACAC,GAEA,MAAMV,EAAIH,EAAY5D,GAChBgB,EAAkBC,EAAmBjB,GACrCG,EAAmBJ,EAAoBC,GAEvC0E,EAAYX,EAAEC,gBAAgBU,UAEpC,IAAIC,GAAkB,EA8BtB,OA7BIH,EAA+B,IAEjCC,EAAoCD,EACpCxD,EAAgBkD,oBAEhBH,EAAEC,gBAAgBU,UACjBA,EAAY1D,EAAgB4D,qBAC7BD,GAAkB,GAGlBH,EAA+BrE,EAAiBK,OAAS,IAC3C,IAAdkE,IAEAX,EAAEC,gBAAgBU,UACjBA,EAAY1D,EAAgB4D,qBAC7BD,GAAkB,IAcbA,GClQKE,EAA0B,SAAU7E,EAAS8E,GACzD,MAAMf,EAAIH,EAAY5D,GAChBG,EAAmBJ,EAAoBC,GAEvC+E,EAAyBhB,EAAEC,gBAAgBgB,wBACjD,GACCF,EAAMG,SAAWF,EAAuBG,MACxCJ,EAAMG,SACLF,EAAuBG,KAAOH,EAAuBI,OACtDL,EAAMM,SAAWL,EAAuBM,KACxCP,EAAMM,SAAWL,EAAuBM,IAAMN,EAAuBV,OACpE,CACD,MAAMK,EAAYX,EAAEC,gBAAgBU,UAC9BY,EAAavB,EAAEC,gBAAgBsB,WAE/BC,EACLT,EAAMG,QACNF,EAAuBG,KACvB/E,EAAiBqF,aACjBF,EACKG,EACLX,EAAMM,QACNL,EAAuBM,IACvBlF,EAAiBuF,YACjBhB,EAED,QAAIa,EAAyB,GAAKE,EAAyB,IAGpD,CAAEE,EAAGJ,EAAwBK,EAAGH,GAGvC,OAAO,GAIII,EAA0B,SAAU7F,EAAS8E,GACzD,MAAMf,EAAIH,EAAY5D,GAChBG,EAAmBJ,EAAoBC,GAEvC+E,EAAyBhB,EAAEC,gBAAgBgB,wBACjD,IAAIc,EAaJ,GAVCA,EADkB,aAAfhB,EAAMiB,KACD,CACPd,QAASH,EAAMkB,eAAe,GAAGf,QACjCG,QAASN,EAAMkB,eAAe,GAAGZ,SAG1B,CACPH,QAASH,EAAMmB,QAAQ,GAAGhB,QAC1BG,QAASN,EAAMmB,QAAQ,GAAGb,SAI3BU,EAAMb,SAAWF,EAAuBG,MACxCY,EAAMb,SACLF,EAAuBG,KAAOH,EAAuBI,OACtDW,EAAMV,SAAWL,EAAuBM,KACxCS,EAAMV,SAAWL,EAAuBM,IAAMN,EAAuBV,OACpE,CACD,MAAMK,EAAYX,EAAEC,gBAAgBU,UAC9BY,EAAavB,EAAEC,gBAAgBsB,WAE/BY,EACLJ,EAAMb,QACNF,EAAuBG,KACvB/E,EAAiBqF,aACjBF,EACKa,EACLL,EAAMV,QACNL,EAAuBM,IACvBlF,EAAiBuF,YACjBhB,EAED,QAAIwB,EAAyB,GAAKC,EAAyB,IAGpD,CAAER,EAAGO,EAAwBN,EAAGO,GAGvC,OAAO,GAIIC,EAA0B,SAAUpG,EAAS8E,GACzD,MAEMuB,EAFIzC,EAAY5D,GAEe2D,qBACpCmB,EAAMwB,cAAcC,WAAW,cAAcvH,OAC5CgG,wBAEF,GACCF,EAAMmB,QAAQ,GAAGhB,SAAWoB,EAA2BnB,MACvDJ,EAAMmB,QAAQ,GAAGhB,SAChBoB,EAA2BnB,KAAOmB,EAA2BlB,OAC9DL,EAAMmB,QAAQ,GAAGb,SAAWiB,EAA2BhB,KACvDP,EAAMmB,QAAQ,GAAGb,SAChBiB,EAA2BhB,IAAMgB,EAA2BhC,OAC5D,CAMD,MAAO,CAAEsB,EAJRb,EAAMmB,QAAQ,GAAGhB,QAAUoB,EAA2BnB,KAInBU,EAFnCd,EAAMmB,QAAQ,GAAGb,QAAUiB,EAA2BhB,KAKvD,OAAO,GC3GHmB,EAAa,SAAUxG,GAC5B,OAAOA,EAAQoB,SAGDoF,QCHR,MAAMC,EAAoB,CAACzG,EAAS8E,KAC1C,MAAM9D,EAAkBC,EAAmBjB,GACrCoB,EAAUoF,EAAWxG,GACrB4C,EAAKI,EAAgBhD,GAErB0G,EAAYC,SACjB7B,EAAMwB,cAAcC,WAAW,cAAcvH,OAE9C,IAAI4H,EACAC,EACAC,EAAGC,EAEP,GAAoB,IAAhBjC,EAAMkC,MACTJ,EAASjF,KAAKsF,KACbtF,KAAKE,IAAI,EAAIiD,EAAMoC,QAAS,GAAKvF,KAAKE,IAAI,EAAIiD,EAAMqC,QAAS,IAE9DL,EAAIhC,EAAMoC,QACVH,EAAIjC,EAAMqC,YACJ,IAAoB,IAAhBrC,EAAMkC,MAShB,OAAO,EARPH,EAA2BT,EAAwBpG,EAAS8E,GAC5D8B,EAASjF,KAAKsF,KACbtF,KAAKE,IAAI,EAAIgF,EAAyBlB,EAAG,GACxChE,KAAKE,IAAI,EAAIgF,EAAyBjB,EAAG,IAE3CkB,EAAID,EAAyBlB,EAC7BoB,EAAIF,EAAyBjB,EAM9B,MAAMwB,EAEJtC,EAAMwB,cAAce,YACpBrG,EAAgBsG,2BAHZF,EAKJtC,EAAMwB,cAAciB,aACpBvG,EAAgBsG,2BANZF,EAQJpG,EAAgBsG,2BAChBtG,EAAgBwG,iCATZJ,EAWJpG,EAAgBsG,2BAChBtG,EAAgBwG,iCAGlB,OACCpG,EAAQqG,wBACRrG,EAAQqG,uBACPX,EACAC,EACA,IAAKnE,EAAG8D,IACRA,EACA5B,EAAM4C,SAWPd,GAAU5F,EAAgB2G,oBACzBvG,EAAQqG,uBARF,CACN1B,KAAM,OACNW,UAAW5B,EAAMwB,cAAcC,WAAW,cAAcvH,OAezDoC,EAAQwG,0BACRxG,EAAQwG,yBACPd,EACAC,EACA,IAAKnE,EAAG8D,IACRA,EACA5B,EAAM4C,SAWPZ,GAAKM,GACLN,GAAKM,EAAgBA,GACrBL,GAAKK,GACLL,GAAKK,EAAgBA,IACpBhG,EAAQwG,yBAXF,CACN7B,KAAM,SACNW,UAAW5B,EAAMwB,cAAcC,WAAW,cAAcvH,YAI1D,GAcY6I,EAAoB,CAAC7H,EAAS8H,KAC1C,MAAM/D,EAAIH,EAAY5D,GAGhB+H,EAFK/E,EAAgBhD,GAEX8H,EAAepB,WAE/B3C,EAAEI,iCAAiCC,MAAMC,OAAS,MAClDN,EAAEI,iCAAiC6D,UAAUC,IAC5C,+CAGDlE,EAAEmE,0BAA0B9D,MAAMe,MAAW4C,EAAK5C,MAAP,KAC3CpB,EAAEmE,0BAA0B9D,MAAMC,OAAY0D,EAAK1D,OAAP,KAC5CN,EAAEmE,0BAA0BC,aAAa,aAAe,kBACxDpE,EAAEmE,0BAA0B9D,MAAMgE,UAAa,aAAYN,EAAeO,WAAWP,EAAeQ,WACpGvE,EAAEmE,0BAA0BF,UAAUC,IACrC,uCAEDlE,EAAEmE,0BAA0BF,UAAUO,OACrC,4CACA,gDAGDxE,EAAEyE,MAAMR,UAAUC,IAAI,2CAEtB,MAAMQ,EAAW1E,EAAEJ,qBAAqB1B,OACxC,IAAK,IAAIlE,EAAI,EAAGA,EAAI0K,EAAU1K,IAC7BgG,EAAEJ,qBAAqB5F,GAAGiK,UAAUC,IACnC,wCAIFlE,EAAEmE,0BAA0BF,UAAUC,IACrC,gDAiCWS,EAAgB,CAAC1I,EAAS8H,EAAgBhD,KACtD,MAAMf,EAAIH,EAAY5D,GAGhB+H,EAFK/E,EAAgBhD,GAEX8H,EAAepB,WAE/B3C,EAAEI,iCAAiCC,MAAMC,OAAS,MAClDN,EAAEI,iCAAiC6D,UAAUC,IAC5C,+CAGDlE,EAAEJ,qBAAqBmE,EAAepB,WAAWsB,UAAUC,IAC1D,8BAGDlE,EAAE4E,qBAAqBX,UAAUC,IAChC,iDAGDlE,EAAE4E,qBAAqBvE,MAAMe,MAAQ4C,EAAK5C,MAAQ,KAClDpB,EAAE4E,qBAAqBvE,MAAMC,OAAS0D,EAAK1D,OAAS,KAEhC,IAAhBS,EAAMkC,MACTjD,EAAE4E,qBAAqBvE,MAAMgE,UAAa,aAAYtD,EAAM8D,YAAY9D,EAAM+D,WACpD,IAAhB/D,EAAMkC,QAChBjD,EAAE4E,qBAAqBvE,MAAMgE,UAAa,aAAYtD,EAAMmB,QAAQ,GAAG2C,YAAY9D,EAAMmB,QAAQ,GAAG4C,YAGrG9E,EAAEyE,MAAMR,UAAUC,IAAI,4CA6BVa,EAAkB,CAAC9I,EAAS8H,EAAgBhD,EAAOiB,KAC/D,MAAMhC,EAAIH,EAAY5D,GACXgD,EAAgBhD,GAEX8H,EAAepB,WAElB,SAATX,GACHhC,EAAEgF,yBAAyBf,UAAUO,OACpC,sCAGDxE,EAAE4E,qBAAqBX,UAAUO,OAChC,oDACA,wDAGmB,IAAhBzD,EAAMkC,MACTjD,EAAE4E,qBAAqBvE,MAAMgE,UAAa,aAAYtD,EAAM8D,YAAY9D,EAAM+D,WACpD,IAAhB/D,EAAMkC,QAChBjD,EAAE4E,qBAAqBvE,MAAMgE,UAAa,aAAYtD,EAAMmB,QAAQ,GAAG2C,YAAY9D,EAAMmB,QAAQ,GAAG4C,aAElF,WAAT9C,GACVhC,EAAEmE,0BAA0BF,UAAUO,OACrC,4CACA,iDClQUS,EAAoB,CAACC,EAAMC,KACvC,MAAMC,EAASC,EAAeH,GAC9B,IACC,OACCC,EAAMvD,EAAIwD,EAAOE,GAAG1D,GACpBuD,EAAMvD,EAAIwD,EAAOG,GAAG3D,GACpBuD,EAAMtD,EAAIuD,EAAOE,GAAGzD,GACpBsD,EAAMtD,EAAIuD,EAAOI,GAAG3D,EAKpB,MAAO7B,GACR,OAAO,OAIIyF,EAAqB,CAACP,EAAMC,KACxC,MAAMC,EAASC,EAAeH,GAC9B,IACC,OACCC,EAAMvD,GAAKwD,EAAOE,GAAG1D,GACrBuD,EAAMvD,GAAKwD,EAAOG,GAAG3D,GACrBuD,EAAMtD,GAAKuD,EAAOE,GAAGzD,GACrBsD,EAAMtD,GAAKuD,EAAOI,GAAG3D,IACpBoD,EAAkBC,EAAMC,GAKzB,MAAOnF,GACR,OAAO,OAII0F,EAAiB,CAACC,EAAOC,KACrC,IACC,GACCC,MAAMF,EAAM/D,IACZiE,MAAMF,EAAM9D,IACZgE,MAAMF,EAAMvE,QACZyE,MAAMF,EAAMrF,SACZuF,MAAMD,EAAMhE,IACZiE,MAAMD,EAAM/D,IACZgE,MAAMD,EAAMxE,QACZyE,MAAMD,EAAMtF,QAEZ,OAAO,KAGR,MAAMwF,EAAM,CAAElE,EAAG+D,EAAM/D,EAAGC,EAAG8D,EAAM9D,GAC7BkE,EAAM,CAAEnE,EAAG+D,EAAM/D,EAAI+D,EAAMvE,MAAOS,EAAG8D,EAAM9D,EAAI8D,EAAMrF,QACrD0F,EAAM,CAAEpE,EAAGgE,EAAMhE,EAAGC,EAAG+D,EAAM/D,GAC7BoE,EAAM,CAAErE,EAAGgE,EAAMhE,EAAIgE,EAAMxE,MAAOS,EAAG+D,EAAM/D,EAAI+D,EAAMtF,QAE3D,QAAIwF,EAAIlE,GAAKqE,EAAIrE,GAAKoE,EAAIpE,GAAKmE,EAAInE,MAI/BkE,EAAIjE,GAAKoE,EAAIpE,GAAKmE,EAAInE,GAAKkE,EAAIlE,GAKlC,MAAO7B,GACR,OAAO,OAIIkG,EAAmB,CAACP,EAAOC,KACvC,IACC,GACCC,MAAMF,EAAM/D,IACZiE,MAAMF,EAAM9D,IACZgE,MAAMF,EAAMvE,QACZyE,MAAMF,EAAMrF,SACZuF,MAAMD,EAAMhE,IACZiE,MAAMD,EAAM/D,IACZgE,MAAMD,EAAMxE,QACZyE,MAAMD,EAAMtF,QAEZ,OAAO,KAGR,MAAMwF,EAAM,CAAElE,EAAG+D,EAAM/D,EAAGC,EAAG8D,EAAM9D,GAC7BkE,EAAM,CAAEnE,EAAG+D,EAAM/D,EAAI+D,EAAMvE,MAAOS,EAAG8D,EAAM9D,EAAI8D,EAAMrF,QACrD0F,EAAM,CAAEpE,EAAGgE,EAAMhE,EAAGC,EAAG+D,EAAM/D,GAC7BoE,EAAM,CAAErE,EAAGgE,EAAMhE,EAAIgE,EAAMxE,MAAOS,EAAG+D,EAAM/D,EAAI+D,EAAMtF,QAE3D,QAAIwF,EAAIlE,EAAIqE,EAAIrE,GAAKoE,EAAIpE,EAAImE,EAAInE,OAI7BkE,EAAIjE,EAAIoE,EAAIpE,GAAKmE,EAAInE,EAAIkE,EAAIlE,KAII,IAAjC6D,EAAeC,EAAOC,IAGzB,MAAO5F,GACR,OAAO,OAIImG,EAAe,CAACR,EAAOC,EAAOQ,KAE1C,IAAKV,EAAeC,EAAOC,GAC1B,OAAO,KAGR,MAAMS,EAAUhB,EAAeM,GACzBW,EAAUjB,EAAeO,GAgBzBW,EAAW,CAChBC,SAAU,CACTlB,GAAIe,EAAQf,GACZC,GAAIc,EAAQd,GACZkB,GAAI,CAAE7E,EAAGyE,EAAQd,GAAG3D,EAAGC,EAAGyE,EAAQf,GAAG1D,GACrC2D,GAAI,CAAE5D,EAAGyE,EAAQf,GAAG1D,EAAGC,EAAGyE,EAAQhB,GAAGzD,IAEtC6E,SAAU,CACTpB,GAAI,CAAE1D,EAAG0E,EAAQf,GAAG3D,EAAGC,EAAGwE,EAAQd,GAAG1D,GACrC0D,GAAIc,EAAQd,GACZkB,GAAIJ,EAAQI,GACZjB,GAAI,CAAE5D,EAAG0E,EAAQG,GAAG7E,EAAGC,EAAGwE,EAAQI,GAAG5E,IAEtC8E,SAAU,CACTrB,GAAI,CAAE1D,EAAGyE,EAAQb,GAAG5D,EAAGC,EAAGyE,EAAQd,GAAG3D,GACrC0D,GAAI,CAAE3D,EAAGyE,EAAQI,GAAG7E,EAAGC,EAAGyE,EAAQG,GAAG5E,GACrC4E,GAAIJ,EAAQI,GACZjB,GAAIa,EAAQb,IAEboB,SAAU,CACTtB,GAAIe,EAAQf,GACZC,GAAI,CAAE3D,EAAG0E,EAAQhB,GAAG1D,EAAGC,EAAGwE,EAAQf,GAAGzD,GACrC4E,GAAI,CAAE7E,EAAG0E,EAAQd,GAAG5D,EAAGC,EAAGwE,EAAQb,GAAG3D,GACrC2D,GAAIa,EAAQb,KAIRqB,EAAOnM,OAAOmM,KAAKN,GACzB,IAAK,IAAIvM,EAAI,EAAGA,EAAI6M,EAAK3I,OAAQlE,IAC3B8M,EAAkBP,EAASM,EAAK7M,aAC7BuM,EAASM,EAAK7M,IAIvB,IAAIsL,EAAIyB,EAAIxB,EAAIyB,EAAIP,EAAIQ,EAAIzB,EAAI0B,EAC5BC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EA0GjDC,EA4BJ,OArIIpB,EAASC,UAAYD,EAASG,WACjCS,EAAQ,CACP7B,GAAIiB,EAASC,SAASlB,GACtBC,GAAIgB,EAASG,SAASpB,GACtBmB,GAAI,CAAE7E,EAAG2E,EAASG,SAASpB,GAAG1D,EAAGC,EAAG0E,EAASC,SAAShB,GAAG3D,GACzD2D,GAAIe,EAASC,SAAShB,IAEvBD,EAAK,CACJD,GAAIiB,EAASG,SAASpB,GACtBC,GAAIgB,EAASG,SAASnB,GACtBkB,GAAIF,EAASC,SAASC,GACtBjB,GAAI,CAAE5D,EAAG2E,EAASG,SAASpB,GAAG1D,EAAGC,EAAG0E,EAASC,SAAShB,GAAG3D,IAE1DyF,EAAQ,CACPhC,GAAI,CAAE1D,EAAG2E,EAASG,SAASpB,GAAG1D,EAAGC,EAAG0E,EAASC,SAAShB,GAAG3D,GACzD0D,GAAIgB,EAASC,SAASC,GACtBA,GAAIF,EAASG,SAASD,GACtBjB,GAAIe,EAASG,SAASlB,KAIpBe,EAASG,UAAYH,EAASI,WACjCU,EAAQ,CACP/B,GAAIiB,EAASG,SAASpB,GACtBC,GAAIgB,EAASG,SAASnB,GACtBkB,GAAIF,EAASI,SAASpB,GACtBC,GAAI,CAAE5D,EAAG2E,EAASG,SAASlB,GAAG5D,EAAGC,EAAG0E,EAASI,SAASrB,GAAGzD,IAE1D4E,EAAK,CACJnB,GAAI,CAAE1D,EAAG2E,EAASG,SAASlB,GAAG5D,EAAGC,EAAG0E,EAASI,SAASrB,GAAGzD,GACzD0D,GAAIgB,EAASI,SAASpB,GACtBkB,GAAIF,EAASI,SAASF,GACtBjB,GAAIe,EAASG,SAASlB,IAEvBgC,EAAQ,CACPlC,GAAIiB,EAASI,SAASrB,GACtBC,GAAI,CAAE3D,EAAG2E,EAASG,SAASlB,GAAG5D,EAAGC,EAAG0E,EAASI,SAASrB,GAAGzD,GACzD4E,GAAIF,EAASG,SAASlB,GACtBA,GAAIe,EAASI,SAASnB,KAIpBe,EAASI,UAAYJ,EAASK,WACjCc,EAAQ,CACPpC,GAAIiB,EAASK,SAAStB,GACtBC,GAAIgB,EAASK,SAASrB,GACtBkB,GAAI,CAAE7E,EAAG2E,EAASK,SAASrB,GAAG3D,EAAGC,EAAG0E,EAASI,SAASpB,GAAG1D,GACzD2D,GAAIe,EAASI,SAASrB,IAEvBE,EAAK,CACJF,GAAIiB,EAASI,SAASrB,GACtBC,GAAI,CAAE3D,EAAG2E,EAASK,SAASrB,GAAG3D,EAAGC,EAAG0E,EAASI,SAASpB,GAAG1D,GACzD4E,GAAIF,EAASK,SAASH,GACtBjB,GAAIe,EAASI,SAASnB,IAEvB+B,EAAQ,CACPjC,GAAI,CAAE1D,EAAG2E,EAASK,SAASrB,GAAG3D,EAAGC,EAAG0E,EAASI,SAASpB,GAAG1D,GACzD0D,GAAIgB,EAASI,SAASpB,GACtBkB,GAAIF,EAASI,SAASF,GACtBjB,GAAIe,EAASK,SAASH,KAIpBF,EAASK,UAAYL,EAASC,WACjCiB,EAAQ,CACPnC,GAAIiB,EAASC,SAAShB,GACtBD,GAAI,CAAE3D,EAAG2E,EAASK,SAASrB,GAAG3D,EAAGC,EAAG0E,EAASC,SAAShB,GAAG3D,GACzD4E,GAAIF,EAASK,SAASH,GACtBjB,GAAIe,EAASK,SAASpB,IAEvBF,EAAK,CACJA,GAAIiB,EAASC,SAASlB,GACtBC,GAAIgB,EAASK,SAASrB,GACtBkB,GAAI,CAAE7E,EAAG2E,EAASK,SAASrB,GAAG3D,EAAGC,EAAG0E,EAASC,SAAShB,GAAG3D,GACzD2D,GAAIe,EAASC,SAAShB,IAEvB4B,EAAQ,CACP9B,GAAIiB,EAASK,SAASrB,GACtBA,GAAIgB,EAASC,SAASjB,GACtBkB,GAAIF,EAASC,SAASC,GACtBjB,GAAI,CAAE5D,EAAG2E,EAASK,SAASrB,GAAG3D,EAAGC,EAAG0E,EAASC,SAAShB,GAAG3D,KAI3DkF,EACCa,EAAmBT,EAAO7B,IAC1BsC,EAAmBR,EAAO7B,IAC1B4B,GACAC,EACDJ,EACCa,EAAiBR,EAAO9B,IACxBsC,EAAiBP,EAAOb,IACxBY,GACAC,EACDL,EACCW,EAAmBL,EAAOd,IAC1BmB,EAAmBJ,EAAOhC,IAC1B+B,GACAC,EACDN,EACCW,EAAiBJ,EAAOjC,IACxBqC,EAAiBH,EAAOpC,IACxBmC,GACAC,EAIAC,EADGvB,EACK,CAACd,EAAIyB,EAAIxB,EAAIyB,EAAIP,EAAIQ,EAAIzB,EAAI0B,GAE7B,CACPY,EAAoBxC,GACpBwC,EAAoBf,GACpBe,EAAoBvC,GACpBuC,EAAoBd,GACpBc,EAAoBrB,GACpBqB,EAAoBb,GACpBa,EAAoBtC,GACpBsC,EAAoBZ,IAItBS,EAAQA,EAAM5J,OAAQtD,GAAMA,GAEP,IAAjBkN,EAAMzJ,SACTyJ,EAAQjN,OAAOmM,KAAKN,GAAUwB,IAAKtN,GAC9B2L,EACIG,EAAS9L,GAETqN,EAAoBvB,EAAS9L,MAKhCkN,GAGFC,EAAqB,CAACjC,EAAOC,KAElC,IAAKD,IAAUC,EAAO,OAAO,KAC7B,IAAKF,EAAeoC,EAAoBnC,GAAQmC,EAAoBlC,IACnE,OAAO,KAgBR,IAAIoC,EAAS,KAeb,OAbCrC,EAAML,GAAG1D,IAAMgE,EAAMN,GAAG1D,GACxBhE,KAAKqK,IAAItC,EAAML,GAAG1D,EAAIgE,EAAMN,GAAG1D,GAAKhE,KAAKqK,IAAItC,EAAMJ,GAAG3D,EAAIgE,EAAML,GAAG3D,GAGnEoG,EAAS,CAAE1C,GAAIM,EAAML,GAAIA,GAAII,EAAMJ,GAAIkB,GAAId,EAAMc,GAAIjB,GAAII,EAAMa,KAE/Dd,EAAMJ,KAAOK,EAAML,IACnB3H,KAAKqK,IAAIrC,EAAMN,GAAG1D,EAAI+D,EAAML,GAAG1D,GAAKhE,KAAKqK,IAAIrC,EAAML,GAAG3D,EAAI+D,EAAMJ,GAAG3D,MAGnEoG,EAAS,CAAE1C,GAAIK,EAAML,GAAIC,GAAIK,EAAMN,GAAImB,GAAIb,EAAMJ,GAAIA,GAAIG,EAAMH,KAGzDwC,GAGFH,EAAmB,CAAClC,EAAOC,KAEhC,IAAKD,IAAUC,EAAO,OAAO,KAC7B,IAAKF,EAAeoC,EAAoBnC,GAAQmC,EAAoBlC,IACnE,OAAO,KAcR,IAAIoC,EAAS,KAeb,OAbCrC,EAAML,GAAGzD,IAAM+D,EAAMN,GAAGzD,GACxBjE,KAAKqK,IAAItC,EAAML,GAAGzD,EAAI+D,EAAMN,GAAGzD,GAAKjE,KAAKqK,IAAItC,EAAMH,GAAG3D,EAAI+D,EAAMJ,GAAG3D,GAGnEmG,EAAS,CAAE1C,GAAIM,EAAMJ,GAAID,GAAIK,EAAMa,GAAIA,GAAId,EAAMc,GAAIjB,GAAIG,EAAMH,KAE/DG,EAAMH,GAAG3D,IAAM+D,EAAMJ,GAAG3D,GACxBjE,KAAKqK,IAAIrC,EAAMN,GAAGzD,EAAI8D,EAAML,GAAGzD,GAAKjE,KAAKqK,IAAIrC,EAAMJ,GAAG3D,EAAI8D,EAAMH,GAAG3D,MAGnEmG,EAAS,CAAE1C,GAAIK,EAAML,GAAIC,GAAII,EAAMJ,GAAIkB,GAAIb,EAAML,GAAIC,GAAII,EAAMN,KAGzD0C,GAGKlB,EAAoB,SAAU5B,GAC1C,IACC,IAAI5D,EAAK4G,EAAOC,EAAQhH,EAMxB,OALAG,EAAM4D,EAAKK,GAAG3D,EAAIsD,EAAKI,GAAG1D,EAC1BsG,EAAQhD,EAAKuB,GAAG5E,EAAIqD,EAAKK,GAAG1D,EAC5BsG,EAASjD,EAAKuB,GAAG7E,EAAIsD,EAAKM,GAAG5D,EAC7BT,EAAO+D,EAAKM,GAAG3D,EAAIqD,EAAKI,GAAGzD,IAEvBP,GAAO,GAAK4G,GAAS,GAAKC,GAAU,GAAKhH,GAAQ,GAIpD,MAAOnB,GACR,OAAO,OAIIqF,EAAiB,SAAUH,GAMvC,MAAO,CAAEI,GALE,CAAE1D,EAAGsD,EAAKtD,EAAGC,EAAGqD,EAAKrD,GAKnB0D,GAJF,CAAE3D,EAAGsD,EAAKtD,EAAIsD,EAAK9D,MAAOS,EAAGqD,EAAKrD,GAI5B4E,GAHN,CAAE7E,EAAGsD,EAAKtD,EAAIsD,EAAK9D,MAAOS,EAAGqD,EAAKrD,EAAIqD,EAAK5E,QAGjCkF,GAFV,CAAE5D,EAAGsD,EAAKtD,EAAGC,EAAGqD,EAAKrD,EAAIqD,EAAK5E,UAK7BwH,EAAsB,SAAU5C,GAC5C,OAAK4B,EAAkB5B,GAChB,CACNtD,EAAGsD,EAAKI,GAAG1D,EACXC,EAAGqD,EAAKI,GAAGzD,EACXT,MAAO8D,EAAKK,GAAG3D,EAAIsD,EAAKI,GAAG1D,EAC3BtB,OAAQ4E,EAAKM,GAAG3D,EAAIqD,EAAKI,GAAGzD,GALQ,MASzBuG,EAAmB,CAACzC,EAAOC,KACvC,MAAMS,EAAUhB,EAAeM,GACzBW,EAAUjB,EAAeO,GAM/B,OAEEhI,KAAKqK,IAAI5B,EAAQf,GAAG1D,EAAI0E,EAAQf,GAAG3D,GAAK,GACxChE,KAAKqK,IAAI3B,EAAQhB,GAAG1D,EAAIyE,EAAQd,GAAG3D,GAAK,GACxChE,KAAKqK,IAAI5B,EAAQf,GAAGzD,EAAIyE,EAAQd,GAAG3D,GAAK,GACxCjE,KAAKqK,IAAI3B,EAAQhB,GAAGzD,EAAIwE,EAAQb,GAAG3D,GAAK,KAQxCwE,EAAQf,GAAGzD,GAAKyE,EAAQhB,GAAGzD,GAAKwE,EAAQf,GAAGzD,EAAIyE,EAAQd,GAAG3D,GAC1DyE,EAAQhB,GAAGzD,GAAKwE,EAAQf,GAAGzD,GAAKyE,EAAQhB,GAAGzD,EAAIwE,EAAQb,GAAG3D,GAC1DwE,EAAQf,GAAG1D,GAAK0E,EAAQhB,GAAG1D,GAAKyE,EAAQf,GAAG1D,EAAI0E,EAAQf,GAAG3D,GAC1D0E,EAAQhB,GAAG1D,GAAKyE,EAAQf,GAAG1D,GAAK0E,EAAQhB,GAAG1D,EAAIyE,EAAQd,GAAG3D,GAE1DyE,EAAQb,GAAG3D,GAAKyE,EAAQd,GAAG3D,GAAKwE,EAAQb,GAAG3D,EAAIyE,EAAQhB,GAAGzD,GAC1DyE,EAAQd,GAAG3D,GAAKwE,EAAQb,GAAG3D,GAAKyE,EAAQd,GAAG3D,EAAIwE,EAAQf,GAAGzD,GAC1DwE,EAAQd,GAAG3D,GAAK0E,EAAQf,GAAG3D,GAAKyE,EAAQd,GAAG3D,EAAI0E,EAAQhB,GAAG1D,GAC1D0E,EAAQf,GAAG3D,GAAKyE,EAAQd,GAAG3D,GAAK0E,EAAQf,GAAG3D,EAAIyE,EAAQf,GAAG1D,IAQhDyG,EAAa,CAAC1C,EAAOC,EAAOQ,KAIxC,MAAMC,EAAUhB,EAAeM,GACzBW,EAAUjB,EAAeO,GAE/B,IAAIoC,EAEJ,MAAMM,EAAQ,CAACjC,EAASC,KACvB,IAAI/H,EAEJ,GACC8H,EAAQf,GAAG1D,GAAK0E,EAAQd,GAAG5D,GAC3ByE,EAAQf,GAAG1D,EAAI0E,EAAQG,GAAG7E,GAC1ByE,EAAQf,GAAGzD,GAAKyE,EAAQd,GAAG3D,EAC1B,CACD,IAAID,EAAIyE,EAAQd,GAAG3D,EAAI0E,EAAQf,GAAG3D,EAAIyE,EAAQd,GAAG3D,EAAI0E,EAAQf,GAAG3D,EAChErD,EAAM,CACL+G,GAAI,CAAE1D,EAAGyE,EAAQf,GAAG1D,EAAGC,EAAGyE,EAAQhB,GAAGzD,GACrC0D,GAAI,CAAE3D,EAAGA,EAAGC,EAAGyE,EAAQhB,GAAGzD,GAC1B4E,GAAI,CAAE7E,EAAGA,EAAGC,EAAGwE,EAAQb,GAAG3D,GAC1B2D,GAAI,CAAE5D,EAAGyE,EAAQb,GAAG5D,EAAGC,EAAGwE,EAAQb,GAAG3D,IAIvC,GACCwE,EAAQf,GAAGzD,GAAKyE,EAAQf,GAAG1D,GAC3BwE,EAAQf,GAAGzD,EAAIyE,EAAQG,GAAG5E,GAC1BwE,EAAQf,GAAG1D,GAAK0E,EAAQf,GAAG3D,EAC1B,CACD,IAAIC,EAAIwE,EAAQI,GAAG5E,EAAIyE,EAAQG,GAAG5E,EAAIwE,EAAQI,GAAG5E,EAAIyE,EAAQG,GAAG5E,EAChEtD,EAAM,CACL+G,GAAI,CAAE1D,EAAG0E,EAAQhB,GAAG1D,EAAGC,EAAGwE,EAAQf,GAAGzD,GACrC0D,GAAI,CAAE3D,EAAGyE,EAAQd,GAAG3D,EAAGC,EAAGwE,EAAQd,GAAG1D,GACrC4E,GAAI,CAAE7E,EAAGyE,EAAQI,GAAG7E,EAAGC,EAAGA,GAC1B2D,GAAI,CAAE5D,EAAG0E,EAAQd,GAAG5D,EAAGC,EAAGA,IAK5B,GACCwE,EAAQd,GAAG3D,GAAK0E,EAAQG,GAAG7E,GAC3ByE,EAAQd,GAAG3D,EAAI0E,EAAQd,GAAG5D,GAC1ByE,EAAQd,GAAG1D,GAAKyE,EAAQd,GAAG3D,EAC1B,CACD,IAAID,EAAIyE,EAAQf,GAAG1D,EAAI0E,EAAQhB,GAAG1D,EAAIyE,EAAQf,GAAG1D,EAAI0E,EAAQhB,GAAG1D,EAChErD,EAAM,CACL+G,GAAI,CAAE1D,EAAGA,EAAGC,EAAGyE,EAAQhB,GAAGzD,GAC1B0D,GAAI,CAAE3D,EAAGyE,EAAQd,GAAG3D,EAAGC,EAAGyE,EAAQf,GAAG1D,GACrC4E,GAAI,CAAE7E,EAAGyE,EAAQI,GAAG7E,EAAGC,EAAGwE,EAAQI,GAAG5E,GACrC2D,GAAI,CAAE5D,EAAGA,EAAGC,EAAGwE,EAAQb,GAAG3D,IAI5B,GACCwE,EAAQd,GAAG1D,GAAKyE,EAAQhB,GAAGzD,GAC3BwE,EAAQd,GAAG1D,EAAIyE,EAAQd,GAAG3D,GAC1BwE,EAAQd,GAAG3D,GAAK0E,EAAQhB,GAAG1D,EAC1B,CACD,IAAIC,EAAIwE,EAAQb,GAAG3D,EAAIyE,EAAQd,GAAG3D,EAAIwE,EAAQb,GAAG3D,EAAIyE,EAAQd,GAAG3D,EAChEtD,EAAM,CACL+G,GAAI,CAAE1D,EAAGyE,EAAQf,GAAG1D,EAAGC,EAAGwE,EAAQf,GAAGzD,GACrC0D,GAAI,CAAE3D,EAAG0E,EAAQf,GAAG3D,EAAGC,EAAGwE,EAAQf,GAAGzD,GACrC4E,GAAI,CAAE7E,EAAG0E,EAAQG,GAAG7E,EAAGC,EAAGA,GAC1B2D,GAAI,CAAE5D,EAAGyE,EAAQb,GAAG5D,EAAGC,EAAGA,IAK5B,GACCwE,EAAQI,GAAG7E,GAAK0E,EAAQf,GAAG3D,GAC3ByE,EAAQI,GAAG7E,EAAI0E,EAAQhB,GAAG1D,GAC1ByE,EAAQI,GAAG5E,GAAKyE,EAAQhB,GAAGzD,EAC1B,CACD,IAAID,EAAIyE,EAAQf,GAAG1D,EAAI0E,EAAQhB,GAAG1D,EAAIyE,EAAQf,GAAG1D,EAAI0E,EAAQhB,GAAG1D,EAChErD,EAAM,CACL+G,GAAI,CAAE1D,EAAGA,EAAGC,EAAGwE,EAAQf,GAAGzD,GAC1B0D,GAAI,CAAE3D,EAAGyE,EAAQd,GAAG3D,EAAGC,EAAGwE,EAAQd,GAAG1D,GACrC4E,GAAI,CAAE7E,EAAGyE,EAAQd,GAAG3D,EAAGC,EAAGyE,EAAQG,GAAG5E,GACrC2D,GAAI,CAAE5D,EAAGA,EAAGC,EAAGyE,EAAQd,GAAG3D,IAI5B,GACCwE,EAAQI,GAAG5E,GAAKyE,EAAQd,GAAG3D,GAC3BwE,EAAQI,GAAG5E,EAAIyE,EAAQhB,GAAGzD,GAC1BwE,EAAQI,GAAG7E,GAAK0E,EAAQhB,GAAG1D,EAC1B,CACD,IAAIC,EAAIwE,EAAQf,GAAGzD,EAAIyE,EAAQhB,GAAGzD,EAAIwE,EAAQf,GAAGzD,EAAIyE,EAAQhB,GAAGzD,EAChEtD,EAAM,CACL+G,GAAI,CAAE1D,EAAGyE,EAAQf,GAAG1D,EAAGC,EAAGA,GAC1B0D,GAAI,CAAE3D,EAAG0E,EAAQf,GAAG3D,EAAGC,EAAGA,GAC1B4E,GAAI,CAAE7E,EAAG0E,EAAQG,GAAG7E,EAAGC,EAAGwE,EAAQI,GAAG5E,GACrC2D,GAAI,CAAE5D,EAAGyE,EAAQb,GAAG5D,EAAGC,EAAGwE,EAAQb,GAAG3D,IAKvC,GACCwE,EAAQb,GAAG5D,GAAK0E,EAAQhB,GAAG1D,GAC3ByE,EAAQb,GAAG5D,EAAI0E,EAAQf,GAAG3D,GAC1ByE,EAAQb,GAAG3D,GAAKyE,EAAQhB,GAAGzD,EAC1B,CACD,IAAID,EAAIyE,EAAQd,GAAG3D,EAAI0E,EAAQf,GAAG3D,EAAIyE,EAAQd,GAAG3D,EAAI0E,EAAQf,GAAG3D,EAChErD,EAAM,CACL+G,GAAI,CAAE1D,EAAGyE,EAAQf,GAAG1D,EAAGC,EAAGwE,EAAQf,GAAGzD,GACrC0D,GAAI,CAAE3D,EAAGA,EAAGC,EAAGwE,EAAQd,GAAG1D,GAC1B4E,GAAI,CAAE7E,EAAGA,EAAGC,EAAGyE,EAAQG,GAAG5E,GAC1B2D,GAAI,CAAE5D,EAAGyE,EAAQb,GAAG5D,EAAGC,EAAGyE,EAAQd,GAAG3D,IAIvC,GACCwE,EAAQb,GAAG3D,GAAKyE,EAAQG,GAAG5E,GAC3BwE,EAAQb,GAAG3D,EAAIyE,EAAQf,GAAG1D,GAC1BwE,EAAQb,GAAG5D,GAAK0E,EAAQf,GAAG3D,EAC1B,CACD,IAAIC,EAAIwE,EAAQf,GAAGzD,EAAIyE,EAAQhB,GAAGzD,EAAIwE,EAAQf,GAAGzD,EAAIyE,EAAQhB,GAAGzD,EAChEtD,EAAM,CACL+G,GAAI,CAAE1D,EAAG0E,EAAQhB,GAAG1D,EAAGC,EAAGA,GAC1B0D,GAAI,CAAE3D,EAAGyE,EAAQd,GAAG3D,EAAGC,EAAGA,GAC1B4E,GAAI,CAAE7E,EAAGyE,EAAQI,GAAG7E,EAAGC,EAAGwE,EAAQI,GAAG5E,GACrC2D,GAAI,CAAE5D,EAAG0E,EAAQd,GAAG5D,EAAGC,EAAGwE,EAAQb,GAAG3D,IAIvC,OAAOtD,GAkCR,OAPAyJ,EAASM,EAAMjC,EAASC,GACnB0B,IAAQA,EAASM,EAAMhC,EAASD,IACjC2B,IAAQA,EAAS,CAACA,IACjBA,GAAWO,EAAa5C,EAAOC,IAAW2C,EAAa3C,EAAOD,KAClEqC,EA5BwB,MACxB,MAAMQ,EAAOrC,EAAaR,EAAOC,GAAO,GAElC5H,EAAM,IAAII,OAAMoK,aAAA,EAAAA,EAAMtK,SAAU,GACtC,IAAI9D,EACAiE,EAAQ,EACZ,MAAMJ,EAAMD,EAAIE,OAGhB,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBI,EAAIkO,EAAME,EAAKxO,GAAIsM,GACflM,IAAMmO,EAAa5C,EAAOmC,EAAoB1N,MACjD4D,EAAIK,KAAWjE,GAIjB,MAAMmE,EAAM,IAAIH,MAAMC,GACtB,IAAK,IAAIrE,EAAI,EAAGA,EAAIqE,EAAOrE,IAC1BuE,EAAIvE,GAAKgE,EAAIhE,GAGd,OAAOuE,EAAIL,OAASK,EAAM,MAOjBkK,MAGNT,IACC5B,EACI4B,EAEAA,EAAOD,IAAKtN,GAAMqN,EAAoBrN,MAOnC8N,EAAe,CAAC5C,EAAOC,KAEnC,MAAMS,EAAUhB,EAAeM,GACzBW,EAAUjB,EAAeO,GAE/B,OACCS,EAAQf,GAAG1D,GAAK0E,EAAQhB,GAAG1D,GAC3ByE,EAAQd,GAAG3D,GAAK0E,EAAQf,GAAG3D,GAC3ByE,EAAQf,GAAGzD,GAAKyE,EAAQhB,GAAGzD,GAC3BwE,EAAQb,GAAG3D,GAAKyE,EAAQd,GAAG3D,GAQhB6G,EAA4B,CAAC/C,EAAOC,KAAU,YAE1D,OAAMD,SAAA,UAAAA,EAAOL,UAAP,eAAW1D,KAAK+D,SAAhB,UAAgBA,EAAOJ,UAAvB,aAAgB,EAAW3D,KAAKgE,SAAhC,UAAgCA,EAAON,UAAvC,aAAgC,EAAW1D,KAAK+D,SAAhD,UAAgDA,EAAOJ,UAAvD,aAAgD,EAAW3D,KAI7D+D,EAAML,GAAG1D,GAAKgE,EAAML,GAAG3D,GAAKgE,EAAMN,GAAG1D,GAAK+D,EAAMJ,GAAG3D,GAH/C,MASI+G,EAAoB,CAAChD,EAAOC,IAEvCD,EAAML,GAAG1D,IAAMgE,EAAMN,GAAG1D,GACxB+D,EAAML,GAAGzD,IAAM+D,EAAMN,GAAGzD,GACxB8D,EAAMJ,GAAG3D,IAAMgE,EAAML,GAAG3D,GACxB+D,EAAMJ,GAAG1D,IAAM+D,EAAML,GAAG1D,GACxB8D,EAAMc,GAAG7E,IAAMgE,EAAMa,GAAG7E,GACxB+D,EAAMc,GAAG5E,IAAM+D,EAAMa,GAAG5E,GACxB8D,EAAMH,GAAG5D,IAAMgE,EAAMJ,GAAG5D,GACxB+D,EAAMH,GAAG3D,IAAM+D,EAAMJ,GAAG3D,EC5oBb+G,EAAiB3M,IAC7B,MAAM+D,EAAIH,EAAY5D,GAChBgB,EAAkBC,EAAmBjB,GAE3C+D,EAAEyE,MAAMR,UAAUC,IACjB,0CACA,0DAGD,MAAMjG,EAAM+B,EAAEJ,qBAAqB1B,OACnC,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgG,EAAEJ,qBAAqB5F,GAAGiK,UAAUC,IACnC,wCAIF,IAAK,IAAIlK,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgG,EAAEmE,0BAA0BF,UAAUC,IACrC,+CAS4C,QAA1CjH,EAAgB4L,sBACnB7I,EAAE8I,2BAA2B7E,UAAUC,IACtC,yCAEmD,aAA1CjH,EAAgB4L,uBAC1B7I,EAAE8I,2BAA2B7E,UAAUC,IACtC,wCACA,2CAIFlE,EAAEI,iCAAiCC,MAAMC,OAAS,MAClDN,EAAEI,iCAAiC6D,UAAUC,IAC5C,gDCfW6E,EAAc,CAC1B9M,EACA+M,EACAC,EACAC,EACAC,EACAC,KAEA,MAAMvK,EAAKI,EAAgBhD,GACrBG,EAAmBJ,EAAoBC,GAE7C,IAAIoN,EAAOC,OAAOC,iBACdC,EAAO,EACPC,EAAOH,OAAOC,iBACdG,EAAO,EACX,MAAMzL,EAAM+K,EAAc9K,OAC1B,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IACpB6E,EAAGmK,EAAchP,IAAI6H,EAAIwH,IAC5BA,EAAOxK,EAAGmK,EAAchP,IAAI6H,GAEzBhD,EAAGmK,EAAchP,IAAI6H,EAAIhD,EAAGmK,EAAchP,IAAIsG,OAASkJ,IAC1DA,EAAO3K,EAAGmK,EAAchP,IAAI6H,EAAIhD,EAAGmK,EAAchP,IAAIsG,QAGlDzB,EAAGmK,EAAchP,IAAI4H,EAAI6H,IAC5BA,EAAO5K,EAAGmK,EAAchP,IAAI4H,GAGzB/C,EAAGmK,EAAchP,IAAI4H,EAAI/C,EAAGmK,EAAchP,IAAIoH,MAAQsI,IACzDA,EAAO7K,EAAGmK,EAAchP,IAAI4H,EAAI/C,EAAGmK,EAAchP,IAAIoH,OAYvD,OARI8H,EAAiBM,IAAMA,EAAON,GAE9BD,EAAgBS,IAAMA,EAAOT,GAE7BE,EAAME,IAAMA,EAAOF,GAEnBC,EAAeI,IAAMA,EAAOJ,GAEzB,CACNK,KAAMA,EAAOrN,EAAiBS,OAC9B6M,KAAMA,EAAOtN,EAAiBS,OAC9BwM,KAAMA,EAAOjN,EAAiBS,OAC9B2M,KAAMA,EAAOpN,EAAiBS,SA+CnB8M,EAAiB,CAAC1N,EAAS2N,EAAiBH,EAAMC,KAC9D,IAAIG,EAAgBC,EAChBF,EAAgBtE,GAAGzD,EAAI,IAC1BgI,EAAiB,CAChBvE,GAAI,CAAE1D,EAAG6H,EAAM5H,EAAG,GAClB0D,GAAI,CAAE3D,EAAG8H,EAAM7H,EAAG,GAClB4E,GAAI,CAAE7E,EAAG8H,EAAM7H,EAAG+H,EAAgBrE,GAAG1D,GACrC2D,GAAI,CAAE5D,EAAG6H,EAAM5H,EAAG+H,EAAgBtE,GAAGzD,KAIvC,MAAMkI,EA3CqB,EAAC9N,EAASwN,EAAMC,KAC3C,MAAM7K,EAAKI,EAAgBhD,GACrB+N,EAAM5K,EAAwBnD,GAC9BG,EAAmBJ,EAAoBC,GAE7C,IACI+H,EAAMiG,EADNC,EAAM,EAEV,MAAMjM,EAAMY,EAAGX,OAEf,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgK,EAAOmG,GAAuB/N,EAAiBS,OAAQgC,EAAG7E,IAC1DiQ,EAAQE,GAAuB/N,EAAiBS,OAAQmN,EAAIhQ,IAE3D6E,EAAG7E,GAAG6H,EAAIhD,EAAG7E,GAAGsG,OAAS4J,GACzBlG,EAAKpC,EAAI8H,GACT1F,EAAKpC,EAAIoC,EAAK5C,MAAQqI,IAEtBS,EAAMrL,EAAG7E,GAAG6H,EAAIhD,EAAG7E,GAAGsG,QAItB0J,EAAIhQ,GAAG6H,EAAImI,EAAIhQ,GAAGsG,OAAS4J,GAC3BD,EAAMrI,EAAI8H,GACVO,EAAMrI,EAAIqI,EAAM7I,MAAQqI,IAExBS,EAAMF,EAAIhQ,GAAG6H,EAAImI,EAAIhQ,GAAGsG,QAI1B,OAAO4J,GAcWE,CAAanO,EAASwN,EAAMC,GAW9C,OATIK,EAAYH,EAAgBpE,GAAG3D,IAClCiI,EAAoB,CACnBxE,GAAI,CAAE1D,EAAG6H,EAAM5H,EAAG+H,EAAgBpE,GAAG3D,GACrC0D,GAAI,CAAE3D,EAAG8H,EAAM7H,EAAG+H,EAAgBpE,GAAG3D,GACrC4E,GAAI,CAAE7E,EAAG8H,EAAM7H,EAAGkI,GAClBvE,GAAI,CAAE5D,EAAG6H,EAAM5H,EAAGkI,KAIb,CAAEF,iBAAgBC,sBAGbO,EAAsB,CAClCpO,EACAqO,EACAC,GAAa,KAEb,MAAMP,EAAM5K,EAAwBnD,GAC9BG,EAAmBJ,EAAoBC,GAEvCgC,EAAM+L,EAAI9L,OACVsM,EAAmB,IAAIpM,MAAMH,GACnC,IAAII,EAAQ,EACZ,IAAK,IAAIrE,EAAI,EAAGA,EAAIiE,EAAKjE,IAEvB0L,EACC4E,EACAH,GAAuB/N,EAAiBS,OAAQmN,EAAIhQ,OAMpDwQ,EAAiBnM,KAHbkM,EAGwBvQ,EAFAgQ,EAAIhQ,IAOnC,MAAMuE,EAAM,IAAIH,MAAMC,GACtB,IAAK,IAAIrE,EAAI,EAAGA,EAAIqE,EAAOrE,IAC1BuE,EAAIvE,GAAKwQ,EAAiBxQ,GAG3B,OAAOuE,GAwCKkM,GAAyB,CACrCxO,EACAyO,EACAC,EACAC,EACAC,EACAC,EACAC,EACAR,GAAa,KAEb,MAAMP,EAAM5K,EAAwBnD,GAC9BG,EAAmBJ,EAAoBC,GAEvC+O,EAAgB,CACrB1F,GAAI,KAAMqF,aAAA,EAAAA,EAASrF,IAAKqF,EAAQrF,GAAKoF,EAAKpF,IAC1CC,GAAI,KAAMoF,aAAA,EAAAA,EAASpF,IAAKoF,EAAQpF,GAAKmF,EAAKnF,IAC1CkB,GAAI,IAAKiE,EAAKjE,IACdjB,GAAI,IAAKkF,EAAKlF,KAETyF,EAAcnD,EAAoBkD,GAClCE,EAAWpD,EAAoB8C,GAC/BO,EAAMrD,EAAoB+C,GAQhC,IAAIxM,EAAQ,EACZ,MAAM+M,EAAUL,EAAe7M,OACzBmN,EAAkB,IAAIjN,MAAMgN,GAClC,IAAK,IAAIpR,EAAI,EAAGA,EAAIoR,EAASpR,IACvB8Q,EAASC,EAAe/Q,MAC5BqR,EAAgBhN,KAAW0M,EAAe/Q,IAG5C,MAAMsR,EAAyBvN,EAAOsN,GAEhCpN,EAAM+L,EAAI9L,OACVqN,EAAwB,IAAInN,MAAMH,GACxC,IAAIuN,EAAS,EACb,MAAMhB,EAAmB,IAAIpM,MAAMH,GACnC,IAAIwN,EAAS,EAEb,IAAK,IAAIzR,EAAI,EAAGA,EAAIiE,EAAKjE,IAAK,CAC7B,MAAM0R,EAAQvB,GAAuB/N,EAAiBS,OAAQmN,EAAIhQ,IAC9D0L,EAAeyF,EAAKO,KACnBZ,EAAS9Q,IAMF0L,EAAeuF,EAAaS,IAOtChG,EAAewF,EAAUQ,KACxBnD,EAAa2C,EAAUQ,GAVvBlB,EAAiBiB,KAHblB,EAGyBvQ,EAFAgQ,EAAIhQ,GAoBlC0L,EAAewF,EAAUQ,IACzBnD,EAAa2C,EAAUQ,KACtBZ,EAAS9Q,KAEVuR,EAAsBC,KAAYxR,EAClCgQ,EAAIhQ,GAAG4H,OAAItD,EACX0L,EAAIhQ,GAAG6H,OAAIvD,IAKd,MAAO,CACNiN,sBAAuBxN,EAAO,IAC1BuN,KACAC,IAEJf,iBAAkBzM,EAAOyM,KAIdL,GAAyB,CAACtN,EAAQmH,KAC9C,MAAM0H,EAAQ,IAAK1H,GAMnB,OALA0H,EAAM9J,GAAK/E,EACX6O,EAAM7J,GAAKhF,EACX6O,EAAMtK,OAAkB,EAATvE,EACf6O,EAAMpL,QAAmB,EAATzD,EAET6O,GAGKC,GAAqB,SAAU3H,GAC3C,MAAO,CAAC4H,EAAMC,EAAGvR,IACZsR,EAAKtR,EAAE4K,KAAK9D,OAAS4C,EAAK5C,OAASwK,EAAKtR,EAAE4K,KAAK5E,QAAU0D,EAAK1D,QAOvDwL,GAAY,SAAUD,GAClC,OAAQD,GACHA,EAAKC,EAAIA,GAOFE,GAAY,WACxB,OAAO,GAGKC,GAAW,CAAC9G,EAAM+G,KACtB/G,EAAK9D,MAAQ8D,EAAK5E,QAAU2L,EA+DxBC,GAAkB,CAAClO,EAAKmO,KACpC,MAAMlO,EAAMD,EAAIE,OAEhB,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgE,EAAIhE,GAAGM,EAAE8R,MAAQJ,GAAShO,EAAIhE,GAAGM,EAAE4K,KAAMiH,GAK1C,OAFAnO,EAAIqO,KAAK,CAACC,EAAGC,IAAMD,EAAEhS,EAAE8R,MAAQG,EAAEjS,EAAE8R,OAE5BpO,EAAI,IAGCwO,GAAiB,CAACvQ,EAASwQ,EAAOnM,KAC9C,MAAM0J,EAAM5K,EAAwBnD,GAE9BgC,EAAMwO,EAAMvO,OAElB,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgQ,EAAIyC,EAAMzS,IAAI6H,GAAKvB,GAIRoM,GAAe,SAAUzQ,EAAS4F,EAAG8K,GACjD,MAAM9N,EAAKI,EAAgBhD,GACrB+D,EAAIH,EAAY5D,GAEhBgC,EAAMY,EAAGX,OACf,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IACpB6E,EAAG7E,GAAG6H,GAAKA,IACdhD,EAAG7E,GAAG6H,GAAK8K,EACX3M,EAAEJ,qBAAqB5F,GAAGqG,MAAMgE,UAC/B,aAAexF,EAAG7E,GAAG4H,EAAI,OAAS/C,EAAG7E,GAAG6H,EAAI,QAKnC+K,GAAoB,SAAU3Q,EAAS2F,EAAGC,EAAGT,EAAOd,GAChE,MAAMlE,EAAmBJ,EAAoBC,GACvCgB,EAAkBC,EAAmBjB,GACrC4C,EAAKI,EAAgBhD,GAE3B,IAAI4Q,EAAY,CACfjL,EAAGA,EAAIxF,EAAiBS,OACxBgF,EAAGA,EAAIzF,EAAiBS,OACxBuE,MAAOA,EAAiC,EAAzBnE,EAAgBJ,OAC/ByD,OAAQA,EAAkC,EAAzBrD,EAAgBJ,QAGlC,GAAI+E,EAAI,GAAKC,EAAI,EAChB,OAAO,EAGR,GAAqB,iBAAVT,GAAwC,iBAAXd,EACvC,OAAO,EAGR,GAAIsB,EAAIR,EAAQhF,EAAiBG,MAChC,OAAO,EAGR,GAAI6E,EAAQ,IAAMd,EAAS,GAC1B,OAAO,EAGR,IAAIwM,EACJ,MAAM7O,EAAMY,EAAGX,OACf,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IAWxB,GAVA8S,EACCpH,EACCyE,GAAuB/N,EAAiBS,OAAQgC,EAAG7E,IACnD6S,IAED3G,EACCiE,GAAuB/N,EAAiBS,OAAQgC,EAAG7E,IACnD6S,GAGEC,EACH,OAAO,EAGT,OAAO,GAGKC,GAAqB,SAAU9Q,EAAS2F,EAAGC,EAAGT,EAAOd,GACjE,MAAMlE,EAAmBJ,EAAoBC,GACvC4C,EAAKI,EAAgBhD,GAErB4Q,EAAY,CACjBjL,EAAG,EACHC,EAAGA,EACHT,MAAOhF,EAAiBG,MACxB+D,OAAQA,GAGT,GAAqB,iBAAVc,GAAwC,iBAAXd,EACvC,OAAO,EAGR,IAII0M,EAJA3D,EAAOC,OAAOC,iBACdC,EAAO,EAEPyD,GAAwB,EAE5B,MAAMhP,EAAMY,EAAGX,OACf,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IAAK,CAC7B,GACCuO,EACCsE,EACA1C,GAAuB/N,EAAiBS,OAAQgC,EAAG7E,KAGpD,OAAO,EAaR,GAVAgT,EACCtH,EACCmH,EACA1C,GAAuB/N,EAAiBS,OAAQgC,EAAG7E,MAEpDkM,EACC2G,EACA1C,GAAuB/N,EAAiBS,OAAQgC,EAAG7E,KAGjDgT,EAAe,CAClBC,GAAwB,EACxB,MAAMC,EAAW,CAChBtL,EAAG/C,EAAG7E,GAAG4H,EACTC,EAAGhD,EAAG7E,GAAG6H,EAAIzF,EAAiBS,QAEzBsQ,EAAc,CACnBvL,EAAG/C,EAAG7E,GAAG4H,EACTC,EAAGhD,EAAG7E,GAAG6H,EAAIhD,EAAG7E,GAAGsG,OAASlE,EAAiBS,QAG7CgC,EAAG7E,GAAG6H,EAAIzF,EAAiBS,OAASwM,IACnCpE,EAAkB4H,EAAWK,IAC7BzH,EAAmBoH,EAAWK,MAE/B7D,EAAOxK,EAAG7E,GAAG6H,EAAIzF,EAAiBS,QAIlCgC,EAAG7E,GAAG6H,EAAIhD,EAAG7E,GAAGsG,OAASlE,EAAiBS,OAAS2M,IAClDvE,EAAkB4H,EAAWM,IAC7B1H,EAAmBoH,EAAWM,MAE/B3D,EAAO3K,EAAG7E,GAAG6H,EAAIhD,EAAG7E,GAAGsG,OAASlE,EAAiBS,SAKpD,OAAIoQ,GACC5D,IAASC,OAAOC,mBACnBF,EAAOxH,GAGK,IAAT2H,IACHA,EAAO3H,EAAIvB,GAGR+I,EAAOG,EAAO,GACV,CAAE3H,EAAG2H,EAAMmD,YAAatD,EAAOG,IAMjC,CAAE3H,EAAGA,EAAG8K,YAAarM,IC7jBhB8M,GAAsBnR,GAC3BA,EAAQC,MAAM4C,UAAUuO,gBCsBnBC,GAAmB,WAC/B,MAAMjQ,EAAUoF,EAAW8K,MACrBvN,EAAIH,EAAY0N,MAChBjO,EAAYD,EAAakO,MAEzBC,EAAKJ,GAAmBG,MAE9B,IAAyB,IAArBlQ,EAAQoQ,SAAmB,CACzBtQ,EAASoQ,QAC8B,IAAvClQ,EAAQqQ,6BACX1N,EAAEC,gBAAgB0N,iBAAiB,YAAaH,EAAGI,kBACZ,IAAnCvQ,EAAQwQ,wBACX7N,EAAEC,gBAAgB0N,iBAAiB,aAAcH,EAAGM,mBAMvD,IADA,IAAI7P,EAAM+B,EAAEJ,qBAAqB1B,OACxBlE,EAAI,EAAGA,EAAIiE,EAAKjE,IACnBmD,EAASoQ,QACbvN,EAAEJ,qBAAqB5F,GAAG2T,iBACzB,YACAH,EAAGO,kBAEmC,IAAnC1Q,EAAQwQ,wBACX7N,EAAEJ,qBAAqB5F,GAAG2T,iBACzB,aACAH,EAAGQ,mBAKF1O,EAAU2O,qBACbjO,EAAEJ,qBAAqB5F,GAAG2T,iBAAiB,QAASH,EAAGU,eAM9CC,GAAqB,WACjC,MAAM9Q,EAAUoF,EAAW8K,MACrBvN,EAAIH,EAAY0N,MAEhBC,EAAKJ,GAAmBG,MAE9B,IAAyB,IAArBlQ,EAAQoQ,gBACenP,IAAtB0B,EAAEC,kBACLD,EAAEC,gBAAgBmO,oBAAoB,YAAaZ,EAAGI,iBACtD5N,EAAEC,gBAAgBmO,oBAAoB,aAAcZ,EAAGM,wBAGzBxP,IAA3B0B,EAAEJ,sBAAoC,CACzC,MAAM3B,EAAM+B,EAAEJ,qBAAqB1B,OACnC,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgG,EAAEJ,qBAAqB5F,GAAGoU,oBACzB,YACAZ,EAAGO,iBAEJ/N,EAAEJ,qBAAqB5F,GAAGoU,oBACzB,aACAZ,EAAGQ,kBAGJhO,EAAEJ,qBAAqB5F,GAAGoU,oBAAoB,QAASZ,EAAGU,eAMjDG,GAA4B,WACxC,MAAMrO,EAAIH,EAAY0N,MAEhBC,EAAKJ,GAAmBG,MAE9B,QAA+BjP,IAA3B0B,EAAEJ,qBAAoC,CACzC,MAAM3B,EAAM+B,EAAEJ,qBAAqB1B,OACnC,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgG,EAAEJ,qBAAqB5F,GAAG2T,iBACzB,YACAH,EAAGO,iBAEJ/N,EAAEJ,qBAAqB5F,GAAG2T,iBACzB,aACAH,EAAGQ,oBAMMM,GAA8B,WAC1C,MAAMtO,EAAIH,EAAY0N,MAEhBC,EAAKJ,GAAmBG,MAE9B,QAA+BjP,IAA3B0B,EAAEJ,qBAAoC,CACzC,MAAM3B,EAAM+B,EAAEJ,qBAAqB1B,OACnC,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgG,EAAEJ,qBAAqB5F,GAAGoU,oBACzB,YACAZ,EAAGO,iBAEJ/N,EAAEJ,qBAAqB5F,GAAGoU,oBACzB,aACAZ,EAAGQ,oBC9HMO,GAAyB,SAAUtS,GAC/C,OAAOA,EAAQC,MAAM4C,UAAU0P,cAAcC,iBAOjCC,GAAyB,SAAUzS,GAC/C,OAAOA,EAAQC,MAAM4C,UAAU0P,cAAcG,iB,oBCTvC,MAAMC,GAAW5Q,IACvB,IAAIG,EAEH0Q,EADA5Q,EAAMD,EAAIE,OAEX,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxB6U,EAAIjR,KAAKa,MAAMb,KAAKc,UAAY1E,EAAI,IACpCmE,EAAOH,EAAIhE,GACXgE,EAAIhE,GAAKgE,EAAI6Q,GACb7Q,EAAI6Q,GAAK1Q,EAEV,OAAOH,GCHF8Q,GAAQ,WACbvB,KAAKrP,OAAS,IACdqP,KAAKwB,MAAQ,IAAI3Q,MAAMmP,KAAKrP,QAC5BqP,KAAKyB,KAAO,GAGbF,GAAMlT,UAAUqT,YAAcH,GAE9BA,GAAMlT,UAAUsT,KAAO,SAAUC,GAChC,OAAIA,UAGA5B,KAAKyB,IAAMzB,KAAKrP,OAAS,GAG5BqP,KAAK6B,SAFL7B,KAAKwB,QAAQxB,KAAKyB,KAAOG,GAKnB,IAGRL,GAAMlT,UAAUyT,IAAM,WACrB,GAAI9B,KAAKyB,KAAO,EAAG,CAClB,MAAM1N,EAAMiM,KAAKwB,MAAMxB,KAAKyB,KAE5B,OADAzB,KAAKyB,MACE1N,IAITwN,GAAMlT,UAAU0T,QAAU,WACzB,GAAI/B,KAAKyB,KAAO,EAAG,CAClB,MAAM1N,EAAMiM,KAAKwB,MAAMxB,KAAKyB,KAG5B,OAFAzB,KAAKwB,MAAMxB,KAAKyB,UAAO1Q,EACvBiP,KAAKyB,MACE1N,IAITwN,GAAMlT,UAAUwT,OAAS,WACxB,MAAMG,EAAShC,KAAKrP,OACdsR,EAAWjC,KAAKwB,MACtBxB,KAAKrP,QAAU,IACfqP,KAAKwB,MAAQ,IAAI3Q,MAAMmP,KAAKrP,QAE5B,IAAK,IAAIlE,EAAI,EAAGA,EAAIuV,EAAQvV,IAC3BuT,KAAKwB,MAAM/U,GAAKwV,EAASxV,IAI3B8U,GAAMlT,UAAU6T,OAAS,WACxB,OAAIlC,KAAKyB,KAAO,EACRzB,KAAKwB,MAAMxB,KAAKyB,KAEjB,MAGRF,GAAMlT,UAAU8T,QAAU,WACzB,OAAInC,KAAKyB,IAAM,GAMhBF,GAAMlT,UAAU+T,QAAU,WACzB,MAAM3R,EAAM,IAAII,MAAMmP,KAAKyB,IAAM,GACjC,IAAK,IAAIhV,EAAI,EAAGA,GAAKuT,KAAKyB,IAAKhV,IAC9BgE,EAAIhE,GAAKuT,KAAKwB,MAAM/U,GAErB,OAAOgE,GAGR8Q,GAAMlT,UAAUgU,WAAa,WAC5B,MAAM5R,EAAM,IAAII,MAAMmP,KAAKrP,QAC3B,IAAK,IAAIlE,EAAI,EAAGA,EAAIuT,KAAKrP,OAAQlE,IAChCgE,EAAIhE,GAAKuT,KAAKwB,MAAM/U,GAErB,OAAOgE,GAGR8Q,GAAMlT,UAAUiU,QAAU,WACzB,OAAOtC,KAAKyB,IAAM,GAGnBF,GAAMlT,UAAUkU,MAAQ,WACvBvC,KAAKyB,KAAO,GAGbF,GAAMlT,UAAUmU,KAAO,WACtBxC,KAAKrP,OAAS,IACdqP,KAAKwB,MAAQ,IAAI3Q,MAAMmP,KAAKrP,QAC5BqP,KAAKyB,KAAO,GAGEF,UCtFR,MCyCMkB,GAAcC,MAC1BhU,EACA+M,EACAG,EACAC,EACA8G,GAAS,KAET,MAAM9T,EAAmBJ,EAAoBC,GAEvC+N,GADkB9M,EAAmBjB,GAC/BmD,EAAwBnD,IAE9BkU,EAAKC,YAAYC,MAEjBC,EAAU,CAAEA,QAAS,IAErB,KAAEjH,EAAF,KAAQG,GAAST,EACtB9M,EACA+M,OACA1K,OACAA,EACA6K,EACAC,GAIK2B,EAAiB,IAAI3M,MAAM4K,EAAc9K,OAAS,GAClDkN,EAAUpC,EAAc9K,OAAS,EACvC,IAAK,IAAIlE,EAAI,EAAGA,EAAIoR,EAASpR,IAC5B+Q,EAAe/Q,GAAKgP,EAAchP,GAGnC,MAAM4P,EAAkB,CACvBtE,GAAI,CAAE1D,EAAG,EAAGC,EAAGwH,GACf9D,GAAI,CAAE3D,EAAGxF,EAAiBG,MAAOsF,EAAGwH,GACpC5C,GAAI,CAAE7E,EAAGxF,EAAiBG,MAAOsF,EAAG2H,GACpChE,GAAI,CAAE5D,EAAG,EAAGC,EAAG2H,IAGV+G,EAA0B,CAC/BjL,GAAI,IAAKsE,EAAgBtE,IACzBC,GAAI,IAAKqE,EAAgBrE,IACzBkB,GAAI,IAAKmD,EAAgBnD,IACzBjB,GAAI,IAAKoE,EAAgBpE,MAEpB,eAAEqE,EAAF,kBAAkBC,GAAsBH,EAC7C1N,EACA2N,EACA,EACAxN,EAAiBG,OAEZiU,EAAYC,GACjBxU,EACA4N,EACAC,GAGG0G,EAAUE,eACbH,EAAwBjL,GAAK,IAAKuE,EAAevE,IACjDiL,EAAwBhL,GAAK,IAAKsE,EAAetE,KAE9CiL,EAAUG,kBACbJ,EAAwB9J,GAAK,IAAKqD,EAAkBrD,IACpD8J,EAAwB/K,GAAK,IAAKsE,EAAkBtE,KAGrD,IAAIoL,EAAyBvG,EAC5BpO,EACA6L,EAAoBgC,IACpB,GAED,MAAM+G,EPwDqC,EAC3C5U,EACAqO,EACAC,GAAa,KAEb,MAAMP,EAAM5K,EAAwBnD,GAC9BG,EAAmBJ,EAAoBC,GAE7C,IAAKqO,EACJ,MAAO,GAGR,MAAMrM,EAAM+L,EAAI9L,OACVuO,EAAQ,IAAIrO,MAAMH,GACxB,IAAII,EAAQ,EAEZ,IAAK,IAAIrE,EAAI,EAAGA,EAAIiE,EAAKjE,IAEvBsQ,EAAc9E,GAAG3D,GACjBsI,GAAuB/N,EAAiBS,OAAQmN,EAAIhQ,IAAI6H,IAKvD4K,EAAMpO,KAHFkM,EAGavQ,EAFAgQ,EAAIhQ,IAOxB,MAAMuE,EAAM,IAAIH,MAAMC,GACtB,IAAK,IAAIrE,EAAI,EAAGA,EAAIqE,EAAOrE,IAC1BuE,EAAIvE,GAAKyS,EAAMzS,GAGhB,OAAOuE,GO1F2BuS,CACjC7U,EACA6N,GACA,GAGD,IAAIiH,EAAwBjJ,EAAoByI,GAC5CS,EAA2B3G,EAC9BpO,EACA8U,GAGD,MAAMpE,GACJvQ,EAAiBW,6BACS,EAA1BX,EAAiBS,QAClB,EAED,IACIiO,EAAW,GACXmG,EAAgB,EAChBC,EAAuB,EAEvBC,EAAc,EAElB,KAAOF,IAAkB7F,GAAS,CAEjC4F,EAAyB3E,KAAK,CAACC,EAAGC,IAAMD,EAAE1K,EAAI2K,EAAE3K,GAEhD,MAAQwP,GAAIC,EAAcf,QAASgB,GAAYC,GAC9CtV,EACA8U,EACAR,EACAS,EACAV,EAAQA,SAETA,EAAQA,QAAUgB,EAElB,MAAME,EAAeH,EAAaI,gBAClC7C,GAAQ4C,GAERE,GAAoBL,GAKpB,MAAM,YAAEM,EAAarB,QAASsB,SAAkBC,GAC/CL,EACAlB,EAAQA,SAETA,EAAQA,QAAUsB,EAKlB,MAAM,gBAAEE,GAAoBC,GAAeJ,IAM1C7G,SAAUkH,EACVpB,uBAAwBqB,EACxB3B,QAAS4B,SACAC,GACTlW,EACA8O,EAAehN,OAAQqU,IAAQtH,EAASsH,IACxCN,EACAhK,EAAoB+B,GACpB/B,EAAoBgC,GACpByG,EACAD,EAAQA,SAETA,EAAQA,QAAU4B,EAElBtB,EAAyB,IACrBA,KACAlW,OAAOmM,KAAKoL,IAGhBnH,EAAW,IAAKA,KAAakH,GAC7B,MAAMK,EAAe3X,OAAO4X,OAAON,GA6BnC,GA5BAhB,EAA2B,IAAIA,KAA6BqB,GAE5DpB,GAAiBoB,EAAanU,OAE1B+S,IAAkB7F,IAErB8F,IACAqB,QAAQC,IAAI,uBAAwBtB,GAEpCtH,EAAgBnD,GAAG5E,GAAK8K,EACxB/C,EAAgBpE,GAAG3D,GAAK8K,EACpB7C,IACHA,EAAkBxE,GAAGzD,GAAK8K,EAC1B7C,EAAkBvE,GAAG1D,GAAK8K,EAC1B7C,EAAkBrD,GAAG5E,GAAK8K,EAC1B7C,EAAkBtE,GAAG3D,GAAK8K,GAE3B4D,EAAwB9J,GAAG5E,GAAK8K,EAChC4D,EAAwB/K,GAAG3D,GAAK8K,EAEhCoE,EAAwBjJ,EAAoByI,GAE5C/D,GAAevQ,EAAS2U,EAAwBjE,IAKjDwE,IACIA,EAAc,GACjB,KAAM,mBAIR,GAAID,EAAuB,EAAG,CAE7B1E,GACCvQ,EACA4U,EACAlE,EAAcuE,GAIf,IAAIjT,EAAM2S,EAAuB1S,OACjC,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxB8Q,EAAS8F,EAAuB5W,IAAMgQ,EAAI4G,EAAuB5W,IAGlEiE,EAAM4S,EAA0B3S,OAChC,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxB8Q,EAAS+F,EAA0B7W,IAClCgQ,EAAI6G,EAA0B7W,IAIjC,MAAMyY,EAAKrC,YAAYC,MAKvB,OAJAkC,QAAQC,IAAI,OAAQrC,GACpBoC,QAAQC,IAAI,OAAQC,GACpBF,QAAQC,IAAI,kBAAmBC,EAAKtC,GAE7BrF,GAGK4H,GAAgBzC,MAC5BhU,EACA+M,EACAE,EACAD,EACAiH,GAAS,KAET,MAAM9T,EAAmBJ,EAAoBC,GAGvCkU,GAFkBjT,EAAmBjB,GAEhCmU,YAAYC,OAEjBC,EAAU,CAAEA,QAAS,IAErB,KAAE7G,EAAF,KAAQC,EAAR,KAAcL,EAAd,KAAoBG,GAAST,EAClC9M,EACA+M,EACAC,EACAC,OACA5K,OACAA,GAID,IAAIyM,EAAiB,IAAI3M,MAAM4K,EAAc9K,OAAS,GAClDkN,EAAUpC,EAAc9K,OAAS,EACrC,IAAK,IAAIlE,EAAI,EAAGA,EAAIoR,EAASpR,IAC5B+Q,EAAe/Q,GAAKgP,EAAchP,GAGnC,MAAM4P,EAAkB,CACvBtE,GAAI,CAAE1D,EAAG,EAAGC,EAAGwH,GACf9D,GAAI,CAAE3D,EAAGxF,EAAiBG,MAAOsF,EAAGwH,GACpC5C,GAAI,CAAE7E,EAAGxF,EAAiBG,MAAOsF,EAAG2H,GACpChE,GAAI,CAAE5D,EAAG,EAAGC,EAAG2H,IAGV+G,EAA0B,CAC/BjL,GAAI,IAAKsE,EAAgBtE,IACzBC,GAAI,IAAKqE,EAAgBrE,IACzBkB,GAAI,IAAKmD,EAAgBnD,IACzBjB,GAAI,IAAKoE,EAAgBpE,MAGpB,eAAEqE,EAAF,kBAAkBC,GAAsBH,EAC7C1N,EACA2N,EACA,EACAxN,EAAiBG,OAEZiU,EAAYC,GACjBxU,EACA4N,EACAC,GAGG0G,EAAUE,eACbH,EAAwBjL,GAAK,IAAKuE,EAAevE,IACjDiL,EAAwBhL,GAAK,IAAKsE,EAAetE,KAE9CiL,EAAUG,kBACbJ,EAAwB9J,GAAK,IAAKqD,EAAkBrD,IACpD8J,EAAwB/K,GAAK,IAAKsE,EAAkBtE,KAGrD,MAAMmN,EAAmB,CAMxBrN,GAAI,CAAE1D,EAAG6H,EAAM5H,EAAGwH,GAClB9D,GAAI,CAAE3D,EAAG8H,EAAM7H,EAAGwH,GAClB5C,GAAI,CAAE7E,EAAG8H,EAAM7H,EAAG2H,GAClBhE,GAAI,CAAE5D,EAAG6H,EAAM5H,EAAG2H,IAGboJ,EAA2B,CAChCtN,GAAI,IAAKqN,EAAiBrN,IAC1BC,GAAI,IAAKoN,EAAiBpN,IAC1BkB,GAAI,IAAKkM,EAAiBlM,IAC1BjB,GAAI,IAAKmN,EAAiBnN,MAI1BqE,eAAgBgJ,EAChB/I,kBAAmBgJ,GAChBnJ,EACH1N,EACA0W,EACAlJ,EAAOrN,EAAiBS,OACxB6M,EAAOtN,EAAiBS,QAGN4T,GAAkBxU,EAAS4W,GAE/BnC,eACdkC,EAAyBtN,GAAK,IAAKuN,EAAgBvN,IACnDsN,EAAyBrN,GAAK,IAAKsN,EAAgBtN,KAEhDuN,IACHF,EAAyBnM,GAAK,IAAKqM,EAAmBrM,IACtDmM,EAAyBpN,GAAK,IAAKsN,EAAmBtN,KAGvD,MAAMuL,EAAwBjJ,EAAoByI,GAClD,IAAIS,EAA2B3G,EAC9BpO,EACA8U,GAGGgC,EAAyBjL,EAAoB8K,GAEjD,MAAMI,EAAkE,EAAhD5W,EAAiBW,6BAEzC,IAAIkW,EAAY,EACZnI,EAAW,GACXmG,EAAgB,EAChBC,EAAuB,EAE3B,KAAOD,IAAkB7F,GAAS,CACjC,IAAIiG,EACJ,GAAkB,IAAd4B,EAAiB,CAEpBjC,EAAyB3E,KAAK,CAACC,EAAGC,IAAMD,EAAE1K,EAAI2K,EAAE3K,GAEhD,MAAQwP,GAAI8B,EAAe5C,QAASgB,GAAYC,GAC/CtV,EACA8U,EACAR,EACAS,EACAV,EAAQA,SAETe,EAAe6B,EACf5C,EAAQA,QAAUgB,MACZ,IAAkB,IAAd2B,EAAiB,CAC3B,MACCzI,iBAAkB2I,EADb,sBAEL5H,GACGd,GACHxO,EACA0W,EACAE,EACAC,EACAF,EACA9H,EACAC,GAEDiG,EAA2BmC,EAC3BpI,EAAiBQ,EACjBH,EAAUG,EAAsBrN,OAAS+S,EACzCgC,IACA,SACM,GAAIA,GAAa,EAAG,CAE1BjC,EAAyB3E,KAAK,CAACC,EAAGC,IAAMD,EAAE1K,EAAI2K,EAAE3K,GAEhD,MAAQwP,GAAI8B,EAAe5C,QAASgB,GAAYC,GAC/CtV,EACA8W,EACAH,EACA5B,EACAV,EAAQA,SAETe,EAAe6B,EACf5C,EAAQA,QAAUgB,GAGnB,MAAME,EAAeH,EAAaI,gBAClC7C,GAAQ4C,GAERE,GAAoBL,GAQpB,MAAM,YAAEM,EAAarB,QAASsB,SAAkBC,GAC/CL,EACAlB,EAAQA,SAETA,EAAQA,QAAUsB,EAQlB,MAAM,gBAAEE,GAAoBC,GAAeJ,IAQnC7G,SAAUkH,EAAW1B,QAAS4B,SAAkBC,GACvDlW,EACA8O,EAAehN,OAAQqU,IAAQtH,EAASsH,IACxCN,EACAhK,EAAoB+B,GACpB/B,EAAoBgC,GACN,IAAdmJ,EAAkB1C,EAA0BqC,EAC5CtC,EAAQA,SAETA,EAAQA,QAAU4B,EAElBpH,EAAW,IAAKA,KAAakH,GAC7B,MAAMK,EAAe3X,OAAO4X,OAAON,GAiBnC,GAhBAhB,EAA2B,IAAIA,KAA6BqB,GAE5DpB,GAAiBoB,EAAanU,OAE1B+S,IAAkB7F,GAAW6H,GAAa,IAE7C/B,IACAqB,QAAQC,IAAI,uBAAwBtB,GAEpC0B,EAAyBnM,GAAG5E,GAAKmR,EACjCJ,EAAyBpN,GAAG3D,GAAKmR,EACjCD,EAAyBjL,EAAoB8K,IAG9CK,IAEIA,EAAY,GACf,KAAM,mBAIR,MAAMR,EAAKrC,YAAYC,MAKvB,OAJAkC,QAAQC,IAAI,OAAQrC,GACpBoC,QAAQC,IAAI,OAAQC,GACpBF,QAAQC,IAAI,kBAAmBC,EAAKtC,GAE7BrF,GAGKsI,GAAoBnD,MAAOhU,EAAS8O,EAAgBzK,KAChE,MAAMlE,EAAmBJ,EAAoBC,GAGvCkU,GAFkBjT,EAAmBjB,GAEhCmU,YAAYC,OAEjBC,EAAU,CAAEA,QAAS,GAGrB5G,EAAOtN,EAAiBG,MACxB8M,EAAO/I,EACPkJ,EAAOlJ,EAASlE,EAAiBW,6BAEjCqO,EAAUL,EAAe7M,OAEzB0L,EAAkB,CACvBtE,GAAI,CAAE1D,EARM,EAQGC,EAAGwH,GAClB9D,GAAI,CAAE3D,EAAG8H,EAAM7H,EAAGwH,GAClB5C,GAAI,CAAE7E,EAAG8H,EAAM7H,EAAG2H,GAClBhE,GAAI,CAAE5D,EAXM,EAWGC,EAAG2H,IAGb+G,EAA0B,CAC/BjL,GAAI,IAAKsE,EAAgBtE,IACzBC,GAAI,IAAKqE,EAAgBrE,IACzBkB,GAAI,IAAKmD,EAAgBnD,IACzBjB,GAAI,IAAKoE,EAAgBpE,MAGpB,eAAEqE,GAAmBF,EAC1B1N,EACA2N,EACA,EACAxN,EAAiBG,OAEAkU,GAAkBxU,EAAS4N,GAE/B6G,eACbH,EAAwBjL,GAAK,IAAKuE,EAAevE,IACjDiL,EAAwBhL,GAAK,IAAKsE,EAAetE,KAGlD,IAAIwL,EAAwBjJ,EAAoByI,GAC5CS,EAA2B3G,EAC9BpO,EACA8U,GAGD,MAAMpE,EACLvQ,EAAiBW,6BACS,EAA1BX,EAAiBS,OACjB,GAED,IAAIoW,EAAY,EACZnI,EAAW,GACXmG,EAAgB,EAChBC,EAAuB,EAE3B,KAAOD,IAAkB7F,GAAS,CAEjC4F,EAAyB3E,KAAK,CAACC,EAAGC,IAAMD,EAAE1K,EAAI2K,EAAE3K,GAEhD,MAAQwP,GAAIC,EAAcf,QAASgB,GAAYC,GAC9CtV,EACA8U,EACAR,EACAS,EACAV,EAAQA,SAETA,EAAQA,QAAUgB,EAElB,MAAME,EAAeH,EAAaI,gBAClC7C,GAAQ4C,GAERE,GAAoBL,GAKpB,MAAM,YAAEM,EAAarB,QAASsB,SAAkBC,GAC/CL,EACAlB,EAAQA,SAETA,EAAQA,QAAUsB,EAKlB,MAAM,gBAAEE,GAAoBC,GAAeJ,IAKnC7G,SAAUkH,EAAW1B,QAAS4B,SAAkBC,GACvDlW,EACA8O,EAAehN,OAAQqU,IAAQtH,EAASsH,IACxCN,EACAhK,EAAoB+B,QACpBvL,EACAiS,EACAD,EAAQA,SAETA,EAAQA,QAAU4B,EAElBpH,EAAW,IAAKA,KAAakH,GAC7B,MAAMK,EAAe3X,OAAO4X,OAAON,GAqBnC,GApBAhB,EAA2B,IAAIA,KAA6BqB,GAE5DpB,GAAiBoB,EAAanU,OAE1B+S,IAAkB7F,IAErB8F,IACAqB,QAAQC,IAAI,uBAAwBtB,GAEpCtH,EAAgBnD,GAAG5E,GAAK8K,EACxB/C,EAAgBpE,GAAG3D,GAAK8K,EACxB4D,EAAwB9J,GAAG5E,GAAK8K,EAChC4D,EAAwB/K,GAAG3D,GAAK8K,EAEhCoE,EAAwBjJ,EAAoByI,IAG7C0C,IAEAA,IACIA,EAAY,IACf,KAAM,mBAIR,MAAMR,EAAKrC,YAAYC,MAKvB,OAJAkC,QAAQC,IAAI,OAAQrC,GACpBoC,QAAQC,IAAI,OAAQC,GACpBF,QAAQC,IAAI,kBAAmBC,EAAKtC,GAE7BrF,GAGK2F,GAAoB,CAACxU,EAASoX,EAAcC,KACxD,IAAIC,EAAYC,EAChB,MAAMjV,EAAM,CAAEmS,cAAc,EAAOC,iBAAiB,GACpD,GAAI0C,EAAc,CACjBE,EAAalJ,EACZpO,EACA6L,EAAoBuL,IAErB,MAAMI,EAAWC,GAAaL,EAAcE,GAExCE,EAAWJ,EAAa7N,GAAG3D,IAC9BwR,EAAa/N,GAAGzD,EAAI4R,EACpBJ,EAAa9N,GAAG1D,EAAI4R,EAEpBlV,EAAImS,cAAe,GAIrB,GAAI4C,EAAiB,CACpBE,EAAgBnJ,EACfpO,EACA6L,EAAoBwL,IAErB,MAAMG,EAAWE,GAAgBL,EAAiBE,GAE9CC,EAAWH,EAAgBhO,GAAGzD,IACjCyR,EAAgB9N,GAAG3D,EAAI4R,EACvBH,EAAgB7M,GAAG5E,EAAI4R,EAEvBlV,EAAIoS,iBAAkB,GAIxB,OAAOpS,GAGKmV,GAAe,CAACE,EAAMnH,KAClC,MAAMxO,EAAMwO,EAAMvO,OACZkT,EAAK,IAAIyC,0BAEf,IAAK,IAAI7Z,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBoX,EAAG0C,OAAO,CACTC,IAAKtH,EAAMzS,GAAG6H,EACdmS,KAAMvH,EAAMzS,GAAG6H,EAAI4K,EAAMzS,GAAGsG,OAC5BhG,EAAG,CACF4K,KAAMuH,EAAMzS,MAKf,IACIuE,EAAK0V,EADLC,EAAcN,EAAKpO,GAAG3D,EAEtBsS,GAAW,EAEf,IAAK,IAAIna,EAAI,EAAGA,EAAIiE,EAAKjE,IAAK,CAC7BuE,EAAM6S,EAAGgD,QAAQ,CAAEL,IAAKtH,EAAMzS,GAAG6H,EAAI4K,EAAMzS,GAAGsG,OAAQ0T,KAAMJ,EAAKpO,GAAG3D,IACpEoS,EAAO1V,EAAIL,OACXiW,GAAW,EACX,IAAK,IAAItF,EAAI,EAAGA,EAAIoF,EAAMpF,IACzB,GACCnG,EACCrD,EAAeoH,EAAMzS,IACrBqL,EAAe9G,EAAIsQ,GAAGvU,EAAE4K,SAExByD,EACAtD,EAAeoH,EAAMzS,IACrBqL,EAAe9G,EAAIsQ,GAAGvU,EAAE4K,OAExB,CACDiP,GAAW,EACX,OAGGA,GAAY1H,EAAMzS,GAAG6H,EAAI4K,EAAMzS,GAAGsG,OAAS4T,IAC/CA,EAAczH,EAAMzS,GAAG6H,EAAI4K,EAAMzS,GAAGsG,QAItC,OAAO4T,GAGKP,GAAkB,CAACC,EAAMnH,KACrC,MAAMxO,EAAMwO,EAAMvO,OACZkT,EAAK,IAAIyC,0BAEf,IAAK,IAAI7Z,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBoX,EAAG0C,OAAO,CACTC,IAAKtH,EAAMzS,GAAG6H,EACdmS,KAAMvH,EAAMzS,GAAG6H,EAAI4K,EAAMzS,GAAGsG,OAC5BhG,EAAG,CACF4K,KAAMuH,EAAMzS,MAKf,IACIuE,EAAK0V,EADLC,EAAcN,EAAKtO,GAAGzD,EAEtBsS,GAAW,EACf,IAAK,IAAIna,EAAI,EAAGA,EAAIiE,EAAKjE,IAAK,CAC7BuE,EAAM6S,EAAGgD,QAAQ,CAAEL,IAAKH,EAAKtO,GAAGzD,EAAGmS,KAAMvH,EAAMzS,GAAG6H,IAClDoS,EAAO1V,EAAIL,OACXiW,GAAW,EACX,IAAK,IAAItF,EAAI,EAAGA,EAAIoF,EAAMpF,IACzB,GACCnG,EACCrD,EAAeoH,EAAMzS,IACrBqL,EAAe9G,EAAIsQ,GAAGvU,EAAE4K,SAExByD,EACAtD,EAAeoH,EAAMzS,IACrBqL,EAAe9G,EAAIsQ,GAAGvU,EAAE4K,OAExB,CACDiP,GAAW,EACX,OAGGA,GAAY1H,EAAMzS,GAAG6H,EAAIqS,IAC7BA,EAAczH,EAAMzS,GAAG6H,GAIzB,OAAOqS,GAGK3C,GAAY,CAACtV,EAAS2X,EAAMS,EAAQ5H,EAAO6H,KAKvD,MAAMlY,EAAmBJ,EAAoBC,GAE7C,IAAIqU,EAAUgE,EAEd,MAAMlD,EAAK,IAAIyC,0BAQf,IAAIU,EANJnD,EAAG0C,OAAO,CACTC,IAAKM,EAAO/O,GAAGzD,EACfmS,KAAMK,EAAO7O,GAAG3D,EAChBvH,EAAG,CAAE8X,GAAI9B,IAAWpL,KAAM0O,EAAMtH,EAAG,GAAI7R,EAAG,GAAI+Z,IAAK,QAIpD,IACIC,EAEAjM,EAHAkM,EAAY,CAAEX,IAAK,EAAGC,KAAM,EAAG1Z,EAAG,MAElCqa,EAAO,EAEPC,EAAO,EAEX,MAAM3W,EAAMwO,EAAMvO,OAClB,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IAAK,CAC7Bua,EAAWlP,EAAeoH,EAAMzS,IAChC0a,EAAY,CAAEX,IAAKQ,EAASjP,GAAGzD,EAAGmS,KAAMO,EAAS/O,GAAG3D,GACpD4S,EAAYrD,EAAGgD,QAAQM,GACvBC,EAAOF,EAAUvW,OACjB,IAAK,IAAI2Q,EAAI,EAAGA,EAAI8F,EAAM9F,IACzB,GACCnJ,EACC+O,EAAU5F,GAAGvU,EAAE4K,KACfiF,GAAuB/N,EAAiBS,OAAQ4P,EAAMzS,KAEtD,CACDwO,EAAOrC,EACNsO,EAAU5F,GAAGvU,EAAE4K,KACfiF,GAAuB/N,EAAiBS,OAAQ4P,EAAMzS,KACtD,GAGD4a,EAAOpM,EAAKtK,OACZ,IAAK,IAAI2W,EAAI,EAAGA,EAAID,EAAMC,IACzBzD,EAAG0C,OAAO,CACTC,IAAKvL,EAAKqM,GAAGvP,GAAGzD,EAChBmS,KAAMxL,EAAKqM,GAAGrP,GAAG3D,EACjBvH,EAAG,CACF8X,GAAI9B,IACJpL,KAAM4C,EAAoBU,EAAKqM,IAC/BvI,EAAG,GACH7R,EAAG,GACH+Z,IAAK,QAKRpD,EAAG5M,OAAOiQ,EAAU5F,GAAGiG,SAAUL,EAAU5F,GAAGvU,IAKjD,MAAO,CAAE8W,KAAId,YAGDoB,GAAuBqD,IACnC,MAAMC,EAAaD,EAAStD,gBAEtBxT,EAAM+W,EAAW9W,OACvB,IAAI+W,EAAMC,EAEV,IAAK,IAAIlb,EAAI,EAAGA,EAAIiE,EAAKjE,IAAK,CAC7Bib,EAAOF,EAASX,QAAQY,EAAWhb,GAAG8a,UACtCI,EAAOD,EAAK/W,OACZ,IAAK,IAAI2Q,EAAI,EAAGA,EAAIqG,EAAMrG,IACrBzG,EAAiB4M,EAAWhb,GAAGM,EAAE4K,KAAM+P,EAAKpG,GAAGvU,EAAE4K,QACpD8P,EAAWhb,GAAGM,EAAEgS,EAAE2I,EAAKpG,GAAGvU,EAAE8X,IAAM6C,EAAKpG,MAM9BgD,GAAiB5B,MAAOuB,EAAc8C,KAClD,MAAMvF,EAAQ,IAAID,GACZqG,EAAU,IAAItB,0BAEduB,GADc,IAAItG,GACP,IAAI+E,2BAErB,IAAIwB,EACHC,EACAhU,EACAuF,EACA0O,EACAC,EACAC,EACA9D,EACA+D,EACGC,GAAsB,EACtBrF,EAAUgE,EACd,MAAMsB,EAAepE,EAAatT,OAElC,IAAK,IAAI2W,EAAI,EAAGA,EAAIe,EAAcf,IACjC,GAA8B,OAA1BrD,EAAaqD,GAAGva,EAAEka,IAKtB,IADAzF,EAAMG,KAAKsC,EAAaqD,KAChB9F,EAAMW,WAAW,CACxBpO,EAAMyN,EAAMM,MAEZxI,EAAOnM,OAAOmM,KAAKvF,EAAIhH,EAAEgS,GACzBiJ,EAAU1O,EAAK3I,OACfyX,GAAsB,EACtB,IAAK,IAAI3b,EAAI,EAAGA,EAAIub,EAASvb,IAAK,OACjC,GAAKsH,EAAIhH,EAAEgS,EAAEzF,EAAK7M,IAAlB,CAKA,IAFAsb,EAAMhU,EAAIhH,EAAEgS,EAAEzF,EAAK7M,IAEnB,UAAOsb,SAAP,iBAAO,EAAKhb,SAAZ,aAAO,EAAQka,KAAK,SACnBc,EAAMA,EAAIhb,EAAEka,IAGb7C,EAActJ,EAAW/G,EAAIhH,EAAE4K,KAAMoQ,EAAIhb,EAAE4K,MAC3CwQ,GAA2B,QAAX,EAAA/D,SAAA,eAAazT,SAAU,EACjB,IAAlBwX,IACHD,EAAa9D,EAAY,GAErB8D,IACHJ,EAAY,IAAK/T,EAAIhH,EAAEgS,KAAMgJ,EAAIhb,EAAEgS,UAC5B+I,EAAU/T,EAAIhH,EAAE8X,WAChBiD,EAAUC,EAAIhb,EAAE8X,IAEvBoD,EAAe,CACdlb,EAAG,CACF8X,GAAI9B,IACJpL,KAAMuQ,EACNnJ,EAAG+I,EACH5a,EAAG,GACH+Z,IAAK,OAIPqB,GAAgBL,GACXM,GAAwBX,EAASK,IACrCzG,EAAMG,KAAKsG,GAGRjN,EAAakN,EAAYH,EAAIhb,EAAE4K,QAClCoQ,EAAIhb,EAAEka,IAAMgB,GAGTjN,EAAakN,EAAYnU,EAAIhH,EAAE4K,QAClC5D,EAAIhH,EAAEka,IAAMgB,EACZG,GAAsB,MAMrBA,GACJG,GAAwBV,EAAU9T,GAKrC,MAAO,CAAEqQ,YAAayD,EAAS3D,gBAAiBnB,YAGpCwF,GAA0B,CAAC1E,EAAI2E,KAC3C,MAAMxX,EAAM6S,EAAGgD,QAAQ,CACtBL,IAAKgC,EAAIzb,EAAE4K,KAAKrD,EAChBmS,KAAM+B,EAAIzb,EAAE4K,KAAKrD,EAAIkU,EAAIzb,EAAE4K,KAAK5E,SAGjC,IAAI0V,GAAsB,EAC1B,MAAM/X,GAAMM,aAAA,EAAAA,EAAKL,SAAU,EAC3B,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,KAEvB2O,EACCtD,EAAe0Q,EAAIzb,EAAE4K,MACrBG,EAAe9G,EAAIvE,GAAGM,EAAE4K,QAEzBqD,EAAahK,EAAIvE,GAAGM,EAAE4K,KAAM6Q,EAAIzb,EAAE4K,SAElC8Q,GAAsB,GAYxB,OARKA,GACJ5E,EAAG0C,OAAO,CACTC,IAAKgC,EAAIzb,EAAE4K,KAAKrD,EAChBmS,KAAM+B,EAAIzb,EAAE4K,KAAKrD,EAAIkU,EAAIzb,EAAE4K,KAAK5E,OAChChG,EAAGyb,EAAIzb,IAIF0b,GAGKH,GAAkB,CAACL,EAAcS,KAC7C,MAAMR,EAAaD,EAAalb,EAAE4K,KAC5BgR,EAAOV,EAAalb,EAAEgS,EAC5B,IAAIgJ,EACJ,MAAMa,EAAWzb,OAAOmM,KAAKqP,GACvBE,EAAcD,EAASjY,OAC7B,IAAK,IAAI2Q,EAAI,EAAGA,EAAIuH,EAAavH,IAChCyG,EAAMY,EAAKC,EAAStH,IAEfzG,EAAiBqN,EAAYH,EAAIhb,EAAE4K,cAChCgR,EAAKC,EAAStH,KAKXkD,GAAkBJ,IAC9B,MAAMP,EAAK,IAAIyC,0BAET5V,EAAM0T,EAAYzT,OACxB,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxB2X,EAAY3X,GAAG+Z,IAAMpC,EAAY3X,GAAGM,EAAE4K,KAAKrD,EAC3C8P,EAAY3X,GAAGga,KACdrC,EAAY3X,GAAGM,EAAE4K,KAAKrD,EAAI8P,EAAY3X,GAAGM,EAAE4K,KAAK5E,OACjD8Q,EAAG0C,OAAOnC,EAAY3X,IAGvB,MAAMqc,EAAqB,GACrBC,EAAQlF,EAAGK,gBAEjB,IAAIlT,EAAKgY,EAET,IAAK,IAAIvc,EAAI,EAAGA,EAAIiE,EAAKjE,IAAK,CAC7BuE,EAAM6S,EAAGgD,QAAQkC,EAAMtc,GAAG8a,UAC1ByB,EAAOhY,EAAIL,OACX,IAAK,IAAI2Q,EAAI,EAAGA,EAAI0H,EAAM1H,IACzB,GACCyH,EAAMtc,GAAGM,EAAE4K,MACX3G,EAAIsQ,GAAGvU,EAAE4K,MACTqD,EAAa+N,EAAMtc,GAAGM,EAAE4K,KAAM3G,EAAIsQ,GAAGvU,EAAE4K,OACvCoR,EAAMtc,GAAGM,EAAE8X,KAAO7T,EAAIsQ,GAAGvU,EAAE8X,GAC1B,CACDiE,EAAmB9X,EAAIsQ,GAAGvU,EAAE8X,IAAM7T,EAAIsQ,GACtCtQ,EAAIsQ,GAAGvU,EAAEkc,MAAQjY,EAAIsQ,GAAGvU,EAAE4K,KAC1B3G,EAAIsQ,GAAGvU,EAAE4K,KAAO,KAEhB,MAAMuR,EAAQ/b,OAAO4X,OAAO/T,EAAIsQ,GAAGvU,EAAEG,GAC/Bic,EAAOD,EAAMvY,OACnB,IAAK,IAAI2W,EAAI,EAAGA,EAAI6B,EAAM7B,IAAK,QAEjB4B,EAAM5B,GACPva,EAAEG,EAAE8D,EAAIsQ,GAAGvU,EAAE8X,IAE1B7T,EAAIsQ,GAAGvU,EAAEG,EAAI,QACHiL,EAAe4Q,EAAMtc,GAAGM,EAAE4K,KAAM3G,EAAIsQ,GAAGvU,EAAE4K,QACnDoR,EAAMtc,GAAGM,EAAEG,EAAE8D,EAAIsQ,GAAGvU,EAAE8X,IAAM7T,EAAIsQ,GAChCtQ,EAAIsQ,GAAGvU,EAAEG,EAAE6b,EAAMtc,GAAGM,EAAE8X,IAAMkE,EAAMtc,IAKrC,MAAM2c,EAAS,IAAIvY,MAAMH,GACzB,IAAII,EAAQ,EACZ,IAAK,IAAIrE,EAAI,EAAGA,EAAIiE,EAAKjE,IACpBsc,EAAMtc,GAAGM,EAAE4K,OACdyR,EAAOtY,KAAWiY,EAAMtc,IAI1B,MAAM4c,EAAiB,IAAIxY,MAAMC,GACjC,IAAK,IAAIrE,EAAI,EAAGA,EAAIqE,EAAOrE,IAC1B4c,EAAe5c,GAAK2c,EAAO3c,GAG5B,MAAO,CACN8X,gBAAiB8E,EACjBP,mBAAoB3b,OAAO4X,OAAO+D,KAcvBlE,GAAUlC,MACtBhU,EACA8O,EACA+G,EACAuB,EACAC,EACA/C,EACA+D,KAKA,MAAMtK,EAAM5K,EAAwBnD,GAC9BG,EAAmBJ,EAAoBC,GAE7C,IAAIqU,EAAUgE,EACd,MAAMxJ,EAAW,GACX8F,EAAyB,GAG/BhC,GAAQkD,GACR,MAAM+E,EAAQ,IAAIC,cACZC,EAAQjF,EAAgB5T,OAC9B,IAAK,IAAIlE,EAAI,EAAGA,EAAI+c,EAAO/c,IAC1B6c,EAAM/C,OAAO,CACZjI,EAAGiG,EAAgB9X,GAAGM,EAAE4K,KAAK9D,MAC7B9G,EAAGwX,EAAgB9X,GAAGM,IAIxB,MAAM8Q,EAAUL,EAAe7M,OAEzB8Y,EAAsB,IAAIlI,GAC1BmI,EAA2B,IAAInI,GAE/BoI,EP5tB+B,EAACjb,EAAS+M,KAC/C,MAAMgB,EAAM5K,EAAwBnD,GAE9BgC,EAAM+K,EAAc9K,OAC1B,IAAI8F,EAKAoI,EAJA+K,EAAY,EACZC,EAAW,EACXnL,EAAW,EAIf,IAAK,IAAIjS,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgK,EAAOgG,EAAIhB,EAAchP,IAErBgK,EAAK5C,MAAQgW,IAChBA,EAAWpT,EAAK5C,OAGb4C,EAAK1D,OAAS6W,IACjBA,EAAYnT,EAAK1D,QAInB2L,EAAWmL,EAAWD,EAEtB,MAAME,EAAW,IAAIjZ,MAAMH,GAC3B,IAAK,IAAIjE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgK,EAAOgG,EAAIhB,EAAchP,IAEzBoS,EAAQJ,GAAShI,EAAMiI,GACvBoL,EAASrd,GAAK,CAAEoS,QAAO9R,EAAG0O,EAAchP,IAKzC,OAFAqd,EAAShL,KAAK,CAACC,EAAGC,IAAMD,EAAEF,MAAQG,EAAEH,OAE7BiL,GOyrByBC,CAC/Brb,EACA8O,GAED,IAAK,IAAI/Q,EAAI,EAAGA,EAAIoR,EAASpR,IAC5Bgd,EAAoB9H,KAAKgI,EAAwBld,IAGlD,IAAIsH,EACAiW,EACAC,EAEJ,MAAQR,EAAoBtH,WAAW,CAatC,GAZApO,EAAM0V,EAAoB3H,MAE1BkI,EAAQvN,EAAI1I,EAAIhH,GAEhBkd,EAAWX,EAAMY,oBAChB9L,GACCxB,GAAuB/N,EAAiBS,OAAQ0a,IAEjDzL,GAAUyL,EAAMnW,OAChB2K,KAGIyL,EAAStZ,OAAQ,CACrB+Y,EAAyB/H,KAAK5N,GAC9B,SAGD,MAAMoW,EAAKxL,GAAgBsL,EAAUD,EAAMnW,MAAQmW,EAAMjX,QAEzDiX,EAAM3V,EAAI8V,EAAGpd,EAAE4K,KAAKtD,EAAIxF,EAAiBS,OACzC0a,EAAM1V,EAAI6V,EAAGpd,EAAE4K,KAAKrD,EAAIzF,EAAiBS,OAEzCiO,EAASxJ,EAAIhH,GAAKid,EAEdjE,GAAmB/K,EAAa+K,EAAiBoE,EAAGpd,EAAE4K,QAEzD0L,EAAuBtP,EAAIhH,GAAKgH,EAAIhH,GAMrC,MAAM,OAAE0N,EAAQsI,QAASgB,SAAkBqG,GAC1C1b,EACAsb,EACAG,EACAb,EACAvG,GAEDA,EAAUgB,EAEV,MAAMsG,EAAS5P,EAAO9J,OACtB,IAAK,IAAIlE,EAAI,EAAGA,EAAI4d,EAAQ5d,IAC3BgO,EAAOhO,GAAG6R,EAAI7D,EAAOhO,GAAGM,EAAE4K,KAAK9D,MAC/ByV,EAAM/C,OAAO9L,EAAOhO,IAMtB,MAAO,CACN8Q,WACA8F,yBACAN,YAIWqH,GAAiB1H,MAAOhU,EAASsb,EAAOG,EAAIb,EAAOvC,KAAW,MAC1E,MAAMlY,EAAmBJ,EAAoBC,GAE7C,IACIuM,EACAqP,EACAC,EAGAC,EAEAC,EAEAC,EACAC,EAXA5H,EAAUgE,EAad,MAAM6D,EAAmB,GAEnBC,EAAY,IAAItJ,GAEhBuJ,EAAkB,CACvBzW,EAAG2V,EAAM3V,EAAIxF,EAAiBS,OAC9BgF,EAAG0V,EAAM1V,EAAIzF,EAAiBS,OAC9BuE,MAAOmW,EAAMnW,MAAkC,EAA1BhF,EAAiBS,OACtCyD,OAAQiX,EAAMjX,OAAmC,EAA1BlE,EAAiBS,QAEzCga,EAAMrS,OAAOkT,EAAG7L,EAAG6L,EAAGpd,GAEtBkO,EAAOrC,EAAauR,EAAGpd,EAAE4K,KAAMmT,GAC/BR,GAAc,QAAJ,EAAArP,SAAA,eAAMtK,SAAU,EAC1B,IAAK,IAAIlE,EAAI,EAAGA,EAAI6d,EAAS7d,IAC5B8d,EAAU,CACTjM,EAAGrD,EAAKxO,GAAGoH,MACX9G,EAAG,CACF8X,GAAI9B,IACJpL,KAAMsD,EAAKxO,GACXsS,EAAG,GACH7R,EAAG,GACH+Z,IAAK,OAIP4D,EAAUlJ,KAAK4I,GAGhB,IAAIQ,GAAe,EACnB,MAAMC,EAAiB,IAAKb,EAAGpd,EAAEG,GAC3B+d,EAAS9d,OAAO4X,OAAOoF,EAAGpd,EAAEG,GAC5Bge,EAAaD,EAAOta,OAC1B,IAAK,IAAI2Q,EAAI,EAAGA,EAAI4J,EAAY5J,IAAK,CAQc,MAAlD,GAPAkJ,EAAOS,EAAO3J,UACPkJ,EAAKzd,EAAEG,EAAEid,EAAGpd,EAAE8X,IAGrByE,EAAMrS,OAAOuT,EAAKzd,EAAE4K,KAAK9D,MAAO2W,EAAKzd,GAErCge,GAAe,EACX5S,EAAeqS,EAAKzd,EAAE4K,KAAMmT,IAK/B,GAJAC,GAAe,EACf9P,EAAOrC,EAAa4R,EAAKzd,EAAE4K,KAAMmT,GACjCR,GAAc,QAAJ,EAAArP,SAAA,eAAMtK,SAAU,EAEtB2Z,EACH,IAAK,IAAIhD,EAAI,EAAGA,EAAIgD,EAAShD,IAC5BiD,EAAU,CACTjM,EAAGrD,EAAKqM,GAAGzT,MACX9G,EAAG,CACF8X,GAAI9B,IACJpL,KAAMsD,EAAKqM,GACXvI,EAAG,GACH7R,EAAG,GACH+Z,IAAK,OAIP4D,EAAUlJ,KAAK4I,QAIjBM,EAAUlJ,KAAK6I,GACfA,EAAKzd,EAAEgS,EAAI,GAGZ2L,EAASvd,OAAOmM,KAAKkR,EAAKzd,EAAEG,GAC5Byd,EAAYD,EAAO/Z,OACnB,IAAK,IAAI2W,EAAI,EAAGA,EAAIqD,EAAWrD,IAC9BmD,EAAQD,EAAKzd,EAAEG,EAAEwd,EAAOpD,IACnB0D,EAAeN,EAAOpD,MAC1BsD,EAAiBF,EAAOpD,IAAMmD,GAE3BM,UACIN,EAAM1d,EAAEG,EAAEsd,EAAKzd,EAAE8X,IAO3B,MAAMsG,EAAgBN,EAAUzI,UAC1BgJ,EAAmBD,EAAcxa,OACjCkT,EAAK,IAAIyC,0BACf,IAAK,IAAI7Z,EAAI,EAAGA,EAAI2e,EAAkB3e,IACrCoX,EAAG0C,OAAO,CACTC,IAAK2E,EAAc1e,GAAGM,EAAE4K,KAAKrD,EAC7BmS,KAAM0E,EAAc1e,GAAGM,EAAE4K,KAAKrD,EAAI6W,EAAc1e,GAAGM,EAAE4K,KAAK5E,OAC1DhG,EAAGoe,EAAc1e,GAAGM,IAItBoX,GAAoBN,GACpB,MAAM,YAAEO,EAAarB,QAASgB,SAAkBO,GAC/CuG,EAAUzI,UACVW,IAIAwB,gBAAiB8G,EADZ,mBAELvC,GACGtE,GAAe,IAAIJ,KAAgBjX,OAAO4X,OAAO6F,KAE/CU,EAAwBxC,EAAmBnY,OACjD,IAAK,IAAIlE,EAAI,EAAGA,EAAI6e,EAAuB7e,IAC1C6c,EAAMrS,OAAO6R,EAAmBrc,GAAGM,EAAEkc,MAAMpV,MAAOiV,EAAmBrc,GAAGM,GAGzE,MAAMwe,EAAsBF,EAAiB1a,OACvC4T,EAAkB,IAAI1T,MAAM0a,GAClC,IAAIza,EAAQ,EACZ,IAAK,IAAIrE,EAAI,EAAGA,EAAI8e,EAAqB9e,IACnCme,EAAiBS,EAAiB5e,GAAGM,EAAE8X,MAC3CN,EAAgBzT,KAAWua,EAAiB5e,IAQ9C,MAAO,CAAEgO,OAJuBjK,EAAO+T,GAIGxB,QAASgB,IClwCvCyH,GAAS,SAAU9c,EAAS+c,GAAQ,GAChD,MAAM3b,EAAUoF,EAAWxG,GACrB4C,EAAKI,EAAgBhD,GACrBG,EAAmBJ,EAAoBC,GACvCgB,EAAkBC,EAAmBjB,GACrC+D,EAAIH,EAAY5D,GAChBqD,EAAYD,EAAapD,GAE/BkS,GAAmBhU,KAAK8B,GAExB,MAAMgC,EAAMY,EAAGX,OAEf,IAAIvB,EAAqB,EACrBqc,IACHrc,EAAqBP,EAAiBO,oBAGvC,MAAMsc,EAAQ,IAAI7a,MAAMH,GACxB,IAAIib,EAEJ,GAAK/b,EAASlB,GAwBP,CACN,MAAMgI,EAAY,0DAClBiV,EAAMC,GAA0Bta,GAEhC,IAAK,IAAI7E,EAAI,EAAGA,EAAIiE,EAAKjE,IAAK,CAC7B6E,EAAG7E,GAAG4H,GAAKjF,EACXkC,EAAG7E,GAAG6H,GAAKlF,EACXkC,EAAG7E,GAAGoH,OAASzE,EACfkC,EAAG7E,GAAGsG,QAAU3D,EAEhBuc,EAAIlf,GAAGoH,MAAQhF,EAAiBG,MAChC2c,EAAIlf,GAAGsG,OACNlE,EAAiBG,MAAQU,EAAgBmc,oBAE1C,MAAMC,EAASC,SAASC,cAAc,OACtCF,EAAOjV,aAAa,QAASH,GAC7BoV,EAAOjV,aAAa,aAAc8U,EAAIlf,GAAGwf,OACzCH,EAAOhZ,MAAMe,MAAW8X,EAAIlf,GAAGoH,MAAT,KACtBiY,EAAOhZ,MAAMC,OAAY4Y,EAAIlf,GAAGsG,OAAT,KASvB2Y,EAAMjf,GAAKqf,OAnDW,CACvB,IAAIpV,EAAY,yBACS,IAArB5G,EAAQoQ,WACXxJ,EAAY,wDAGb,IAAK,IAAIjK,EAAI,EAAGA,EAAIiE,EAAKjE,IAAK,CAC7B6E,EAAG7E,GAAG4H,GAAKjF,EACXkC,EAAG7E,GAAG6H,GAAKlF,EACXkC,EAAG7E,GAAGoH,OAASzE,EACfkC,EAAG7E,GAAGsG,QAAU3D,EAEhB,MAAM0c,EAASC,SAASC,cAAc,OACtCF,EAAOjV,aAAa,QAASH,GAC7BoV,EAAOjV,aAAa,aAAcpK,GAClCqf,EAAOhZ,MAAMgE,UAAa,aAAYxF,EAAG7E,GAAG4H,QAAQ/C,EAAG7E,GAAG6H,OAC1DwX,EAAOhZ,MAAMe,MAAWvC,EAAG7E,GAAGoH,MAAR,KACtBiY,EAAOhZ,MAAMC,OAAYzB,EAAG7E,GAAGsG,OAAR,KAKvB2Y,EAAMjf,GAAKqf,GAkCb,MAAM3U,EAAW1E,EAAEJ,qBAAqB1B,OACxC,IAAK,IAAIlE,EAAI,EAAGA,EAAI0K,EAAU1K,IAC7BgG,EAAEC,gBAAgBwZ,YAAYzZ,EAAEJ,qBAAqB5F,IAGtD,IAAK,IAAIA,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgG,EAAEC,gBAAgByZ,YAAYT,EAAMjf,IAGrC,IAAK,IAAIA,EAAI,EAAGA,EAAIiE,EAAKjE,IAAK,CAC7B,MAAMqf,EAASJ,EAAMjf,GACrB,GAAKmD,EAASlB,GAGP,CACN,MAAM0d,EAAara,EAAUsa,cAC5B5f,EACAkf,EAAIlf,GAAGoH,MACP8X,EAAIlf,GAAGsG,QAERuZ,GAAkB5d,EAAS0d,EAAYN,OAThB,CACvB,MAAMM,EAAara,EAAUsa,cAAc5f,EAAG6E,EAAG7E,GAAGoH,MAAOvC,EAAG7E,GAAGsG,QACjEuZ,GAAkB5d,EAAS0d,EAAYN,IAWzC1Z,EAAwB1D,EAAS,IAC7B+D,EAAEC,gBAAgB6Z,uBAAuB,2BAI7CxM,GAAiBnT,KAAK8B,GAElBqD,EAAUya,gBACbza,EAAUya,kBAsBCC,GAAU/J,eAAgBhU,EAAS+H,GAC/C,MAAM3G,EAAUoF,EAAWxG,GACrB+D,EAAIH,EAAY5D,GAChBqD,EAAYD,EAAapD,GACzBG,EAAmBJ,EAAoBC,GACvCgB,EAAkBC,EAAmBjB,GAE3CkS,GAAmBhU,KAAK8B,GAExB,IACC,IAAIge,GAAQ,EACZ,GAAIjW,EAAKpC,GAAKoC,EAAKnC,GAAKmC,EAAK5C,OAAS4C,EAAK1D,QAQ1C,GAPA2Z,EAAQrN,GACP3Q,EACA+H,EAAKpC,EACLoC,EAAKnC,EACLmC,EAAK5C,MACL4C,EAAK1D,QAEF2Z,EAAO,CACV,MAAMpb,EAAKI,EAAgBhD,GAC3BiD,EAAwBjD,EAAS4C,GACjC,MAAMmL,EAAM5K,EAAwBnD,GACpC+N,EAAIkF,KAAKlL,GACTpF,EAAgB3C,EAAS+N,QAEpB,KAAIhG,EAAK5C,QAAS4C,EAAK1D,QAAW0D,EAAKpC,GAAMoC,EAAKnC,EAmBxD,OAAO,EAnBoD,CAC3D,MAAMhD,EAAKI,EAAgBhD,GAC3BiD,EAAwBjD,EAAS4C,GACjC,MAAMmL,EAAM5K,EAAwBnD,GAE9Bie,ECzJsBje,KAC9B,MAAM4C,EAAKI,EAAgBhD,GACrBG,EAAmBJ,EAAoBC,GAE7C,IACI+H,EADAkG,EAAM9N,EAAiBS,OAE3B,MAAMoB,EAAMY,EAAGX,OAEf,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgK,EAAOmG,GAAuB/N,EAAiBS,OAAQgC,EAAG7E,IACtDgK,EAAKnC,EAAImC,EAAK1D,OAAS4J,IAC1BA,EAAMlG,EAAKnC,EAAImC,EAAK1D,QAItB,OAAO4J,GD0IWiQ,CAAele,GAC/B+N,EAAIkF,KAAK,CACRtN,OAAGtD,EACHuD,OAAGvD,EACH8C,MAAO4C,EAAK5C,MACZd,OAAQ0D,EAAK1D,eAES8S,GACtBnX,EACA,CAAC+N,EAAI9L,OAAS,GACdgc,GAEDtb,EAAgB3C,EAAS+N,IAK1B,MAAMnL,EAAKI,EAAgBhD,GAErBud,EADM3a,EAAGX,OACK,EACpB,IAAIyb,EAEJ,MAAMN,EAASC,SAASC,cAAc,OACtC,GAAKpc,EAASlB,GAkBP,CACN,MAAMgI,EACL,0DAEDoV,EAAOjV,aAAa,QAASH,GAC7BoV,EAAOjV,aAAa,aAAcoV,GAClCH,EAAOhZ,MAAMe,MAAWhF,EAAiBG,MAAnB,KACtB8c,EAAOhZ,MAAMC,OACZlE,EAAiBG,MAAQU,EAAgBmc,oBADnB,KAIvBO,EAAara,EAAUsa,cACtBJ,EACApd,EAAiBG,MACjBH,EAAiBG,MAAQU,EAAgBmc,oBACzC,aAjCsB,CACvB,IAAInV,EAAY,yBACS,IAArB5G,EAAQoQ,WACXxJ,EAAY,wDAGboV,EAAOjV,aAAa,QAASH,GAC7BoV,EAAOjV,aAAa,aAAcoV,GAClCH,EAAOhZ,MAAMgE,UAAa,aAAYxF,EAAG2a,GAAO5X,QAAQ/C,EAAG2a,GAAO3X,OAClEwX,EAAOhZ,MAAMe,MAAWvC,EAAG2a,GAAOpY,MAAZ,KACtBiY,EAAOhZ,MAAMC,OAAYzB,EAAG2a,GAAOlZ,OAAZ,KAEvBqZ,EAAara,EAAUsa,cACtBJ,EACA3a,EAAG2a,GAAOpY,MACVvC,EAAG2a,GAAOlZ,OACV,SAqBFN,EAAEC,gBAAgByZ,YAAYL,GAE9BQ,GAAkB5d,EAAS0d,EAAYN,GAEvC1Z,EAAwB1D,EAAS,IAC7B+D,EAAEC,gBAAgB6Z,uBAAuB,2BAGzCxa,EAAU8a,aACb9a,EAAU8a,YAAYZ,GAEtB,MAAOa,GACR9H,QAAQ8H,MAAMA,GAGf/M,GAAiBnT,KAAK8B,IAkCVkd,GAA6Bta,IACzC,MAAMZ,EAAMY,EAAGX,OACTF,EAAM,IAAII,MAAMH,GACtB,IAAK,IAAIjE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgE,EAAIhE,GAAK,IAAK6E,EAAG7E,IACjBgE,EAAIhE,GAAGwf,MAAQxf,EAGhB,OAAOgE,EAAIqO,KAAK,CAACC,EAAGC,IACfD,EAAEzK,IAAM0K,EAAE1K,EACNyK,EAAE1K,EAAI2K,EAAE3K,EAET0K,EAAEzK,EAAI0K,EAAE1K,IAIJgY,GAAoB,CAAC5d,EAAS0d,EAAYN,KACtD,MAAM/Z,EAAYD,EAAapD,GACL,iBAAf0d,EACVN,EAAOiB,UAAYX,EACTA,aAAsBY,SAChClB,EAAOiB,UAAY,GACnBjB,EAAOK,YAAYC,IACTra,EAAUkb,cACpBlb,EAAUkb,aAAab,EAAYN,IE5QxBzL,GAAkB,SAAU7M,GACxC,MAAMf,EAAIH,EAAY0N,MAChBtQ,EAAkBC,EAAmBqQ,MAErCkN,EAAO/L,GAAuBnB,MAC9BC,EAAKJ,GAAmBG,MAE1BxM,EAAM4C,OAAOM,UAAUyW,SAAS,sBACnC3Z,EAAM4Z,kBAKa,IAAhB5Z,EAAMkC,QAIVwX,EAAKG,iBAAkB,EACvBH,EAAKI,wBAAyB,EAE9BC,aAAaL,EAAKM,gBAClBN,EAAKM,eAAiBC,WACrBC,GAAezf,KAAK+R,KAAMxM,EAAOA,EAAMoC,QAASpC,EAAMqC,SACtDnG,EAAgBie,iBAGjBlb,EAAEC,gBAAgB0N,iBAAiB,YAAaH,EAAG2N,iBACnD7B,SAAS3L,iBAAiB,UAAWH,EAAG4N,eACxC9B,SAAS3L,iBAAiB,cAAeH,EAAG6N,sBAGhCvN,GAAmB,SAAU/M,GACzC,MAAMf,EAAIH,EAAY0N,MAChBtQ,EAAkBC,EAAmBqQ,MAErCkN,EAAO/L,GAAuBnB,MAC9BC,EAAKJ,GAAmBG,MAEzBxM,EAAM4C,OAAOM,UAAUyW,SAAS,qBAIR,IAAzB3Z,EAAMmB,QAAQhE,QAWE,IAAhB6C,EAAMkC,QAKVwX,EAAKa,eAAgB,EACrBb,EAAKc,sBAAuB,EAE5Bvb,EAAEC,gBAAgB0N,iBAAiB,YAAaH,EAAGgO,iBACnDlC,SAAS3L,iBAAiB,WAAYH,EAAGiO,gBACzCnC,SAAS3L,iBAAiB,cAAeH,EAAGkO,mBAC5CpC,SAAS3L,iBAAiB,cAAeH,EAAGmO,wBAC5CrN,GAA4BnU,KAAKoT,MAEjCuN,aAAaL,EAAKmB,gBAClBnB,EAAKmB,eAAiBZ,WACrBa,GAAargB,KAAK+R,KAAMxM,GACxB9D,EAAgB6e,iBAGjB/a,EAAM4Z,oBAIMM,GAAiB,SAAUla,EAAOoC,EAASC,GACvD,MAAMpD,EAAIH,EAAY0N,MAChBnR,EAAmBJ,EAAoBuR,MAEvCkN,EAAO/L,GAAuBnB,MAEpC,IAA6B,IAAzBkN,EAAKG,gBAA2B,CACnCH,EAAKI,wBAAyB,EAE9B,IAAIla,EAAYX,EAAEC,gBAAgBU,UAE9BiB,EAAIuB,EADSnD,EAAEC,gBAAgBsB,WACJnF,EAAiBqF,aAC5CI,EAAIuB,EAAUzC,EAAYvE,EAAiBuF,YAE/C8Y,EAAK1W,eAAiB,CACrB/B,KAAM,MACN+Z,aAAcna,EACdoa,aAAcna,GAGf7B,EAAE8I,2BAA2BzI,MAAMC,OAAS,MAC5CN,EAAE8I,2BAA2BzI,MAAMe,MAAQ,MAC3CpB,EAAE8I,2BAA2BzI,MAAMgE,UAAa,aAAYzC,QAAQC,OACpE7B,EAAE8I,2BAA2B1E,aAAa,aAAe,kBAEzDwE,EAAc2E,QAOHsO,GAAe,SAAU9a,GACrC,MAAMf,EAAIH,EAAY0N,MAEhBkN,EAAO/L,GAAuBnB,MAEpC,IAA2B,IAAvBkN,EAAKa,cAAyB,CACjCb,EAAKc,sBAAuB,EAE5B,IAAIU,EAA4Bna,EAAwByL,KAAMxM,GAE1Da,EAAIqa,EAA0Bra,EAC9BC,EAAIoa,EAA0Bpa,EAElC4Y,EAAK1W,eAAiB,CACrB/B,KAAM,MACN+Z,aAAcna,EACdoa,aAAcna,GAQfmZ,WAL4C,WAC3Chb,EAAEkc,8BAA8BjY,UAAUO,OACzC,6CAG+ChJ,KAAK+R,MAAO,KAE7DvN,EAAE8I,2BAA2BzI,MAAMC,OAAS,MAC5CN,EAAE8I,2BAA2BzI,MAAMe,MAAQ,MAC3CpB,EAAE8I,2BAA2BzI,MAAMgE,UAAa,aAAYzC,QAAQC,OACpE7B,EAAE8I,2BAA2B1E,aAAa,aAAe,kBAEzDwE,EAAc2E,MAEdvN,EAAEkc,8BAA8B7b,MAAMgE,UAAa,aAAYzC,QAAQC,OACvE7B,EAAEkc,8BAA8BjY,UAAUC,IACzC,4CAGDnD,EAAMob,mBAMKhB,GAAkB,SAAUpa,GACxC,MAAMf,EAAIH,EAAY0N,MAChBnR,EAAmBJ,EAAoBuR,MACvCtQ,EAAkBC,EAAmBqQ,MAErCkN,EAAO/L,GAAuBnB,MACzBH,GAAmBG,MAE9B,IAAoC,IAAhCkN,EAAKI,uBAAiC,CACzC7a,EAAE8I,2BAA2B7E,UAAUO,OACtC,uCACA,2CAGD,MAAM7D,EAAYX,EAAEC,gBAAgBU,UAC9BY,EAAavB,EAAEC,gBAAgBsB,WAE/BK,EAAI6Y,EAAK1W,eAAegY,aACxBla,EAAI4Y,EAAK1W,eAAeiY,aAExBI,EACLrb,EAAMoC,QAAUvB,EAAIL,EAAanF,EAAiBqF,aAC7C4a,EACLtb,EAAMqC,QAAUvB,EAAIlB,EAAYvE,EAAiBuF,YAElD8Y,EAAK1W,eAAeqY,SAAWA,EAC/B3B,EAAK1W,eAAesY,UAAYA,EAEhC,MAAMC,EAAiBvb,EAAMqC,QAAUzC,EACvCb,EAAayN,KAAM+O,GAEfF,EAAW,GAAKC,EAAY,IAC/Brc,EAAE8I,2BAA2BzI,MAAMe,MAAQgb,EAAW,KACtDpc,EAAE8I,2BAA2BzI,MAAMC,OAAS+b,EAAY,KACxDrc,EAAE8I,2BAA2B1E,aAC5B,aACC,MAAKxB,SAASwZ,YAAmBxZ,SAASyZ,SAIC,QAA1Cpf,EAAgB4L,uBACnBiS,aAAaL,EAAK8B,kCAClB9B,EAAK8B,iCAAmCvB,WACvCwB,GAAyBhhB,KACxB+R,KACAkN,EAAK1W,eAAegY,aACpBtB,EAAK1W,eAAeiY,aACpBI,EACAC,GAEDpf,EAAgBwf,iBAEmC,aAA1Cxf,EAAgB4L,wBAC1BiS,aAAaL,EAAKiC,mCAClBjC,EAAKiC,kCAAoC1B,WACxC2B,GAA0BnhB,KACzB+R,KACAkN,EAAK1W,eAAegY,aACpBtB,EAAK1W,eAAeiY,aACpBI,EACAC,GAEDpf,EAAgBwf,sBAIlBpB,GAAkBlhB,KAAKoT,KAAMxM,GAQ9BA,EAAM4Z,mBAGMa,GAAkB,SAAUza,GACxC,MAAMf,EAAIH,EAAY0N,MAChBnR,EAAmBJ,EAAoBuR,MACvCtQ,EAAkBC,EAAmBqQ,MAErCkN,EAAO/L,GAAuBnB,MACzBH,GAAmBG,MAE9B,IAAkC,IAA9BkN,EAAKc,sBAA0D,IAAzBxa,EAAMmB,QAAQhE,OAAc,CACrE8B,EAAE8I,2BAA2B7E,UAAUO,OACtC,uCACA,2CAGD,MAAM7D,EAAYX,EAAEC,gBAAgBU,UAC9BY,EAAavB,EAAEC,gBAAgBsB,WAE/BK,EAAI6Y,EAAK1W,eAAegY,aACxBla,EAAI4Y,EAAK1W,eAAeiY,aAExBC,EAA4Bna,EAAwByL,KAAMxM,GAE1Dqb,EAAWH,EAA0Bra,EAAIA,EACzCya,EAAYJ,EAA0Bpa,EAAIA,EAgBhD,IAdkC,IAA9Boa,IACHxB,EAAK1W,eAAeqY,SAAWA,EAC/B3B,EAAK1W,eAAesY,UAAYA,EAE5BD,EAAW,GAAKC,EAAY,IAC/Brc,EAAE8I,2BAA2BzI,MAAMe,MAAQgb,EAAW,KACtDpc,EAAE8I,2BAA2BzI,MAAMC,OAAS+b,EAAY,KACxDrc,EAAE8I,2BAA2B1E,aAC5B,aACC,MAAKxB,SAASwZ,YAAmBxZ,SAASyZ,WAKZ,IAA9BJ,EAAqC,CACxC,MAAMW,EAAmC5c,EAAEC,gBAAgBgB,wBAGrDP,GADLV,EAAEC,gBAAgBqD,YAAcsZ,EAAiCzb,KAEjEnB,EAAEC,gBAAgBuD,aAAeoZ,EAAiCtb,KAK7Db,GAHLwb,EAA0Bra,EAC1BxF,EAAiBqF,aAGjBwa,EAA0Bpa,EAAIzF,EAAiBuF,YAAchB,GAExDkc,EAAiBZ,EAA0Bpa,EACjD/B,EAAayN,KAAMsP,GAEnB,MAAMjc,EAAkBJ,EACvB+M,KACA9M,EACAC,GAG6C,QAA1CzD,EAAgB4L,uBACnBiS,aAAaL,EAAK8B,mCACM,IAApB3b,IACH6Z,EAAK8B,iCAAmCvB,WACvCwB,GAAyBhhB,KACxB+R,KACAkN,EAAK1W,eAAegY,aACpBtB,EAAK1W,eAAeiY,aACpBI,EACAC,GAEDpf,EAAgBwf,kBAGkC,aAA1Cxf,EAAgB4L,wBAC1BiS,aAAaL,EAAKiC,oCACM,IAApB9b,IACH6Z,EAAKiC,kCAAoC1B,WACxC2B,GAA0BnhB,KACzB+R,KACAkN,EAAK1W,eAAegY,aACpBtB,EAAK1W,eAAeiY,aACpBI,EACAC,GAEDpf,EAAgBwf,kBAKpB1b,EAAMob,sBAENd,GAAkBlhB,KAAKoT,MAUxBxM,EAAM4Z,mBAGMS,GAAgB,SAAUra,GACtC,MAAMf,EAAIH,EAAY0N,MAChBtQ,EAAkBC,EAAmBqQ,MAErCkN,EAAO/L,GAAuBnB,MAEpCuN,aAAaL,EAAK8B,kCAClBzB,aAAaL,EAAKM,gBAElB,IAAoC,IAAhCN,EAAKI,wBACR,GAA8C,QAA1C5d,EAAgB4L,uBACnB,GACC+D,GACCW,KACAkN,EAAK1W,eAAegY,aACpBtB,EAAK1W,eAAeiY,aACpBvB,EAAK1W,eAAeqY,SACpB3B,EAAK1W,eAAesY,WAEpB,CACD,IAAIrY,EAAO,CACVpC,EAAG6Y,EAAK1W,eAAegY,aACvBla,EAAG4Y,EAAK1W,eAAeiY,aACvB5a,MAAOqZ,EAAK1W,eAAeqY,SAC3B9b,OAAQma,EAAK1W,eAAesY,WAGzB1b,EAAYX,EAAEC,gBAAgBU,UAEdqZ,GAAQzM,KAAMvJ,IAClB,EAEhBhE,EAAEC,gBAAgBU,UAAYA,QAEzB,GAA8C,aAA1C1D,EAAgB4L,sBAAsC,CAChE,MAAMiU,EAAa/P,GAClBQ,KACAkN,EAAK1W,eAAegY,aACpBtB,EAAK1W,eAAeiY,aACpBvB,EAAK1W,eAAeqY,SACpB3B,EAAK1W,eAAesY,WAEjBS,GACHpQ,GACCa,KACAuP,EAAWjb,EACXib,EAAWnQ,mBAOd8N,EAAKG,iBAAkB,EAExBS,GAAkBlhB,KAAKoT,MACvBxM,EAAM4Z,mBAGMc,GAAiB,SAAU1a,GACvC,MAAMf,EAAIH,EAAY0N,MAChBtQ,EAAkBC,EAAmBqQ,MAErCkN,EAAO/L,GAAuBnB,MAEpCuN,aAAaL,EAAK8B,kCAClBzB,aAAaL,EAAKmB,gBAElB,IAAkC,IAA9BnB,EAAKc,sBAA0D,IAAzBxa,EAAMmB,QAAQhE,QACvD,GAA8C,QAA1CjB,EAAgB4L,uBACnB,GACC+D,GACCW,KACAkN,EAAK1W,eAAegY,aACpBtB,EAAK1W,eAAeiY,aACpBvB,EAAK1W,eAAeqY,SACpB3B,EAAK1W,eAAesY,WAEpB,CACD,IAAIrY,EAAO,CACVpC,EAAG6Y,EAAK1W,eAAegY,aACvBla,EAAG4Y,EAAK1W,eAAeiY,aACvB5a,MAAOqZ,EAAK1W,eAAeqY,SAC3B9b,OAAQma,EAAK1W,eAAesY,WAGzB1b,EAAYX,EAAEC,gBAAgBU,UAEdqZ,GAAQzM,KAAMvJ,IAClB,EAEhBhE,EAAEC,gBAAgBU,UAAYA,QAEzB,GAA8C,aAA1C1D,EAAgB4L,sBAAsC,CAChE,MAAMiU,EAAa/P,GAClBQ,KACAkN,EAAK1W,eAAegY,aACpBtB,EAAK1W,eAAeiY,aACpBvB,EAAK1W,eAAeqY,SACpB3B,EAAK1W,eAAesY,WAEjBS,GACHpQ,GACCa,KACAuP,EAAWjb,EACXib,EAAWnQ,mBAOd8N,EAAKa,eAAgB,EAGtBD,GAAkBlhB,KAAKoT,MAGvBxM,EAAM4Z,mBAGMe,GAAoB,SAAU3a,GAK1Csa,GAAkBlhB,KAAKoT,OAMXoO,GAAyB,SAAU5a,GAC/CA,EAAMob,kBAIMd,GAAoB,SAAUta,GAC1C,MAAMf,EAAIH,EAAY0N,MAEhBkN,EAAO/L,GAAuBnB,MAC9BC,EAAKJ,GAAmBG,MAE9BuN,aAAaL,EAAK8B,kCAClBzB,aAAaL,EAAKiC,mCAClB5B,aAAaL,EAAKM,gBAClBD,aAAaL,EAAKmB,gBXnea3f,KAC/B,MAAM+D,EAAIH,EAAY5D,GAEtB+D,EAAEyE,MAAMR,UAAUO,OACjB,0CACA,0DAGD,MAAMvG,EAAM+B,EAAEJ,qBAAqB1B,OACnC,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgG,EAAEJ,qBAAqB5F,GAAGiK,UAAUO,OACnC,wCAEDxE,EAAEmE,0BAA0BF,UAAUO,OACrC,+CAIFxE,EAAE8I,2BAA2B7E,UAAUO,OACtC,wCACA,0CACA,2CACA,+CAGDxE,EAAEI,iCAAiCC,MAAMC,OAAS,MAClDN,EAAEI,iCAAiC6D,UAAUO,OAC5C,+CAGDxE,EAAEkc,8BAA8BjY,UAAUO,OACzC,6CWqcDuY,CAAgBxP,MAEhBvN,EAAEC,gBAAgBmO,oBAAoB,YAAaZ,EAAG2N,iBACtD7B,SAASlL,oBAAoB,UAAWZ,EAAG4N,eAC3C9B,SAASlL,oBAAoB,cAAeZ,EAAG6N,mBAE/Crb,EAAEC,gBAAgBmO,oBAAoB,YAAaZ,EAAGgO,iBACtDlC,SAASlL,oBAAoB,WAAYZ,EAAGiO,gBAC5CnC,SAASlL,oBAAoB,cAAeZ,EAAGkO,mBAC/CpC,SAASlL,oBAAoB,cAAeZ,EAAGmO,wBAE/CtN,GAA0BlU,KAAKoT,MAE/BkN,EAAK1W,eAAiB,GAElBhD,IACHA,EAAMob,iBACNpb,EAAM4Z,oBAIK6B,GAA2B,SAAU5a,EAAGC,EAAGT,EAAOd,GAC9D,MAAMN,EAAIH,EAAY0N,OAE+B,IAAjDX,GAAkBW,KAAM3L,EAAGC,EAAGT,EAAOd,IACxCN,EAAE8I,2BAA2B7E,UAAUO,OACtC,wCAEDxE,EAAE8I,2BAA2B7E,UAAUC,IACtC,6CAGDlE,EAAE8I,2BAA2B7E,UAAUO,OACtC,2CAEDxE,EAAE8I,2BAA2B7E,UAAUC,IACtC,0CAKUyY,GAA4B,SAAU/a,EAAGC,EAAGT,EAAOd,GAC/D,MAAMN,EAAIH,EAAY0N,OAEgC,IAAlDR,GAAmBQ,KAAM3L,EAAGC,EAAGT,EAAOd,IACzCN,EAAE8I,2BAA2B7E,UAAUO,OACtC,wCAEDxE,EAAE8I,2BAA2B7E,UAAUC,IACtC,6CAGDlE,EAAE8I,2BAA2B7E,UAAUO,OACtC,2CAEDxE,EAAE8I,2BAA2B7E,UAAUC,IACtC,0CC5jBU8Y,GAAyB,CAAC/gB,EAAS+H,EAAMwV,KACrD,MAAM3a,EAAKI,EAAgBhD,GACrB+N,EAAM5K,EAAwBnD,GAC9BG,EAAmBJ,EAAoBC,GAEvCgC,EAAMY,EAAGX,OACT+e,EAAc,IAAI7e,MAAMH,GAC9B,IAAII,EAAQ,EAEZ,MAAMqN,EAAQ,IAAK1H,GACnB0H,EAAM9J,GAAKxF,EAAiBS,OAC5B6O,EAAM7J,GAAKzF,EAAiBS,OAC5B6O,EAAMtK,OAAShF,EAAiBS,OAChC6O,EAAMpL,QAAUlE,EAAiBS,OACjC,MAAMsB,EAAO,CAAEyD,EAAG,EAAGC,EAAG,EAAGvB,OAAQ,EAAGc,MAAO,GAE7C,IAAK,IAAIpH,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBmE,EAAKyD,EAAI/C,EAAG7E,GAAG4H,EAAIxF,EAAiBS,OACpCsB,EAAK0D,EAAIhD,EAAG7E,GAAG6H,EAAIzF,EAAiBS,OACpCsB,EAAKiD,MAAQvC,EAAG7E,GAAGoH,MAAQhF,EAAiBS,OAC5CsB,EAAKmC,OAASzB,EAAG7E,GAAGsG,OAASlE,EAAiBS,QAE5C6I,EAAevH,EAAMuN,IAAUxF,EAAiB/H,EAAMuN,KACvD1R,IAAMwf,IAENyD,EAAY5e,KAAWrE,EACvBgQ,EAAIhQ,GAAG4H,OAAItD,EACX0L,EAAIhQ,GAAG6H,OAAIvD,GAIb,MAAM0J,EAAS,IAAI5J,MAAMC,EAAQ,GACjC,IAAK,IAAIrE,EAAI,EAAGA,EAAIqE,EAAOrE,IAC1BgO,EAAOhO,GAAKijB,EAAYjjB,GAIzB,OAFAgO,EAAO3J,GAASmb,EAETxR,GAGKkV,GAAuB,CAACjhB,EAAS+H,EAAMwV,KACnD,MAAM3a,EAAKI,EAAgBhD,GACrB+N,EAAM5K,EAAwBnD,GAC9BG,EAAmBJ,EAAoBC,GAEvCgC,EAAMY,EAAGX,OACT+e,EAAc,IAAI7e,MAAMH,GAC9B,IAAII,EAAQ,EAEZ,MAAMqN,EAAQ,IAAK1H,GACnB0H,EAAM9J,GAAKxF,EAAiBS,OAC5B6O,EAAM7J,GAAKzF,EAAiBS,OAC5B6O,EAAMtK,OAAShF,EAAiBS,OAChC6O,EAAMpL,QAAUlE,EAAiBS,OACjC,MAAMsB,EAAO,CAAEyD,EAAG,EAAGC,EAAG,EAAGvB,OAAQ,EAAGc,MAAO,GAE7C,IAAK,IAAIpH,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBmE,EAAKyD,EAAI/C,EAAG7E,GAAG4H,EAAIxF,EAAiBS,OACpCsB,EAAK0D,EAAIhD,EAAG7E,GAAG6H,EAAIzF,EAAiBS,OACpCsB,EAAKiD,MAAQvC,EAAG7E,GAAGoH,MAAQhF,EAAiBS,OAC5CsB,EAAKmC,OAASzB,EAAG7E,GAAGsG,OAASlE,EAAiBS,QAC1C6I,EAAevH,EAAMuN,IAAUxF,EAAiB/H,EAAMuN,KACrD1R,IAAMwf,IACTyD,EAAY5e,KAAWrE,EACvBgQ,EAAIhQ,GAAG4H,OAAItD,EACX0L,EAAIhQ,GAAG6H,OAAIvD,GAKd,MAAM0J,EAAS,IAAI5J,MAAMC,EAAQ,GACjC,IAAK,IAAIrE,EAAI,EAAGA,EAAIqE,EAAOrE,IAC1BgO,EAAOhO,GAAKijB,EAAYjjB,GAIzB,OAFAgO,EAAO3J,GAASmb,EAETxR,GAGKmV,GAA0B,CAAClhB,EAASud,EAAOpY,EAAOd,KAC9D,MAAMzB,EAAKI,EAAgBhD,GACrBG,EAAmBJ,EAAoBC,GAE7C,GAAIud,EAAQ,GAAKA,GAAS3a,EAAGX,OAE5B,KAAM,uBAGP,GAAqB,iBAAVkD,GAAwC,iBAAXd,EACvC,KAAM,mCAGP,GAAIzB,EAAG2a,GAAO5X,EAAIR,EAAQhF,EAAiBS,OAAST,EAAiBG,MAEpE,KAAM,2CAGP,GACC6E,EAAQhF,EAAiBW,8BACzBuD,EAASlE,EAAiBW,6BAG1B,KAAO,iDAAgDX,EAAiBW,gCAGzE,OAAO,GAGKqgB,GAAwB,CAACnhB,EAASud,EAAO6D,EAAKlU,KAC1D,MAAMtK,EAAKI,EAAgBhD,GACrBG,EAAmBJ,EAAoBC,GAE7C,GAAIud,EAAQ,GAAKA,GAAS3a,EAAGX,OAE5B,KAAM,uBAGP,GAAmB,iBAARmf,GAAmC,iBAARlU,EACrC,KAAM,8BAGP,GAAIkU,EAAMjhB,EAAiBS,QAAUsM,EAAM/M,EAAiBS,OAE3D,KAAM,0CAGP,GACCwgB,EAAMxe,EAAG2a,GAAOpY,MAAQhF,EAAiBS,OACzCT,EAAiBG,MAGjB,KAAM,2CAGP,OAAO,GAGK+gB,GAAsBrhB,IAClC,MAAM4C,EAAKI,EAAgBhD,GACrB+D,EAAIH,EAAY5D,GAEhBgC,EAAMY,EAAGX,OACf,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgG,EAAEJ,qBAAqB5F,GAAGqG,MAAMgE,UAC/B,aAAexF,EAAG7E,GAAG4H,EAAI,OAAS/C,EAAG7E,GAAG6H,EAAI,MAC7C7B,EAAEJ,qBAAqB5F,GAAGiK,UAAUO,OAAO,2BAIhC+Y,GAAkB,CAACthB,EAASohB,EAAKlU,KAC7C,MAAMtK,EAAKI,EAAgBhD,GACrBG,EAAmBJ,EAAoBC,GAEvCgC,EAAMY,EAAGX,OACTC,EAAO,CAAEyD,EAAG,EAAGC,EAAG,EAAGvB,OAAQ,EAAGc,MAAO,GACvCoc,EAAK,CAAE5b,EAAGyb,EAAKxb,EAAGsH,GACxB,IAAIsU,EACJ,IAAK,IAAIzjB,EAAI,EAAGA,EAAIiE,EAAKjE,IAKxB,GAJAmE,EAAKyD,EAAI/C,EAAG7E,GAAG4H,EAAIxF,EAAiBS,OACpCsB,EAAK0D,EAAIhD,EAAG7E,GAAG6H,EAAIzF,EAAiBS,OACpCsB,EAAKiD,MAAQvC,EAAG7E,GAAGoH,MAAkC,EAA1BhF,EAAiBS,OAC5CsB,EAAKmC,OAASzB,EAAG7E,GAAGsG,OAAmC,EAA1BlE,EAAiBS,OAC1CoI,EAAkB9G,EAAMqf,IAAO/X,EAAmBtH,EAAMqf,GAAK,CAChEC,EAASzjB,EACT,MAOF,YAJesE,IAAXmf,IACHJ,EAAMxe,EAAG4e,GAAQ7b,EACjBuH,EAAMtK,EAAG4e,GAAQ5b,GAEX,CAAEwb,MAAKlU,MAAKuU,oBAAqBD,ICvJ5BE,GAAa1N,eAAgBuJ,EAAOpY,EAAOd,GACvD,MAAMzB,EAAKI,EAAgBsO,MACrBvN,EAAIH,EAAY0N,MAChBjO,EAAYD,EAAakO,MAE/BiM,EAAQ5W,SAAS4W,GACjB2D,GAAwB5P,KAAMiM,EAAOpY,EAAOd,GAE5Cgd,GAAmB/P,MAEnBrO,EAAwBqO,KAAM1O,GAC9B,MAAMmL,EAAM5K,EAAwBmO,MACpCvD,EAAIwP,GAAOpY,MAAQA,EACnB4I,EAAIwP,GAAOlZ,OAASA,EAEpB,MAAMsd,EAAe,CACpBhc,EAAG/C,EAAG2a,GAAO5X,EACbC,EAAGhD,EAAG2a,GAAO3X,EACbT,MAAOA,EACPd,OAAQA,GAEH0I,EAAgBgU,GAAuBzP,KAAMqQ,EAAcpE,GAE3D1O,QAAiB4H,GACtBnF,KACAvE,EACA4U,EAAa/b,EAAI+b,EAAatd,OAC9Bsd,EAAahc,EAAIgc,EAAaxc,OAG/BxC,EAAgB2O,KAAMvD,GAEtBhK,EAAEJ,qBAAqB4Z,GAAOnZ,MAAMe,MAAW4I,EAAIwP,GAAOpY,MAAb,KAC7CpB,EAAEJ,qBAAqB4Z,GAAOnZ,MAAMC,OAAY0J,EAAIwP,GAAOlZ,OAAb,KAE9C,MAAMud,EAAcnjB,OAAOmM,KAAKiE,GAC1B7M,EAAM4f,EAAY3f,OACxB,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IAAK,CAC7B,MAAMuB,EAAMsiB,EAAY7jB,GAClBgK,EAAO8G,EAASvP,GACtByE,EAAEJ,qBACDrE,GACC8E,MAAMgE,UAAa,aAAYL,EAAKpC,QAAQoC,EAAKnC,OAGhDvC,EAAUwe,gBACbxe,EAAUwe,eAAetE,EAAOpY,EAAOd,EAAQud,IAIpCE,GAAiB9N,eAAgBuJ,EAAOpY,EAAOd,GAC3D,MAAMzB,EAAKI,EAAgBsO,MACrBvN,EAAIH,EAAY0N,MAEtBiM,EAAQ5W,SAAS4W,GACjB2D,GAAwB5P,KAAMiM,EAAOpY,EAAOd,GAE5Cgd,GAAmB/P,MAEnBrO,EAAwBqO,KAAM1O,GAC9B,MAAMmL,EAAM5K,EAAwBmO,MACpCvD,EAAIwP,GAAOpY,MAAQA,EACnB4I,EAAIwP,GAAOlZ,OAASA,EAEpB,MAAMsd,EAAe,CACpBhc,EAAG/C,EAAG2a,GAAO5X,EACbC,EAAGhD,EAAG2a,GAAO3X,EACbT,MAAOA,EACPd,OAAQA,GAEH0I,EAAgBgU,GAAuBzP,KAAMqQ,EAAcpE,GAE3D1O,QAAiB4H,GACtBnF,KACAvE,EACA4U,EAAa/b,EAAI+b,EAAatd,OAC9Bsd,EAAahc,EAAIgc,EAAaxc,OAC9B,GAGKyc,EAAcnjB,OAAOmM,KAAKiE,GAC1B7M,EAAM4f,EAAY3f,OACxB,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IAAK,CAC7B,MAAMuB,EAAMsiB,EAAY7jB,GAClBgK,EAAO8G,EAASvP,GACtByE,EAAEJ,qBACDrE,GACC8E,MAAMgE,UAAa,aAAYL,EAAKpC,QAAQoC,EAAKnC,SAIxCmc,GAAW/N,eAAgBuJ,EAAO6D,EAAKlU,GACnD,MAAMtK,EAAKI,EAAgBsO,MACrBvN,EAAIH,EAAY0N,MAChBjO,EAAYD,EAAakO,MACzBtQ,EAAkBC,EAAmBqQ,MAG3C,GADAiM,EAAQ5W,SAAS4W,GACbvc,EAAgBghB,iBAAkB,CAIrC,MAAMC,EAAaX,GAAgBhQ,KAAM8P,EAAKlU,GAC9CkU,EAAMa,EAAWb,IACjBlU,EAAM+U,EAAW/U,IAGlBiU,GAAsB7P,KAAMiM,EAAO6D,EAAKlU,GAExCmU,GAAmB/P,MAEnBrO,EAAwBqO,KAAM1O,GAC9B,MAAMmL,EAAM5K,EAAwBmO,MACpCvD,EAAIwP,GAAO5X,EAAIyb,EACfrT,EAAIwP,GAAO3X,EAAIsH,EAEf,MAAMyU,EAAe,CACpBhc,EAAGyb,EACHxb,EAAGsH,EACH/H,MAAOvC,EAAG2a,GAAOpY,MACjBd,OAAQzB,EAAG2a,GAAOlZ,QAEb0I,EAAgBkU,GAAqB3P,KAAMqQ,EAAcpE,GAEzD1O,QAAiBkF,GACtBzC,KACAvE,EACAG,EACAA,EAAMtK,EAAG2a,GAAOlZ,QAGjB1B,EAAgB2O,KAAMvD,GAEtBhK,EAAEJ,qBAAqB4Z,GAAOvV,UAAUO,OAAO,0BAC/CxE,EAAEJ,qBACD4Z,GACCnZ,MAAMgE,UAAa,aAAY2F,EAAIwP,GAAO5X,QAAQoI,EAAIwP,GAAO3X,OAC1D5E,EAAgBkhB,qBAEpBne,EAAEJ,qBAAqB4Z,GAAOnZ,MAAM+d,WAAa,OACjDpD,WAAW,KACVhb,EAAEJ,qBAAqB4Z,GAAOnZ,MAAM+d,WAAa,IAC/CnhB,EAAgBohB,eAGpB,MAAMR,EAAcnjB,OAAOmM,KAAKiE,GAC1B7M,EAAM4f,EAAY3f,OACxB,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IAAK,CAC7B,MAAMuB,EAAMsiB,EAAY7jB,GAClBgK,EAAO8G,EAASvP,GACtByE,EAAEJ,qBACDrE,GACC8E,MAAMgE,UAAa,aAAYL,EAAKpC,QAAQoC,EAAKnC,OAGhDvC,EAAUwe,gBACbxe,EAAUgf,aAAa9E,EAAO6D,EAAKlU,EAAK0U,IAI7BU,GAAetO,eAAgBuJ,EAAO6D,EAAKlU,GACvD,MAAMtK,EAAKI,EAAgBsO,MACrBvN,EAAIH,EAAY0N,MAChBtQ,EAAkBC,EAAmBqQ,MAG3C,GADAiM,EAAQ5W,SAAS4W,GACbvc,EAAgBghB,iBAAkB,CAGrC,MAAMC,EAAaX,GAAgBhQ,KAAM8P,EAAKlU,GAC9CkU,EAAMa,EAAWb,IACjBlU,EAAM+U,EAAW/U,IAEZtD,MAAMqY,EAAWR,uBACrB1d,EAAEgF,yBAAyB3E,MAAMgE,UAChC,aAAegZ,EAAM,OAASlU,EAAM,MACrCnJ,EAAEgF,yBAAyBf,UAAUC,IACpC,uCAKHkZ,GAAsB7P,KAAMiM,EAAO6D,EAAKlU,GAExCmU,GAAmB/P,MAEnBrO,EAAwBqO,KAAM1O,GAC9B,MAAMmL,EAAM5K,EAAwBmO,MACpCvD,EAAIwP,GAAO5X,EAAIyb,EACfrT,EAAIwP,GAAO3X,EAAIsH,EAEf,MAAMyU,EAAe,CACpBhc,EAAGyb,EACHxb,EAAGsH,EACH/H,MAAOvC,EAAG2a,GAAOpY,MACjBd,OAAQzB,EAAG2a,GAAOlZ,QAEb0I,EAAgBkU,GAAqB3P,KAAMqQ,EAAcpE,GAEzD1O,QAAiBkF,GACtBzC,KACAvE,EACAG,EACAA,EAAMtK,EAAG2a,GAAOlZ,QAChB,GAGDN,EAAEJ,qBAAqB4Z,GAAOvV,UAAUC,IAAI,0BAE5C,MAAM2Z,EAAcnjB,OAAOmM,KAAKiE,GAC1B7M,EAAM4f,EAAY3f,OACxB,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IAAK,CAC7B,MAAMuB,EAAMsiB,EAAY7jB,GAClBgK,EAAO8G,EAASvP,GACtByE,EAAEJ,qBACDrE,GACC8E,MAAMgE,UAAa,aAAYL,EAAKpC,QAAQoC,EAAKnC,SCnMxCkM,GAAkB,SAAUhN,GACxC,MAAMf,EAAIH,EAAY0N,MAChBtQ,EAAkBC,EAAmBqQ,MACrC1O,EAAKI,EAAgBsO,MAErBiR,EAAMjQ,GAAuBhB,MAC7BC,EAAKJ,GAAmBG,MAE9B,GAAoB,IAAhBxM,EAAMkC,MAET,YADAwb,GAAkBtkB,KAAKoT,KAAMxM,GAI9B,MAAM2d,EAAkBhc,EAAkB6K,KAAMxM,GAE3C2d,IAILhkB,OAAOikB,OAAOH,EAAIza,eAAgB2a,GAEF,SAA5BF,EAAIza,eAAe/B,MACtBwc,EAAI5D,iBAAkB,EACtB4D,EAAI3D,wBAAyB,EAE7BvB,SAAS3L,iBAAiB,YAAaH,EAAGoR,iBAC1CtF,SAAS3L,iBAAiB,UAAWH,EAAGqR,eACxCvF,SAAS3L,iBAAiB,cAAeH,EAAGiR,mBAE5C3D,aAAa0D,EAAIzD,gBACjByD,EAAIzD,eAAiBC,WACpBC,GAAezf,KAAK+R,KAAMxM,GAC1B9D,EAAgBie,iBAGjBna,EAAMob,kBACgC,WAA5BqC,EAAIza,eAAe/B,OAC7Bwc,EAAI5D,iBAAkB,EACtB4D,EAAI3D,wBAAyB,EAE7B7a,EAAEC,gBAAgB0N,iBAAiB,YAAaH,EAAGoR,iBACnDtF,SAAS3L,iBAAiB,UAAWH,EAAGqR,eACxCvF,SAAS3L,iBAAiB,cAAeH,EAAGiR,mBAE5CD,EAAIza,eAAeO,MAAQzF,EAAG2f,EAAIza,eAAepB,WAAWf,EAC5D4c,EAAIza,eAAeQ,MAAQ1F,EAAG2f,EAAIza,eAAepB,WAAWd,EAE5DiC,EAAkByJ,KAAMiR,EAAIza,gBAE5BhD,EAAMob,kBAIPpb,EAAM4Z,oBAGM3M,GAAmB,SAAUjN,GACzC,MAAMf,EAAIH,EAAY0N,MAChBtQ,EAAkBC,EAAmBqQ,MACrC1O,EAAKI,EAAgBsO,MAErBiR,EAAMjQ,GAAuBhB,MAC7BC,EAAKJ,GAAmBG,MAE9B,GAA6B,IAAzBxM,EAAMmB,QAAQhE,OAEjB,YADA4gB,GAAuB3kB,KAAKoT,KAAMxM,GAInC,GAAoB,IAAhBA,EAAMkC,MAET,YADA6b,GAAuB3kB,KAAKoT,KAAMxM,GAKnC,IAAiC,IADAsB,EAAwBkL,KAAMxM,GAE9D,OAGD,MAAM2d,EAAkBhc,EAAkB6K,KAAMxM,GAC3C2d,IAILhkB,OAAOikB,OAAOH,EAAIza,eAAgB2a,GAEF,SAA5BF,EAAIza,eAAe/B,MACtBwc,EAAIO,iBAAkB,EACtBP,EAAIQ,wBAAyB,EAG7B1F,SAAS3L,iBAAiB,YAAaH,EAAGyR,iBAC1C3F,SAAS3L,iBAAiB,WAAYH,EAAG0R,gBACzC5F,SAAS3L,iBAAiB,cAAeH,EAAG2R,mBAC5C7F,SAAS3L,iBAAiB,cAAeH,EAAGsR,wBAE5CN,EAAI5C,eAAiBZ,WACpBa,GAAargB,KAAK+R,KAAMxM,GACxB9D,EAAgB6e,iBAGjB/a,EAAMob,kBACgC,WAA5BqC,EAAIza,eAAe/B,OAC7Bwc,EAAIO,iBAAkB,EACtBP,EAAIQ,wBAAyB,EAG7Bhf,EAAEC,gBAAgB0N,iBAAiB,YAAaH,EAAGyR,iBACnD3F,SAAS3L,iBAAiB,WAAYH,EAAG0R,gBACzC5F,SAAS3L,iBAAiB,cAAeH,EAAG2R,mBAE5C7F,SAAS3L,iBAAiB,cAAeH,EAAGsR,wBAE5CN,EAAIza,eAAeO,MAAQzF,EAAG2f,EAAIza,eAAepB,WAAWf,EAC5D4c,EAAIza,eAAeQ,MAAQ1F,EAAG2f,EAAIza,eAAepB,WAAWd,EAE5DiC,EAAkByJ,KAAMiR,EAAIza,gBAE5BhD,EAAMob,kBAGPpb,EAAM4Z,oBAGMM,GAAiB,SAAUla,GACvC,MAAMyd,EAAMjQ,GAAuBhB,OAEP,IAAxBiR,EAAI5D,kBACP4D,EAAI3D,wBAAyB,EAE7BlW,EAAc4I,KAAMiR,EAAIza,eAAgBhD,KAI7B8a,GAAe,SAAU9a,GACrC,MAAMyd,EAAMjQ,GAAuBhB,OAEP,IAAxBiR,EAAIO,kBACPP,EAAIQ,wBAAyB,EAE7Bra,EAAc4I,KAAMiR,EAAIza,eAAgBhD,KAI7B6d,GAAkB,SAAU7d,GACxC,MAAMf,EAAIH,EAAY0N,MAChBnR,EAAmBJ,EAAoBuR,MACvCtQ,EAAkBC,EAAmBqQ,MAErCiR,EAAMjQ,GAAuBhB,MACxBH,GAAmBG,MAE9B,IAAmC,IAA/BiR,EAAI3D,uBACP,GAAgC,SAA5B2D,EAAIza,eAAe/B,KAAiB,CACvC+C,EAAgBwI,KAAMiR,EAAIza,eAAgBhD,EAAO,QAEjD+Z,aAAa0D,EAAIY,6BAEjB,MAAMC,EAA4Bve,EAAwByM,KAAMxM,GAEhE,IAAkC,IAA9Bse,EAAqC,CACxC,MAAM/C,EAAiB+C,EAA0Bxd,EACjD/B,EAAayN,KAAM+O,GAEnBkC,EAAIY,4BAA8BpE,WACjCsE,GAAa9jB,KACZ+R,KACAiR,EAAIza,eAAepB,UACnB0c,GAEDpiB,EAAgBwf,qBAGZ,CACN1X,EAAgBwI,KAAMiR,EAAIza,eAAgBhD,EAAO,UAEjD+Z,aAAa0D,EAAIe,+BAEjB,MAAM5e,EAAYX,EAAEC,gBAAgBU,UAC9BY,EAAavB,EAAEC,gBAAgBsB,WAE/BK,EAAI4c,EAAIza,eAAeO,MACvBzC,EAAI2c,EAAIza,eAAeQ,MAEvB6X,EACLrb,EAAMoC,QAAUvB,EAAIL,EAAanF,EAAiBqF,aAC7C4a,EACLtb,EAAMqC,QAAUvB,EAAIlB,EAAYvE,EAAiBuF,YAElD6c,EAAIza,eAAeqY,SAAWA,EAC9BoC,EAAIza,eAAesY,UAAYA,EAE/B,MAAMC,EAAiBvb,EAAMqC,QAAUzC,EACvCb,EAAayN,KAAM+O,GAEfF,EAAW,GAAKC,EAAY,IAC/Brc,EAAEmE,0BAA0B9D,MAAMe,MAAQgb,EAAW,KACrDpc,EAAEmE,0BAA0B9D,MAAMC,OAAS+b,EAAY,KACvDrc,EAAEmE,0BAA0BC,aAC3B,aACC,MAAKxB,SAASwZ,YAAmBxZ,SAASyZ,SAI7CmC,EAAIe,8BAAgCvE,WACnCwE,GAAehkB,KACd+R,KACAiR,EAAIza,eAAepB,UACnByZ,EACAC,GAEDpf,EAAgBwf,qBAIlB+B,EAAI5D,iBAAkB,EAEtB6D,GAAkBtkB,KAAKoT,KAAMxM,GAS9BA,EAAMob,iBACNpb,EAAM4Z,mBAGMsE,GAAkB,SAAUle,GACxC,MAAMf,EAAIH,EAAY0N,MAChBnR,EAAmBJ,EAAoBuR,MACvCtQ,EAAkBC,EAAmBqQ,MAErCiR,EAAMjQ,GAAuBhB,MACxBH,GAAmBG,MAE9B,IAAmC,IAA/BiR,EAAIQ,wBAA4D,IAAzBje,EAAMmB,QAAQhE,OACxD,GAAgC,SAA5BsgB,EAAIza,eAAe/B,KAAiB,CACvC+C,EAAgBwI,KAAMiR,EAAIza,eAAgBhD,EAAO,QAEjD+Z,aAAa0D,EAAIY,6BAEjB,MAAMnD,EAA4Bna,EAAwByL,KAAMxM,GAEhE,IAAkC,IAA9Bkb,EAAqC,CACxC,MAAMtb,EAAYX,EAAEC,gBAAgBU,UAC9BY,EAAavB,EAAEC,gBAAgBsB,WAE/Bqb,EAAmC5c,EAAEC,gBAAgBgB,wBAGrDP,GADLV,EAAEC,gBAAgBqD,YAAcsZ,EAAiCzb,KAEjEnB,EAAEC,gBAAgBuD,aAAeoZ,EAAiCtb,KAK7Db,GAHLwb,EAA0Bra,EAC1BxF,EAAiBqF,aAGjBwa,EAA0Bpa,EAC1BzF,EAAiBuF,YACjBhB,GAEKkc,EAAiBZ,EAA0Bpa,EACjD/B,EAAayN,KAAMsP,IAQK,IANArc,EACvB+M,KACA9M,EACAC,KAIA8d,EAAIY,4BAA8BpE,WACjCsE,GAAa9jB,KACZ+R,KACAiR,EAAIza,eAAepB,UACnBsZ,GAEDhf,EAAgBwf,sBAIb,CACN1X,EAAgBwI,KAAMiR,EAAIza,eAAgBhD,EAAO,UAEjD+Z,aAAa0D,EAAIe,+BAEjB,MAAM3d,EAAI4c,EAAIza,eAAeO,MACvBzC,EAAI2c,EAAIza,eAAeQ,MAEvB0X,EAA4Bna,EAAwByL,KAAMxM,GAE1Dqb,EAAWH,EAA0Bra,EAAIA,EACzCya,EAAYJ,EAA0Bpa,EAAIA,EAgBhD,IAdkC,IAA9Boa,IACHuC,EAAIza,eAAeqY,SAAWA,EAC9BoC,EAAIza,eAAesY,UAAYA,EAE3BD,EAAW,GAAKC,EAAY,IAC/Brc,EAAEmE,0BAA0B9D,MAAMe,MAAQgb,EAAW,KACrDpc,EAAEmE,0BAA0B9D,MAAMC,OAAS+b,EAAY,KACvDrc,EAAEmE,0BAA0BC,aAC3B,aACC,MAAKxB,SAASwZ,YAAmBxZ,SAASyZ,WAKZ,IAA9BJ,EAAqC,CACxC,MAAMtb,EAAYX,EAAEC,gBAAgBU,UAC9BY,EAAavB,EAAEC,gBAAgBsB,WAE/Bqb,EAAmC5c,EAAEC,gBAAgBgB,wBAGrDP,GADLV,EAAEC,gBAAgBqD,YAAcsZ,EAAiCzb,KAEjEnB,EAAEC,gBAAgBuD,aAAeoZ,EAAiCtb,KAK7Db,GAHLwb,EAA0Bra,EAC1BxF,EAAiBqF,aAGjBwa,EAA0Bpa,EAC1BzF,EAAiBuF,YACjBhB,GAEKkc,EAAiBZ,EAA0Bpa,EACjD/B,EAAayN,KAAMsP,IAQK,IANArc,EACvB+M,KACA9M,EACAC,KAIA8d,EAAIe,8BAAgCvE,WACnCwE,GAAehkB,KACd+R,KACAiR,EAAIza,eAAepB,UACnByZ,EACAC,GAEDpf,EAAgBwf,uBAMpBlK,QAAQC,IAAI,QACZgM,EAAIO,iBAAkB,EAEtBD,GAAuB3kB,KAAKoT,KAAMxM,GAgBnCA,EAAM4Z,mBAGMkE,GAAgB5O,eAAgBlP,GAClClB,EAAY0N,MACXtO,EAAgBsO,MAD3B,MAGMiR,EAAMjQ,GAAuBhB,MACxBH,GAAmBG,MAK9B,GAHAuN,aAAa0D,EAAIY,6BACjBtE,aAAa0D,EAAIe,gCAEkB,IAA/Bf,EAAI3D,uBACP,GAAgC,SAA5B2D,EAAIza,eAAe/B,KAAiB,CAIvC,MAAMqd,EAA4Bve,EAAwByM,KAAMxM,GAChE,IAAI0e,EAAqB,GACzB,IACC,IAAkC,IAA9BJ,EAUH,KAAM,0CATArB,GAAS7jB,KACdoT,KACAiR,EAAIza,eAAepB,UACnB0c,EAA0Bzd,EAC1Byd,EAA0Bxd,GAE3B4d,EAAmB7d,EAAIyd,EAA0Bzd,EACjD6d,EAAmB5d,EAAIwd,EAA0Bxd,EAIjD,MAAOwY,GACR9H,QAAQ8H,MAAMA,GACdqF,GAA2BnS,YAM5B,IACC,IAAI6O,EAAWoC,EAAIza,eAAeqY,SAC9BC,EAAYmC,EAAIza,eAAesY,gBAE7BsB,GAAWxjB,KAChBoT,KACAiR,EAAIza,eAAepB,UACnByZ,EACAC,GAEA,MAAOhC,GACRqF,GAA2BnS,WAI7BiR,EAAI5D,iBAAkB,EAKvB6D,GAAkBtkB,KAAKoT,KAAMxM,GAU7Byd,EAAIza,eAAiB,IAGTmb,GAAiBjP,eAAgBlP,GAC7CwR,QAAQC,IAAI,kBACF3S,EAAY0N,MACXtO,EAAgBsO,MAD3B,MAGMiR,EAAMjQ,GAAuBhB,MACxBH,GAAmBG,MAK9B,GAHAuN,aAAa0D,EAAIY,6BACjBtE,aAAa0D,EAAIe,gCAEkB,IAA/Bf,EAAIQ,wBAA4D,IAAzBje,EAAMmB,QAAQhE,OACxD,GAAgC,SAA5BsgB,EAAIza,eAAe/B,KAAiB,CAIvC,MAAMia,EAA4Bna,EAAwByL,KAAMxM,GAChE,IAAI0e,EAAqB,GACzB,IACC,IAAkC,IAA9BxD,EAUH,KAAM,0CATA+B,GAAS7jB,KACdoT,KACAiR,EAAIza,eAAepB,UACnBsZ,EAA0Bra,EAC1Bqa,EAA0Bpa,GAE3B4d,EAAmB7d,EAAIqa,EAA0Bra,EACjD6d,EAAmB5d,EAAIoa,EAA0Bpa,EAIjD,MAAOwY,GACR9H,QAAQ8H,MAAMA,GACdqF,GAA2BnS,YAM5B,IACC,IAAI6O,EAAWoC,EAAIza,eAAeqY,SAC9BC,EAAYmC,EAAIza,eAAesY,gBAE7BsB,GAAWxjB,KAChBoT,KACAiR,EAAIza,eAAepB,UACnByZ,EACAC,GAEA,MAAOhC,GACRqF,GAA2BnS,WAI7BiR,EAAIO,iBAAkB,EAKvBD,GAAuB3kB,KAAKoT,KAAMxM,GAWlCA,EAAM4Z,kBAEN6D,EAAIza,eAAiB,IAGT0a,GAAoB,SAAU1d,GAC1C,MAAMf,EAAIH,EAAY0N,MAEhBiR,EAAMjQ,GAAuBhB,MAC7BC,EAAKJ,GAAmBG,MAE9BuN,aAAa0D,EAAIY,6BACjBtE,aAAa0D,EAAIe,+BACjBzE,aAAa0D,EAAIzD,gBACjBD,aAAa0D,EAAI5C,gBhBvbiB,EAAC3f,EAAS8H,KAC5C,MAAM/D,EAAIH,EAAY5D,GACXgD,EAAgBhD,GAEX8H,EAAepB,WAE/B3C,EAAEI,iCAAiC6D,UAAUO,OAC5C,+CAGDxE,EAAEmE,0BAA0BF,UAAUO,OACrC,uCAEDxE,EAAEmE,0BAA0B9D,MAAMgE,UAAa,sBAE/CrE,EAAEyE,MAAMR,UAAUO,OAAO,2CAEzB,MAAME,EAAW1E,EAAEJ,qBAAqB1B,OACxC,IAAK,IAAIlE,EAAI,EAAGA,EAAI0K,EAAU1K,IAC7BgG,EAAEJ,qBAAqB5F,GAAGiK,UAAUO,OACnC,wCAIFxE,EAAEmE,0BAA0BF,UAAUO,OACrC,gDgBgaDmb,CAAoBpS,KAAMiR,EAAIza,gBhB7XA,EAAC9H,EAAS8H,KACxC,MAAM/D,EAAIH,EAAY5D,GACXgD,EAAgBhD,GAEX8H,EAAepB,WAE/B3C,EAAEI,iCAAiC6D,UAAUO,OAC5C,+CAGDxE,EAAEJ,qBAAqBmE,EAAepB,WAAWsB,UAAUO,OAC1D,8BAGDxE,EAAE4E,qBAAqBX,UAAUO,OAChC,iDAGDxE,EAAE4E,qBAAqBvE,MAAMe,MAAQ,MACrCpB,EAAE4E,qBAAqBvE,MAAMC,OAAS,MAEtCN,EAAE4E,qBAAqBvE,MAAMgE,UAAa,sBAE1CrE,EAAEyE,MAAMR,UAAUO,OAAO,4CgBuWzBob,CAAgBrS,KAAMiR,EAAIza,gBhBtUhBlE,EgBuUQ0N,MhBrUhBvI,yBAAyBf,UAAUO,OACpC,sCgBqUDkb,GAA2BnS,MAE3B+L,SAASlL,oBAAoB,YAAaZ,EAAGoR,iBAC7C5e,EAAEC,gBAAgBmO,oBAAoB,YAAaZ,EAAGoR,iBACtDtF,SAASlL,oBAAoB,UAAWZ,EAAGqR,eAC3CvF,SAASlL,oBAAoB,cAAeZ,EAAGiR,mBAE/CnF,SAASlL,oBAAoB,YAAaZ,EAAGyR,iBAC7Cjf,EAAEC,gBAAgBmO,oBAAoB,YAAaZ,EAAGyR,iBACtD3F,SAASlL,oBAAoB,WAAYZ,EAAG0R,gBAC5C5F,SAASlL,oBAAoB,cAAeZ,EAAGsR,wBAC/CxF,SAASlL,oBAAoB,cAAeZ,EAAG2R,mBAE/CX,EAAIza,eAAiB,GAOrBhD,EAAMob,iBACNpb,EAAM4Z,mBAGMmE,GAAyB,SAAU/d,GAE/C0d,GAAkBtkB,KAAKoT,KAAMxM,IAGjBoe,GAAoB,SAAUpe,GAM1C0d,GAAkBtkB,KAAKoT,KAAMxM,IAKjBue,GAAerP,eAAgBuJ,EAAOqG,GAClD,MAAM7f,EAAIH,EAAY0N,MAEtB,IACC,IAAsB,IAAlBsS,EAgBH,KAAM,gCAfAtB,GAAapkB,KAAKoT,KAAMiM,EAAOqG,EAAcje,EAAGie,EAAche,GAQpE7B,EAAE4E,qBAAqBX,UAAUO,OAChC,wDAEDxE,EAAE4E,qBAAqBX,UAAUC,IAChC,qDAKD,MAAOmW,GACR9H,QAAQ8H,MAAMA,GACdra,EAAE4E,qBAAqBX,UAAUO,OAChC,qDAEDxE,EAAE4E,qBAAqBX,UAAUC,IAChC,0DAKUsb,GAAiBvP,eAAgBuJ,EAAOpY,EAAOd,GAC3D,MAAMN,EAAIH,EAAY0N,MAEtB,UACOwQ,GAAe5jB,KAAKoT,KAAMiM,EAAOpY,EAAOd,GAC9CN,EAAEmE,0BAA0BF,UAAUC,IACrC,6CAEA,MAAOmW,GACR9H,QAAQ8H,MAAMA,GACdra,EAAEmE,0BAA0BF,UAAUC,IACrC,kDAKUwb,GAA6B,SAAUzjB,GACnD,MAAM+D,EAAIH,EAAY5D,GAChB4C,EAAKI,EAAgBhD,GAErBgC,EAAM+B,EAAEJ,qBAAqB1B,OACnC,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgG,EAAEJ,qBACD5F,GACCqG,MAAMgE,UAAa,aAAYxF,EAAG7E,GAAG4H,QAAQ/C,EAAG7E,GAAG6H,QCjrB1CgH,GAAwB,CAAEiX,KAAK,EAAMC,UAAU,GAE/C9B,GAAmB,CAAE+B,MAAM,EAAMC,OAAO,GC2CxCC,GAAOjQ,eAAgBhU,EAASkkB,EAAUC,GAqCtD,MAAMpgB,EAAIH,EAAY5D,GAChBG,EAAmBJ,EAAoBC,GAEvC4C,GADkB3B,EAAmBjB,GAChCgD,EAAgBhD,IAE3B,IAAoB,IAAhBmkB,INlF6BvhB,KACjC,GAAIT,MAAMiiB,QAAQxhB,GAAK,CACtB,MAAMZ,EAAMY,EAAGX,OAEf,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IAAK,CAC7B,IACE6E,EAAG7E,IACJ6L,MAAMhH,EAAG7E,GAAG4H,IACZ/C,EAAG7E,GAAG4H,EAAI,GACViE,MAAMhH,EAAG7E,GAAG6H,IACZhD,EAAG7E,GAAG6H,EAAI,GACVgE,MAAMhH,EAAG7E,GAAGsG,SACZzB,EAAG7E,GAAGsG,QAAU,GAChBuF,MAAMhH,EAAG7E,GAAGoH,QACZvC,EAAG7E,GAAGoH,OAAS,EAEf,OAAO,EAER,IAAK0F,EAAkBzB,EAAexG,EAAG7E,KACxC,OAAO,EAGT,OAAO,EAER,OAAO,GM0DsBsmB,CAAkBzhB,GAAK,CACnD0T,QAAQgO,KAAK,kBAEbrhB,EAAwBjD,EAAS4C,GACjC,MAAMmL,EAAM5K,EAAwBnD,GAC9BgC,EAAMY,EAAGX,OACTF,EAAM,IAAII,MAAMH,GACtB,IAAK,IAAIjE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgE,EAAIhE,GAAKA,EACTgQ,EAAIhQ,GAAG4H,OAAItD,EACX0L,EAAIhQ,GAAG6H,OAAIvD,EAEXO,EAAG7E,GAAG4H,GAAKxF,EAAiBO,mBAC5BkC,EAAG7E,GAAG6H,GAAKzF,EAAiBO,mBAC5BkC,EAAG7E,GAAGoH,OAAShF,EAAiBO,mBAChCkC,EAAG7E,GAAGsG,QAAUlE,EAAiBO,mBAGlCN,EAASJ,EAASG,EAAiBokB,YACnChkB,EAAUP,EAASG,EAAiBqkB,aACpC7jB,EAAUX,EAASG,EAAiBskB,aACpChkB,EAAoBT,EAAS,GAC7Ba,EAA4Bb,EAASG,EAAiBukB,4BAEhDvN,GAAkBnX,EAAS+B,EAAK5B,EAAiBS,QACvD+B,EAAgB3C,EAAS+N,GA2D1B,G1BtHsB,SAAU/N,EAASK,GACzCL,EAAQC,MAAMC,UAAUC,iBAAiBqF,aAAenF,E0B6DxDskB,CACC3kB,EACA2G,SACClJ,OACEmnB,iBAAiB7gB,EAAEC,gBAAiB,MACpC6gB,iBAAiB,kB1B3DE,SAAU7kB,EAASK,GAC1CL,EAAQC,MAAMC,UAAUC,iBAAiB2kB,cAAgBzkB,E0B6DzD0kB,CACC/kB,EACA2G,SACClJ,OACEmnB,iBAAiB7gB,EAAEC,gBAAiB,MACpC6gB,iBAAiB,mB1B3DA,SAAU7kB,EAASK,GACxCL,EAAQC,MAAMC,UAAUC,iBAAiBuF,YAAcrF,E0B6DvD2kB,CACChlB,EACA2G,SACClJ,OACEmnB,iBAAiB7gB,EAAEC,gBAAiB,MACpC6gB,iBAAiB,iB1B3DG,SAAU7kB,EAASK,GAC3CL,EAAQC,MAAMC,UAAUC,iBAAiB8kB,eAAiB5kB,E0B6D1D6kB,CACCllB,EACA2G,SACClJ,OACEmnB,iBAAiB7gB,EAAEC,gBAAiB,MACpC6gB,iBAAiB,oBAIrBzkB,EACCJ,EACA+D,EAAEC,gBAAgBmhB,YACjBhlB,EAAiBqF,aACjBrF,EAAiB2kB,eAGnBvkB,EACCP,EACA+D,EAAEC,gBAAgBohB,aACjBjlB,EAAiBuF,YACjBvF,EAAiB8kB,gBAYff,EAAU,CAEb,MAAMliB,EAAMY,EAAGX,OACf,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxB6E,EAAG7E,GAAG4H,GAAKxF,EAAiBO,mBAC5BkC,EAAG7E,GAAG6H,GAAKzF,EAAiBO,mBAC5BkC,EAAG7E,GAAGoH,OAAShF,EAAiBO,mBAChCkC,EAAG7E,GAAGsG,QAAUlE,EAAiBO,mBAGlCP,EAAiBS,QAAUT,EAAiBO,mBAC5CP,EAAiBW,8BAChBX,EAAiBO,mBAGnBD,EACCT,EACAG,EAAiBG,MAAQH,EAAiBokB,YAE3C5jB,EACCX,EACAG,EAAiBS,OAAST,EAAiBO,oBAE5CG,EACCb,EACAG,EAAiBW,6BAChBX,EAAiBO,qBAIP2kB,GAAwB,SAAUjkB,GAAS,0C1B3FzBpB,EAASK,G0B6FnCe,SAAA,UAAAA,EAASkkB,gBAAT,eAAmBhlB,SAAUsJ,MAAMxI,EAAQkkB,SAAShlB,S1B7F1BN,E0B8FhBsR,K1B9FyBjR,E0B8FnBe,EAAQkkB,SAAShlB,M1B7FrCN,EAAQC,MAAMC,UAAUC,iBAAiBokB,WAAalkB,I0BgGlDe,SAAA,UAAAA,EAASkkB,gBAAT,eAAmB9kB,UAAWoJ,MAAMxI,EAAQkkB,SAAS9kB,S1BzFpC,SAAUR,EAASK,GACxCL,EAAQC,MAAMC,UAAUC,iBAAiBqkB,YAAcnkB,E0ByFtDklB,CAAcjU,KAAMlQ,EAAQkkB,SAAS9kB,SAGlCY,SAAA,UAAAA,EAASkkB,gBAAT,eAAmB1kB,UAAWgJ,MAAMxI,EAAQkkB,SAAS1kB,S1BrFpC,SAAUZ,EAASK,GACxCL,EAAQC,MAAMC,UAAUC,iBAAiBskB,YAAcpkB,E0BqFtDmlB,CAAclU,KAAMlQ,EAAQkkB,SAAS1kB,SAIrCQ,SAAA,UAAAA,EAASkkB,gBAAT,eAAmBZ,wBAClB9a,MAAMxI,EAAQkkB,SAASZ,uB1BnFG,SAAU1kB,EAASK,GAC/CL,EAAQC,MAAMC,UAAUC,iBAAiBukB,qBAAuBrkB,E0BoF/DolB,CAAqBnU,KAAKlQ,QAAQkkB,SAASZ,uBAM3CtjB,SAAA,UAAAA,EAASJ,uBAAT,eAA0B0kB,qBACzB9b,MAAMxI,EAAQJ,gBAAgB0kB,oBAE/B3kB,EACCuQ,KACA,sBACAlQ,EAAQJ,gBAAgB0kB,oBAKzBtkB,SAAA,UAAAA,EAASJ,uBAAT,eAA0B2kB,mBACzB/b,MAAMxI,EAAQJ,gBAAgB2kB,kBAE/B5kB,EACCuQ,KACA,oBACAlQ,EAAQJ,gBAAgB2kB,kBAKzBvkB,SAAA,UAAAA,EAASJ,uBAAT,eAA0B4kB,2BACzBhc,MAAMxI,EAAQJ,gBAAgB4kB,0BAE/B7kB,EACCuQ,KACA,6BACAlQ,EAAQJ,gBAAgB4kB,0BAKzBxkB,SAAA,UAAAA,EAASJ,uBAAT,eAA0B6kB,gCACzBjc,MAAMxI,EAAQJ,gBAAgB6kB,+BAE/B9kB,EACCuQ,KACA,mCACAlQ,EAAQJ,gBAAgB6kB,+BAKzBzkB,SAAA,UAAAA,EAASJ,uBAAT,eAA0B8kB,sBACzBlc,MAAMxI,EAAQJ,gBAAgB8kB,qBAE/B/kB,EACCuQ,KACA,uBACAlQ,EAAQJ,gBAAgB8kB,qBAKzB1kB,SAAA,UAAAA,EAASJ,uBAAT,eAA0B+kB,mBACzBnc,MAAMxI,EAAQJ,gBAAgB+kB,kBAE/BhlB,EACCuQ,KACA,oBACAlQ,EAAQJ,gBAAgB+kB,kBAKzB3kB,SAAA,UAAAA,EAASJ,uBAAT,eAA0BglB,gCACzBpc,MAAMxI,EAAQJ,gBAAgBglB,+BAE/BjlB,EACCuQ,KACA,mCACAlQ,EAAQJ,gBAAgBglB,+BAKzB5kB,SAAA,UAAAA,EAASJ,uBAAT,eAA0BilB,iBACzBrc,MAAMxI,EAAQJ,gBAAgBilB,gBAE/BllB,EACCuQ,KACA,kBACAlQ,EAAQJ,gBAAgBilB,gBAKzB7kB,SAAA,UAAAA,EAASJ,uBAAT,eAA0BklB,iBACzBtc,MAAMxI,EAAQJ,gBAAgBklB,gBAE/BnlB,EACCuQ,KACA,kBACAlQ,EAAQJ,gBAAgBklB,gBAKzB9kB,SAAA,UAAAA,EAASJ,uBAAT,eAA0BmlB,gBACzBvc,MAAMxI,EAAQJ,gBAAgBmlB,eAE/BplB,EACCuQ,KACA,iBACAlQ,EAAQJ,gBAAgBmlB,eAKzB/kB,SAAA,UAAAA,EAASJ,uBAAT,eAA0BolB,wBACzBxc,MAAMxI,EAAQJ,gBAAgBolB,uBAE/BrlB,EACCuQ,KACA,0BACAlQ,EAAQJ,gBAAgBolB,uBAKzBhlB,SAAA,UAAAA,EAASJ,uBAAT,eAA0BqlB,sBAC1BzZ,GAAsBxL,EAAQJ,gBAAgBqlB,sBAE9CtlB,EACCuQ,KACA,wBACAlQ,EAAQJ,gBAAgBqlB,qBAI8B,kBAA7CjlB,SAAP,UAAOA,EAASJ,uBAAhB,aAAO,EAA0BslB,iBACpCvlB,EACCuQ,KACA,mBACAlQ,EAAQJ,gBAAgBslB,gBAIgC,kBAA/CllB,SAAP,UAAOA,EAASJ,uBAAhB,aAAO,EAA0BulB,mBACpCxlB,EACCuQ,KACA,qBACAlQ,EAAQJ,gBAAgBulB,mBAKzBnlB,SAAA,UAAAA,EAASJ,uBAAT,eAA0BwlB,eACzB5c,MAAMxI,EAAQJ,gBAAgBwlB,cAE/BzlB,EACCuQ,KACA,eACAlQ,EAAQJ,gBAAgBwlB,cAWdC,GAAa,WACzB,MAAM1iB,EAAIH,EAAY0N,MAChBlQ,EAAUoF,EAAW8K,MtBzWX,IAAUtR,EAASuD,EsB6WnC,IAAImjB,EtB7WsB1mB,EsB2WjBsR,KtB3W0B/N,EsB2WpB8Z,SAASsJ,qBAAqB,QAAQ,GtB1WrD3mB,EAAQC,MAAM4C,UAAUW,SAASgF,MAAQjF,EsB6WzC,GACCmjB,EACC,qCAAuCnkB,UACe,OAA/C8a,SAASuJ,eAAeF,KvBvXL,SAAU1mB,EAASmW,GAC/CnW,EAAQC,MAAM4C,UAAUC,WAAW4jB,kBAAoBvQ,EuBuXvD0Q,CAAqBvV,KAAMoV,GAE3B,MAAMI,EAAkBzJ,SAASC,cAAc,OAM/C,GALAwJ,EAAgB3e,aAAa,QAAS,qCACtC2e,EAAgB3e,aAAa,KAAMue,GtB7WR,SAAU1mB,EAASuD,GAC9CvD,EAAQC,MAAM4C,UAAUW,SAASujB,iBAAmBxjB,EsB6WpDyjB,CAAoB1V,KAAMwV,GAGtB1lB,EAAQ6lB,uBAAwB,CACnC,IAAIC,EAC0C,iBAAnC9lB,EAAQ6lB,uBAClBC,EAA0B7J,SAASuJ,eAClCxlB,EAAQ6lB,wBAEC7lB,EAAQ6lB,kCAAkC3I,UACpD4I,EAA0B9lB,EAAQ6lB,wBAEnCC,EAAwBzJ,YAAYqJ,QAEpC/iB,EAAEyE,MAAMiV,YAAYqJ,GAGrB/iB,EAAEN,IAAI4a,UAAa,mYtBrWgB,SAAUre,EAASuD,GACtDvD,EAAQC,MAAM4C,UAAUW,SAAS2jB,yBAA2B5jB,EsBqW5D6jB,CACC9V,KACAvN,EAAEN,IAAIoa,uBAAuB,8BAA8B,ItBhWlC,SAAU7d,EAASuD,GAC7CvD,EAAQC,MAAM4C,UAAUW,SAASQ,gBAAkBT,EsBiWnD8jB,CAAmB/V,KAAMvN,EAAEN,IAAIoa,uBAAuB,oBAAoB,IAE1E,MAAMyJ,EAAsBjK,SAASC,cAAc,OAC7CiK,EAA2BlK,SAASC,cAAc,OAClDkK,EAA0BnK,SAASC,cAAc,OACjDmK,EAAkCpK,SAASC,cAAc,OACzDoK,EAA4BrK,SAASC,cAAc,OACnDqK,EAA+BtK,SAASC,cAAc,OAC5DqK,EAA6BtJ,UAAY,cAEzCiJ,EAAoBnf,aACnB,QACA,0CAEDof,EAAyBpf,aACxB,QACA,gCAEDqf,EAAwBrf,aAAa,QAAS,+BAC9Csf,EAAgCtf,aAC/B,QACA,wCAEDuf,EAA0Bvf,aACzB,QACA,kCAEDwf,EAA6Bxf,aAC5B,QACA,qCAGDpE,EAAEgjB,iBAAiBtJ,YAAY6J,GAC/BvjB,EAAEC,gBAAgByZ,YAAY8J,GAC9BxjB,EAAEC,gBAAgByZ,YAAY+J,GAC9BzjB,EAAEC,gBAAgByZ,YAAYgK,GAC9B1jB,EAAEC,gBAAgByZ,YAAYiK,GAC9B3jB,EAAEC,gBAAgByZ,YAAYkK,GtBjaC,SAAU3nB,EAASuD,GAClDvD,EAAQC,MAAM4C,UAAUW,SAASmF,qBAAuBpF,EsBkaxDqkB,CAAwBtW,KAAMgW,GtBzXM,SAAUtnB,EAASuD,GACvDvD,EAAQC,MAAM4C,UAAUW,SAAS0E,0BAA4B3E,EsByX7DskB,CAA6BvW,KAAMiW,GtBlXA,SAAUvnB,EAASuD,GACtDvD,EAAQC,MAAM4C,UAAUW,SAASuF,yBAA2BxF,EsBkX5DukB,CAA4BxW,KAAMkW,GtB3WS,SAAUxnB,EAASuD,GAC9DvD,EAAQC,MAAM4C,UAAUW,SAASW,iCAAmCZ,EsB2WpEwkB,CAAoCzW,KAAMmW,GtBpWL,SAAUznB,EAASuD,GACxDvD,EAAQC,MAAM4C,UAAUW,SAASqJ,2BAA6BtJ,EsBoW9DykB,CAA8B1W,KAAMoW,GtB7VI,SAAU1nB,EAASuD,GAC3DvD,EAAQC,MAAM4C,UAAUW,SAASyc,8BAAgC1c,EsB6VjE0kB,CAAiC3W,KAAMqW,IChd3BO,GAAiB,SAAUpjB,GACvC,MAAM9D,EAAkBC,EAAmBqQ,MAE3CyN,WACC5N,GAAmBG,MAAM6W,4BAEzBnnB,EAAgBonB,yBAGjB3qB,OAAO0U,oBAAoB,SAAUhB,GAAmBG,MAAM4W,iBAGlDC,GAA8BnU,eAAgBlP,SACpDmf,GAAK3S,MAAM,GAAM,GACvBwL,GAAOxL,OAI0B,IAFjB9K,EAAW8K,MAEf+W,kBACX5qB,OAAOiU,iBAAiB,SAAUP,GAAmBG,MAAM4W,iBCkL7D,SAASI,GAAelnB,GzB5HH,IAAUpB,EAASuoB,EyBmIvC,GANAjX,KAAKkX,kBrB5Ma,SAAUxoB,EAASoB,GACrC3C,OAAOikB,OAAO1iB,EAAQoB,QAASA,GqB4M/BqnB,CAAWnX,KAAMlQ,GACjBuB,EAAgB2O,KAAMlQ,EAAQ2B,czB/HA/C,EyBgIjBsR,KzBhI0BiX,EyBgIpBnnB,EAAQiC,UzB/H3BrD,EAAQC,MAAM4C,UAAUC,WAAWO,UAAYklB,EyBkIrB,iBAAfnnB,EAAQsnB,GAAiB,CACnC,MAAMA,EAAKrL,SAASuJ,eAAexlB,EAAQsnB,IAC3C,IAAKA,EACJ,KAAO,+BAA8BtnB,EAAQsnB,GAE9CplB,EAAOgO,KAAMoX,OACP,MAAItnB,EAAQsnB,cAAcpK,SAGhC,KAAM,mCAFNhb,EAAOgO,KAAMlQ,EAAQsnB,IAKtBrD,GAAsBnnB,KAAKoT,KAAMlQ,GACjCqlB,GAAWvoB,KAAKoT,OAIsB,IAAlCA,KAAKlQ,QAAQinB,kBAChB5qB,OAAOiU,iBAAiB,SAAUP,GAAmBG,MAAM4W,gBAG5DnJ,WACC/K,uBACOiQ,GAAK3S,MAAM,EAAOlQ,EAAQ+iB,aAChCrH,GAAOxL,MAAM,IACZ/R,KAAK+R,OAxJTgX,GAAe3oB,UAAUqT,YAAcsV,GA4JvCA,GAAe3oB,UAAU6oB,gBAAkB,WAC1ClX,KAAKlQ,QAAU,CACdoQ,UAAU,EACV6W,kBAAkB,EAClB5W,4BAA4B,EAC5BG,wBAAwB,GAEzBN,KAAKrR,MAAQ,CACZ4C,UAAW,CACVW,SAAU,CACTgF,WAAOnG,EACP0kB,sBAAkB1kB,EAClBsG,0BAAsBtG,EACtBoB,SAAKpB,EACL8kB,8BAA0B9kB,EAC1B2B,qBAAiB3B,EACjBsB,qBAAsB,GACtBuE,+BAA2B7F,EAC3B0G,8BAA0B1G,EAC1B8B,sCAAkC9B,EAClCwK,gCAA4BxK,EAC5B4d,mCAA+B5d,EAE/BsmB,oCAAqC,GACrCC,sCAAkCvmB,EAClCwmB,yCAAqCxmB,EACrCymB,oCAAgCzmB,EAChC0mB,iCAA6B1mB,EAC7B2mB,qCAAsC,GACtCC,+BAAgC,GAChCC,kCAAmC,GACnCC,oCAAqC,IAEtCrmB,WAAY,CACX4jB,uBAAmBrkB,EACnBU,aAAc,GACdG,qBAAsB,GACtBoiB,SAAU,GACVjiB,UAAW,IAEZ+N,gBAAiB,CAChBU,gBAAiBA,GAAgBvS,KAAK+R,MACtCS,iBAAkBA,GAAiBxS,KAAK+R,MACxCqR,gBAAiBA,GAAgBpjB,KAAK+R,MACtC0R,gBAAiBA,GAAgBzjB,KAAK+R,MACtCsR,cAAeA,GAAcrjB,KAAK+R,MAClC2R,eAAgBA,GAAe1jB,KAAK+R,MACpCkR,kBAAmBA,GAAkBjjB,KAAK+R,MAC1CuR,uBAAwBA,GAAuBtjB,KAAK+R,MACpD4R,kBAAmBA,GAAkB3jB,KAAK+R,MAE1CK,gBAAiBA,GAAgBpS,KAAK+R,MACtCO,iBAAkBA,GAAiBtS,KAAK+R,MACxC4N,gBAAiBA,GAAgB3f,KAAK+R,MACtCiO,gBAAiBA,GAAgBhgB,KAAK+R,MACtC6N,cAAeA,GAAc5f,KAAK+R,MAClCkO,eAAgBA,GAAejgB,KAAK+R,MACpCmO,kBAAmBA,GAAkBlgB,KAAK+R,MAC1CoO,uBAAwBA,GAAuBngB,KAAK+R,MACpD8N,kBAAmBA,GAAkB7f,KAAK+R,MAG1C4W,eAAgBA,GAAe3oB,KAAK+R,MACpC6W,4BAA6BA,GAA4B5oB,KAAK+R,OAE/DiB,cAAe,CACdC,gBAAiB,CAChB1K,eAAgB,GAChB6W,iBAAiB,EACjBC,wBAAwB,EACxBkE,iBAAiB,EACjBC,wBAAwB,EACxBjE,oBAAgBzc,EAChBsd,oBAAgBtd,EAChBihB,mCAA+BjhB,EAC/B8gB,iCAA6B9gB,GAE9BqQ,gBAAiB,CAChB5K,eAAgB,GAChB6W,iBAAiB,EACjBC,wBAAwB,EACxBS,eAAe,EACfC,sBAAsB,EACtBR,oBAAgBzc,EAChBsd,oBAAgBtd,EAChBie,sCAAkCje,EAClCoe,uCAAmCpe,KAItCnC,UAAW,CACVC,iBAAkB,CAEjBG,MAAO,EACPE,OAAQ,EAERgF,aAAc,EACdsf,cAAe,EACfpf,YAAa,EACbuf,eAAgB,EAEhBvkB,mBAAoB,EAEpBE,OAAQ,EACRE,6BAA8B,IAI9ByjB,WAAY,KACZC,YAAa,KACbC,YAAa,EACbC,qBAAsB,KAEvB1jB,gBAAiB,CAChBmc,oBAAqB,EAAI,EAEzBxV,kBAAmB,GACnBL,2BAA4B,GAC5BE,iCAAkC,EAClC5C,qBAAsB,GACtBV,kBAAmB,GACnBI,iCAAkC,GAElC2a,gBAAiB,IACjBY,gBAAiB,IACjBW,eAAgB,IAChB4H,wBAAyB,IAEzBxb,sBAAuB,MAEvBoV,kBAAkB,EAElBE,oBAAoB,EACpBE,aAAc,QAMlBkG,GAAe3oB,UAAUypB,WAAa,SAAU7L,ITpPtB,SAAUvd,EAASud,GAC5C,MAAMxZ,EAAIH,EAAY5D,GAChBqD,EAAYD,EAAapD,GACzB4C,EAAKI,EAAgBhD,GAErB0d,EAAara,EAAUsa,cAC5BJ,EACA3a,EAAG2a,GAAOpY,MACVvC,EAAG2a,GAAOlZ,QAGXuZ,GAAkB5d,EAAS0d,EAAY3Z,EAAEJ,qBAAqB4Z,IAE1Dla,EAAUya,gBACbza,EAAUya,eAAeP,GSuO1B8L,CAAY/X,KAAMiM,IAGnB+K,GAAe3oB,UAAU2pB,YAAc,WACtC,MAAMnpB,EAAmBJ,EAAoBuR,MACvC1O,EAAKI,EAAgBsO,MAErBtP,EAAMY,EAAGX,OACTF,EAAM,IAAII,MAAMH,GACtB,IAAK,IAAIjE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgE,EAAIhE,GAAK,CACR4H,EAAGnE,EAAMoB,EAAG7E,GAAG4H,EAAIxF,EAAiBO,oBACpCkF,EAAGpE,EAAMoB,EAAG7E,GAAG6H,EAAIzF,EAAiBO,oBACpCyE,MAAO3D,EAAMoB,EAAG7E,GAAGoH,MAAQhF,EAAiBO,oBAC5C2D,OAAQ7C,EAAMoB,EAAG7E,GAAGsG,OAASlE,EAAiBO,qBAMhD,MAAO,CACN4kB,SAAU,CACTjhB,OAAQlE,EAAiBqkB,YACzBrf,MAAOhF,EAAiBokB,WACxBgF,OAAQppB,EAAiBskB,YACzBC,qBAAsBvkB,EAAiBukB,sBAExC3hB,aAAchB,IAIhBumB,GAAe3oB,UAAU6pB,oBAAsB,SAAUC,GACpD7c,GAAsB6c,IACzB1oB,EAAwBuQ,KAAM,wBAAyBmY,IAIzDnB,GAAe3oB,UAAU+pB,kBAAoB,SAAUD,GAClDzH,GAAiByH,IACpB1oB,EAAwBuQ,KAAM,mBAAoBmY,IAIpDnB,GAAe3oB,UAAUoe,QAAU,SAAUhW,GAC5C,IAAKA,EAAM,CACV,MAAM5H,EAAmBJ,EAAoBuR,MAC7CvJ,EAAO,CACN5C,MAAOhF,EAAiBW,6BACxBuD,OAAQlE,EAAiBW,8BAI3B6oB,GAASrY,KAAMvJ,IAGhBugB,GAAe3oB,UAAUiqB,WAAa,SAAUrM,GAC3ClQ,OAAOwc,UAAUtM,IT9KI,SAAUvd,EAASud,GAC5C,MAAMxZ,EAAIH,EAAY5D,GAChBqD,EAAYD,EAAapD,GACzB4C,EAAKI,EAAgBhD,GAE3BkS,GAAmBhU,KAAK8B,GAExB4C,EAAGknB,OAAOvM,EAAO,GAEbla,EAAU0mB,cACb1mB,EAAU0mB,aAAahmB,EAAEJ,qBAAqB4Z,IAG/CxZ,EAAEC,gBAAgBwZ,YAAYzZ,EAAEJ,qBAAqB4Z,IACrD7Z,EAAwB1D,EAAS,IAC7B+D,EAAEC,gBAAgB6Z,uBAAuB,2BAG7C,MAAM7b,EAAMY,EAAGX,OACf,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBgG,EAAEJ,qBAAqB5F,GAAGoK,aAAa,aAAcpK,GAGlDsF,EAAU2mB,gBACb3mB,EAAU2mB,eAAezM,EAAOxZ,EAAEJ,qBAAqB4Z,IAIxDlM,GAAiBnT,KAAK8B,GSmJrBiqB,CAAY3Y,KAAMiM,IAIpB+K,GAAe3oB,UAAUuqB,iBAAmB,SAAUC,GACrD7Y,KAAKlQ,QAAQC,cAAgB8oB,GAGf7B","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"IntervalTreeJS\"), require(\"ClosestBST\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"IntervalTreeJS\", \"ClosestBST\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LimberGridView\"] = factory(require(\"IntervalTreeJS\"), require(\"ClosestBST\"));\n\telse\n\t\troot[\"LimberGridView\"] = factory(root[\"IntervalTreeJS\"], root[\"ClosestBST\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"assets\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\n// const constants = {\n// \tWIDTH: 0,\n// \tHEIGHT: 0,\n\n// \tPADDING_LEFT: 0,\n// \tPADDING_RIGHT: 0,\n// \tPADDING_TOP: 0,\n// \tPADDING_BOTTOM: 0,\n\n// \tWIDTH_SCALE_FACTOR: 0,\n\n// \tGRID_WIDTH: 1080,\n// \tGRID_HEIGHT: 1920,\n// \tGRID_MARGIN: 5,\n// \tMARGIN: 5,\n\n// \tMIN_HEIGHT_AND_WIDTH: 150,\n// };\n\nconst setPrivateConstants = function (context, val) {\n\tcontext.store.constants.privateConstants = val;\n};\n\nconst getPrivateConstants = function (context) {\n\treturn context.store.constants.privateConstants;\n};\n\nconst setPrivateConstantByName = function (context, name, value) {\n\tif (context.store.constants.privateConstants.hasOwnProperty(name)) {\n\t\tcontext.store.constants.privateConstants[name] = value;\n\t}\n};\n\nconst getPrivateConstantByName = function (context, name) {\n\treturn context.store.constants.privateConstants[name];\n};\n\nconst setWidth = function (context, val) {\n\tcontext.store.constants.privateConstants.WIDTH = val;\n};\n\nconst getWidth = function (context) {\n\treturn context.store.constants.privateConstants.WIDTH;\n};\n\nconst setHeight = function (context, val) {\n\tcontext.store.constants.privateConstants.HEIGHT = val;\n};\n\nconst getHeight = function (context) {\n\treturn context.store.constants.privateConstants.HEIGHT;\n};\n\nconst setPaddingLeft = function (context, val) {\n\tcontext.store.constants.privateConstants.PADDING_LEFT = val;\n};\n\nconst getPaddingLeft = function (context) {\n\treturn context.store.constants.privateConstants.PADDING_LEFT;\n};\n\nconst setPaddingRight = function (context, val) {\n\tcontext.store.constants.privateConstants.PADDING_RIGHT = val;\n};\n\nconst getPaddingRight = function (context) {\n\treturn context.store.constants.privateConstants.PADDING_RIGHT;\n};\n\nconst setPaddingTop = function (context, val) {\n\tcontext.store.constants.privateConstants.PADDING_TOP = val;\n};\n\nconst getPaddingTop = function (context) {\n\treturn context.store.constants.privateConstants.PADDING_TOP;\n};\n\nconst setPaddingBottom = function (context, val) {\n\tcontext.store.constants.privateConstants.PADDING_BOTTOM = val;\n};\n\nconst getPaddingBottom = function (context) {\n\treturn context.store.constants.privateConstants.PADDING_BOTTOM;\n};\n\nconst setWidthScaleFactor = function (context, val) {\n\tcontext.store.constants.privateConstants.WIDTH_SCALE_FACTOR = val;\n};\n\nconst getWidthScaleFactor = function (context) {\n\treturn context.store.constants.privateConstants.WIDTH_SCALE_FACTOR;\n};\n\nconst setMargin = function (context, val) {\n\tcontext.store.constants.privateConstants.MARGIN = val;\n};\n\nconst getMargin = function (context) {\n\treturn context.store.constants.privateConstants.MARGIN;\n};\n\nconst setDefinedMinHeightAndWidth = function (context, val) {\n\tcontext.store.constants.privateConstants.DEFINED_MIN_HEIGHT_AND_WIDTH = val;\n};\n\nconst getDefinedMinHeightAndWidth = function (context) {\n\treturn context.store.constants.privateConstants.DEFINED_MIN_HEIGHT_AND_WIDTH;\n};\n\n//\nconst setGridWidth = function (context, val) {\n\tcontext.store.constants.privateConstants.GRID_WIDTH = val;\n};\n\nconst getGridWidth = function (context) {\n\treturn context.store.constants.privateConstants.GRID_WIDTH;\n};\n\nconst setGridHeight = function (context, val) {\n\tcontext.store.constants.privateConstants.GRID_HEIGHT = val;\n};\n\nconst getGridHeight = function (context) {\n\treturn context.store.constants.privateConstants.GRID_HEIGHT;\n};\n\nconst setGridMargin = function (context, val) {\n\tcontext.store.constants.privateConstants.GRID_MARGIN = val;\n};\n\nconst getGridMargin = function (context) {\n\treturn context.store.constants.privateConstants.GRID_MARGIN;\n};\n\nconst setMinHeightAndWidth = function (context, val) {\n\tcontext.store.constants.privateConstants.MIN_HEIGHT_AND_WIDTH = val;\n};\n\nconst getMinHeightAndWidth = function (context) {\n\treturn context.store.constants.privateConstants.MIN_HEIGHT_AND_WIDTH;\n};\n\nexport default getPrivateConstants;\nexport {\n\tsetPrivateConstants,\n\tgetPrivateConstants,\n\tsetPrivateConstantByName,\n\tgetPrivateConstantByName,\n\tsetWidth,\n\tgetWidth,\n\tsetHeight,\n\tgetHeight,\n\tsetPaddingLeft,\n\tgetPaddingLeft,\n\tsetPaddingRight,\n\tgetPaddingRight,\n\tsetPaddingTop,\n\tgetPaddingTop,\n\tsetPaddingBottom,\n\tgetPaddingBottom,\n\tsetWidthScaleFactor,\n\tgetWidthScaleFactor,\n\tsetMargin,\n\tgetMargin,\n\tsetDefinedMinHeightAndWidth,\n\tgetDefinedMinHeightAndWidth,\n\tsetGridWidth,\n\tgetGridWidth,\n\tsetGridHeight,\n\tgetGridHeight,\n\tsetGridMargin,\n\tgetGridMargin,\n\tsetMinHeightAndWidth,\n\tgetMinHeightAndWidth,\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nimport { getPrivateConstantByName } from \"./privateConstants\";\n\n// const constants = {\n// \tMOVE_GUIDE_RADIUS: 10,\n// \tRESIZE_SQUARE_GUIDE_LENGTH: 10,\n// \tRESIZE_SQUARE_BORDER_GUIDE_WIDTH: 3,\n// \tAUTO_SCROLL_DISTANCE: 50,\n// \tAUTO_SCROLL_POINT: 50,\n// \tMOVE_OR_RESIZE_HEIGHT_INCREMENTS: 50,\n\n// \tMOUSE_DOWN_TIME: 500,\n// \tTOUCH_HOLD_TIME: 300,\n// \tDEMO_WAIT_TIME: 500,\n// \tWINDOW_RESIZE_WAIT_TIME: 1000,\n// \tMARGIN: 5,\n\n// \tMOBILE_ASPECT_RATIO: 16 / 9,\n\n// \tADD_OR_CUTSPACE_TOGGLE: \"ADD\",\n\n// \tDEFINED_MIN_HEIGHT_AND_WIDTH: 150,\n// };\n\nconst setPublicConstants = function (context, val) {\n\tcontext.store.constants.publicConstants = val;\n};\n\nconst getPublicConstants = function (context) {\n\treturn context.store.constants.publicConstants;\n};\n\nconst setPublicConstantByName = function (context, name, value) {\n\tif (context.store.constants.publicConstants.hasOwnProperty(name)) {\n\t\tcontext.store.constants.publicConstants[name] = value;\n\t}\n};\n\nconst getPublicConstantByName = function (context, name) {\n\treturn context.store.constants.publicConstants[name];\n};\n\nexport default getPublicConstants;\nexport {\n\tsetPublicConstants,\n\tgetPublicConstants,\n\tsetPublicConstantByName,\n\tgetPublicConstantByName,\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nimport getPublicConstants from \"../../store/constants/publicConstants\";\nimport getPrivateConstants from \"../../store/constants/privateConstants\";\n\nexport const emptyObject = function (obj) {\n\tlet keys = Object.keys(obj);\n\tlet length = keys.length;\n\tfor (let i = 0; i < length; i++) {\n\t\tdelete obj[keys[i]];\n\t}\n};\n\nexport let isMobile = function (context) {\n\tconst isMobileFunction = context.options.isMobileCheck;\n\n\tif (isMobileFunction) {\n\t\treturn isMobileFunction();\n\t}\n\n\t// production\n\treturn window.matchMedia(\n\t\t// \"only screen and (max-width: 1033px) and (min-width : 1px)\"\n\t\t\"only screen and (max-width: 979px) and (min-width : 1px)\"\n\t).matches;\n};\n\nexport const fixTo = (num, to = 6) => {\n\treturn Math.trunc(num * Math.pow(10, to)) / Math.pow(10, to);\n};\n\nexport const filter = (arr) => {\n\tconst len = arr.length;\n\tconst temp = new Array(len);\n\tlet count = 0;\n\tfor (let i = 0; i < len; i++) {\n\t\tif (arr[i] !== null && arr[i] !== undefined) {\n\t\t\ttemp[count++] = arr[i];\n\t\t}\n\t}\n\n\tconst res = new Array(count);\n\tfor (let i = 0; i < count; i++) {\n\t\tres[i] = temp[i];\n\t}\n\n\treturn res;\n};\n\nexport const getRandomString = (len = 22) => {\n\tconst alpNum = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n\n\tconst arr = new Array(len);\n\tfor (let i = 0; i < len; i++) {\n\t\tarr[i] = alpNum[Math.floor(Math.random() * 36)];\n\t}\n\treturn arr.join(\"\");\n};\n\nexport const getItemDimenWithMargin = (MARGIN, item) => {\n\treturn {\n\t\tx: item.x - MARGIN,\n\t\ty: item.y - MARGIN,\n\t\twidth: item.width + MARGIN * 2,\n\t\theight: item.height + MARGIN * 2,\n\t};\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nimport { emptyObject } from \"../../libs/utils/utils\";\n\n// const ev = {\n// \t// elementID: \"\",\n// \tpseudoElementId: \"\",\n// };\n// const positionData = [];\n// const modifiedPositionData = [];\n// const initialPositionData = [];\n// const initialGridData = {};\n// let callbacks = {};\n// const serializedPositionData = {};\n\n// const setElementId = function (id) {\n// \tev.elementID = id;\n// };\n\nconst setEssentialVariables = function (context, ev) {\n\tcontext.store.variables.essentials = ev;\n};\n\nconst getEssentialVariables = function (context) {\n\treturn context.store.variables.essentials;\n};\n\nconst setPseudoContainerId = function (context, id) {\n\tcontext.store.variables.essentials.pseudoContainerId = id;\n};\n\nconst getPseudoContainerId = function (context) {\n\treturn context.store.variables.essentials.pseudoContainerId;\n};\n\nconst setPositionData = function (context, pd) {\n\tconst len = pd.length;\n\tconst arr = new Array(len);\n\tfor (let i = 0; i < len; i++) {\n\t\tarr[i] = { ...pd[i] };\n\t}\n\n\tcontext.store.variables.essentials.positionData = arr;\n};\n\nconst getPositionData = function (context) {\n\treturn context.store.variables.essentials.positionData;\n};\n\nconst setModifiedPositionData = function (context, pd) {\n\tconst len = pd.length;\n\tconst arr = new Array(len);\n\tfor (let i = 0; i < len; i++) {\n\t\tarr[i] = { ...pd[i] };\n\t}\n\n\tcontext.store.variables.essentials.modifiedPositionData = arr;\n};\n\nconst getModifiedPositionData = function (context) {\n\treturn context.store.variables.essentials.modifiedPositionData;\n};\n\n// const setInitialPositionData = function (context, pos) {\n// \tcontext.store.variables.essentials.initialPositionData.length = 0;\n// \tObject.assign(\n// \t\tcontext.store.variables.essentials.initialPositionData,\n// \t\tJSON.parse(JSON.stringify(pos))\n// \t);\n// };\n\n// const getInitialPositionData = function (context) {\n// \treturn context.store.variables.essentials.initialPositionData;\n// };\n\nconst setGridData = function (context, grid) {\n\tcontext.store.variables.essentials.gridData = grid;\n};\n\nconst getGridData = function (context) {\n\treturn context.store.variables.essentials.gridData;\n};\n\nconst setCallbacks = function (context, cbs) {\n\tcontext.store.variables.essentials.callbacks = cbs;\n};\n\nconst getCallbacks = function (context) {\n\treturn context.store.variables.essentials.callbacks;\n};\n\nexport default getEssentialVariables;\nexport {\n\t// setElementId,\n\tsetEssentialVariables,\n\tgetEssentialVariables,\n\tsetPseudoContainerId,\n\tgetPseudoContainerId,\n\tsetPositionData,\n\tgetPositionData,\n\tsetModifiedPositionData,\n\tgetModifiedPositionData,\n\tsetGridData,\n\tgetGridData,\n\tsetCallbacks,\n\tgetCallbacks,\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\n// import { emptyObject } from \"../libs/utils/utils\";\n\n// const e = {\n// \t$body: [],\n// \t$bodyPseudoEl: {},\n// \t$limberGridViewBodyPseudoItem: [],\n// \t$el: {},\n// \t$limberGridView: [],\n// \t$limberGridViewItems: [],\n// \t$limberGridViewDebugMergedTempRects: [],\n// \t$limberGridViewDebugStackTopRect: undefined,\n// \t$limberGridViewDebugStackTopAdjRect: undefined,\n// \t$limberGridViewDebugMergedRect: undefined,\n// \t$limberGridViewDebugAdjRect: undefined,\n// \t$limberGridViewDebugResultStackRects: [],\n// \t$limberGridViewDebugStackRects: [],\n// \t$limberGridViewDebugUnmergedRects: [],\n// \t$limberGridViewDebugMergedFreeRects: [],\n// \t$limberGridViewContainer: undefined,\n// \t$limberGridViewStyle: [],\n// \t$limberGridViewGridPseudoItem: undefined,\n// \t$limberGridViewMoveGuide: [],\n// \t$limberGridViewHeightAdjustGuide: [],\n// \t$limberGridViewAddItemGuide: [],\n// \t$limberGridViewAddItemOnTouchHoldGuide: [],\n// };\n\nconst getElements = function (context) {\n\treturn context.store.variables.elements;\n};\n\nconst set$body = function (context, elm) {\n\tcontext.store.variables.elements.$body = elm;\n};\n\nconst get$body = function (context) {\n\treturn context.store.variables.elements.$body;\n};\n\n// outside pseudos BEGIN\nconst set$pseudoContainer = function (context, elm) {\n\tcontext.store.variables.elements.$pseudoContainer = elm;\n};\n\nconst get$pseudoContainer = function (context) {\n\treturn context.store.variables.elements.$pseudoContainer;\n};\n\nconst set$pseudoContainerItem = function (context, elm) {\n\tcontext.store.variables.elements.$pseudoContainerItem = elm;\n};\n\nconst get$pseudoContainerItem = function (context) {\n\treturn context.store.variables.elements.$pseudoContainerItem;\n};\n// outside pseudos ENDED\n\n// Grid Elements BEGIN\nconst set$el = function (context, elm) {\n\tcontext.store.variables.elements.$el = elm;\n};\n\nconst get$el = function (context) {\n\treturn context.store.variables.elements.$el;\n};\n\nconst set$limberGridViewContainer = function (context, elm) {\n\tcontext.store.variables.elements.$limberGridViewContainer = elm;\n};\n\nconst get$limberGridViewContainer = function (context) {\n\treturn context.store.variables.elements.$limberGridViewContainer;\n};\n\nconst set$limberGridView = function (context, elm) {\n\tcontext.store.variables.elements.$limberGridView = elm;\n};\n\nconst get$limberGridView = function (context) {\n\treturn context.store.variables.elements.$limberGridView;\n};\n\nconst set$limberGridViewItems = function (context, elm) {\n\tcontext.store.variables.elements.$limberGridViewItems = elm;\n};\n\nconst get$limberGridViewItems = function (context) {\n\treturn context.store.variables.elements.$limberGridViewItems;\n};\n\nconst set$limberGridViewPseudoItem = function (context, elm) {\n\tcontext.store.variables.elements.$limberGridViewPseudoItem = elm;\n};\n\nconst get$limberGridViewPseudoItem = function (context) {\n\treturn context.store.variables.elements.$limberGridViewPseudoItem;\n};\n\nconst set$limberGridViewMoveGuide = function (context, elm) {\n\tcontext.store.variables.elements.$limberGridViewMoveGuide = elm;\n};\n\nconst get$limberGridViewMoveGuide = function (context) {\n\treturn context.store.variables.elements.$limberGridViewMoveGuide;\n};\n\nconst set$limberGridViewHeightAdjustGuide = function (context, elm) {\n\tcontext.store.variables.elements.$limberGridViewHeightAdjustGuide = elm;\n};\n\nconst get$limberGridViewHeightAdjustGuide = function (context) {\n\treturn context.store.variables.elements.$limberGridViewHeightAdjustGuide;\n};\n\nconst set$limberGridViewAddCutGuide = function (context, elm) {\n\tcontext.store.variables.elements.$limberGridViewAddCutGuide = elm;\n};\n\nconst get$limberGridViewAddCutGuide = function (context) {\n\treturn context.store.variables.elements.$limberGridViewAddCutGuide;\n};\n\nconst set$limberGridViewTouchHoldGuide = function (context, elm) {\n\tcontext.store.variables.elements.$limberGridViewTouchHoldGuide = elm;\n};\n\nconst get$limberGridViewTouchHoldGuide = function (context) {\n\treturn context.store.variables.elements.$limberGridViewTouchHoldGuide;\n};\n// Grid Elements ENDED\n\n// DEBUG Elements\nconst set$limberGridViewDebugMergedTempRects = function (context, elm) {\n\tcontext.store.variables.elements.$limberGridViewDebugMergedTempRects = elm;\n};\n\nconst get$limberGridViewDebugMergedTempRects = function (context) {\n\treturn context.store.variables.elements.$limberGridViewDebugMergedTempRects;\n};\n\nconst set$limberGridViewDebugStackTopRect = function (context, elm) {\n\tcontext.store.variables.elements.$limberGridViewDebugStackTopRect = elm;\n};\n\nconst get$limberGridViewDebugStackTopRect = function (context) {\n\treturn context.store.variables.elements.$limberGridViewDebugStackTopRect;\n};\n\nconst set$limberGridViewDebugStackTopAdjRect = function (context, elm) {\n\tcontext.store.variables.elements.$limberGridViewDebugStackTopAdjRect = elm;\n};\n\nconst get$limberGridViewDebugStackTopAdjRect = function (context) {\n\treturn context.store.variables.elements.$limberGridViewDebugStackTopAdjRect;\n};\n\nconst set$limberGridViewDebugMergedRect = function (context, elm) {\n\tcontext.store.variables.elements.$limberGridViewDebugMergedRect = elm;\n};\n\nconst get$limberGridViewDebugMergedRect = function (context) {\n\treturn context.store.variables.elements.$limberGridViewDebugMergedRect;\n};\n\nconst set$limberGridViewDebugAdjRect = function (context, elm) {\n\tcontext.store.variables.elements.$limberGridViewDebugAdjRect = elm;\n};\n\nconst get$limberGridViewDebugAdjRect = function (context) {\n\treturn context.store.variables.elements.$limberGridViewDebugAdjRect;\n};\n\nconst set$limberGridViewDebugStackRects = function (context, elm) {\n\tcontext.store.variables.elements.$limberGridViewDebugStackRects = elm;\n};\n\nconst get$limberGridViewDebugStackRects = function (context) {\n\treturn context.store.variables.elements.$limberGridViewDebugStackRects;\n};\n\nconst set$limberGridViewDebugResultStackRects = function (context, elm) {\n\tcontext.store.variables.elements.$limberGridViewDebugResultStackRects = elm;\n};\n\nconst get$limberGridViewDebugResultStackRects = function (context) {\n\treturn context.store.variables.elements.$limberGridViewDebugResultStackRects;\n};\n\nconst set$limberGridViewDebugUnmergedRects = function (context, elm) {\n\tcontext.store.variables.elements.$limberGridViewDebugUnmergedRects = elm;\n};\n\nconst get$limberGridViewDebugUnmergedRects = function (context) {\n\treturn context.store.variables.elements.$limberGridViewDebugUnmergedRects;\n};\n\nconst set$limberGridViewDebugMergedFreeRects = function (context, elm) {\n\tcontext.store.variables.elements.$limberGridViewDebugMergedFreeRects = elm;\n};\n\nconst get$limberGridViewDebugMergedFreeRects = function (context) {\n\treturn context.store.variables.elements.$limberGridViewDebugMergedFreeRects;\n};\n\nexport default getElements;\nexport {\n\tgetElements,\n\tset$body,\n\tget$body,\n\t// outside pseudo\n\tset$pseudoContainer,\n\tget$pseudoContainer,\n\tset$pseudoContainerItem,\n\tget$pseudoContainerItem,\n\t// Grid Elements\n\tset$el,\n\tget$el,\n\tset$limberGridView,\n\tget$limberGridView,\n\tset$limberGridViewItems,\n\tget$limberGridViewItems,\n\tset$limberGridViewContainer,\n\tget$limberGridViewContainer,\n\tset$limberGridViewPseudoItem,\n\tget$limberGridViewPseudoItem,\n\tset$limberGridViewMoveGuide,\n\tget$limberGridViewMoveGuide,\n\tset$limberGridViewHeightAdjustGuide,\n\tget$limberGridViewHeightAdjustGuide,\n\tset$limberGridViewAddCutGuide,\n\tget$limberGridViewAddCutGuide,\n\tset$limberGridViewTouchHoldGuide,\n\tget$limberGridViewTouchHoldGuide,\n\t// DEBUG Elements\n\tset$limberGridViewDebugMergedTempRects,\n\tget$limberGridViewDebugMergedTempRects,\n\tset$limberGridViewDebugStackTopRect,\n\tget$limberGridViewDebugStackTopRect,\n\tset$limberGridViewDebugStackTopAdjRect,\n\tget$limberGridViewDebugStackTopAdjRect,\n\tset$limberGridViewDebugMergedRect,\n\tget$limberGridViewDebugMergedRect,\n\tset$limberGridViewDebugAdjRect,\n\tget$limberGridViewDebugAdjRect,\n\tset$limberGridViewDebugStackRects,\n\tget$limberGridViewDebugStackRects,\n\tset$limberGridViewDebugResultStackRects,\n\tget$limberGridViewDebugResultStackRects,\n\tset$limberGridViewDebugUnmergedRects,\n\tget$limberGridViewDebugUnmergedRects,\n\tset$limberGridViewDebugMergedFreeRects,\n\tget$limberGridViewDebugMergedFreeRects,\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nimport getPrivateConstants from \"../../store/constants/privateConstants\";\nimport getPublicConstants from \"../../store/constants/publicConstants\";\nimport { getPositionData } from \"../../store/variables/essentials\";\nimport getElements from \"../../store/variables/elements\";\n\nexport const getPlainFrom4Points = function (pointsArray) {\n\tvar minX = -1;\n\tvar minY = -1;\n\tvar maxX = -1;\n\tvar maxY = -1;\n\tvar length_0 = pointsArray.length;\n\tfor (var i = 0; i < length_0; i++) {\n\t\tif (pointsArray[i][0] < minX || minX < 0) {\n\t\t\tminX = pointsArray[i][0];\n\t\t}\n\t\tif (pointsArray[i][0] > maxX) {\n\t\t\tmaxX = pointsArray[i][0];\n\t\t}\n\t\tif (pointsArray[i][1] < minY || minY < 0) {\n\t\t\tminY = pointsArray[i][1];\n\t\t}\n\t\tif (pointsArray[i][1] > maxY) {\n\t\t\tmaxY = pointsArray[i][1];\n\t\t}\n\t}\n\n\tvar plane = {};\n\tplane.x = minX;\n\tplane.y = minY;\n\tplane.width = maxX - minX;\n\tplane.height = maxY - minY;\n\n\treturn plane;\n};\n\nexport const getCoordinates = function (item) {\n\tvar itemTopLeft = [item.x, item.y];\n\tvar itemTopRight = [item.x + item.width, item.y];\n\tvar itemBottomLeft = [item.x, item.y + item.height];\n\tvar itemBottomRight = [item.x + item.width, item.y + item.height];\n\n\tvar itemCoordinatesArr = [\n\t\titemTopLeft,\n\t\titemTopRight,\n\t\titemBottomRight,\n\t\titemBottomLeft,\n\t];\n\n\treturn itemCoordinatesArr;\n};\n\nexport const getLines = function (item) {\n\tvar itemTopLeft = JSON.parse(JSON.stringify([item.x, item.y]));\n\tvar itemTopRight = JSON.parse(JSON.stringify([item.x + item.width, item.y]));\n\tvar itemBottomLeft = JSON.parse(\n\t\tJSON.stringify([item.x, item.y + item.height])\n\t);\n\tvar itemBottomRight = JSON.parse(\n\t\tJSON.stringify([item.x + item.width, item.y + item.height])\n\t);\n\n\tvar topLine = [itemTopLeft, itemTopRight];\n\tvar rightLine = [itemTopRight, itemBottomRight];\n\tvar bottomLine = [itemBottomLeft, itemBottomRight];\n\tvar leftLine = [itemTopLeft, itemBottomLeft];\n\n\tvar allLines = [topLine, rightLine, bottomLine, leftLine];\n\n\treturn allLines;\n};\n\nexport const arePlainsSame = function (A, B) {\n\tif (A.x == B.x && A.y == B.y && A.width == B.width && A.height == B.height) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\n\nexport const arePlainsIdentical = function (A, B) {\n\tif (A.width == B.width && A.height == B.height) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\n\nexport const isValidPlane = function (plane) {\n\tif (plane.x >= 0 && plane.y >= 0 && plane.width > 0 && plane.height > 0) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\n\nexport const sortPlainsByArea = function (planes, order = \"dec\") {\n\tif (order == \"asc\") {\n\t\tplanes.sort(function (a, b) {\n\t\t\treturn (\n\t\t\t\t(a.x + a.width) * (a.y + a.height) - (b.x + b.width) * (b.y + b.height)\n\t\t\t);\n\t\t});\n\t} else {\n\t\tplanes.sort(function (a, b) {\n\t\t\treturn (\n\t\t\t\t(b.x + b.width) * (b.y + b.height) - (a.x + a.width) * (a.y + a.height)\n\t\t\t);\n\t\t});\n\t}\n\n\treturn planes;\n};\n\nexport const sortPlainsByHeight = function (planes, order = \"dec\") {\n\tif (order == \"asc\") {\n\t\tplanes.sort(function (a, b) {\n\t\t\treturn a.height - b.height;\n\t\t});\n\t} else {\n\t\tplanes.sort(function (a, b) {\n\t\t\treturn b.height - a.height;\n\t\t});\n\t}\n\n\treturn planes;\n};\n\nexport const sortPlainsByDepth = function (planes, order = \"dec\") {\n\tif (order == \"asc\") {\n\t\tplanes.sort(function (a, b) {\n\t\t\treturn a.y + a.height - (b.y + b.height);\n\t\t});\n\t} else {\n\t\tplanes.sort(function (a, b) {\n\t\t\treturn b.y + b.height - (a.y + a.height);\n\t\t});\n\t}\n\n\treturn planes;\n};\n\nexport const divideEqualNumber = function (a, DEFAULT = 0) {\n\tvar res = a / a;\n\tif (res == NaN) {\n\t\treturn 0;\n\t} else {\n\t\treturn 1;\n\t}\n};\n\nexport const getMarginAtPoint = function (a) {\n\tif (a == 0) {\n\t\treturn 0;\n\t} else {\n\t\treturn publicConstants.MARGIN;\n\t}\n};\n\nexport const getRowSequence = function (serialize) {\n\tvar rows = {};\n\tvar rowsArr = [];\n\tvar columns = {};\n\n\tvar length_0 = positionData.length;\n\n\tfor (var i = 0; i < length_0; i++) {\n\t\tif (rows.hasOwnProperty(positionData[i].y)) {\n\t\t\trows[positionData[i].y].push(i);\n\t\t} else {\n\t\t\trows[positionData[i].y] = [];\n\t\t\trowsArr.push(Number(positionData[i].y));\n\t\t\trows[positionData[i].y].push(i);\n\t\t}\n\t}\n\n\trowsArr.sort(function (a, b) {\n\t\treturn a - b;\n\t});\n\n\tvar length_0 = rowsArr.length;\n\tfor (var i = 0; i < length_0; i++) {\n\t\trows[rowsArr[i]].sort(function (a, b) {\n\t\t\treturn positionData[a].x - positionData[b].x;\n\t\t});\n\t}\n\n\tif (serialize != true) {\n\t\treturn { rowOrder: rowsArr, rows: rows };\n\t} else {\n\t\tvar arr = [];\n\t\tvar map = {};\n\t\tvar count = 0;\n\n\t\tvar length_0 = rowsArr.length;\n\t\tfor (var i = 0; i < length_0; i++) {\n\t\t\tvar length_1 = rows[rowsArr[i]].length;\n\t\t\tfor (var j = 0; j < length_1; j++) {\n\t\t\t\tarr.push(rows[rowsArr[i]][j]);\n\t\t\t\tmap[rows[rowsArr[i]][j]] = count++;\n\t\t\t}\n\t\t}\n\n\t\treturn { list: arr, map: map };\n\t}\n};\n\nexport const adjustHeight = function (context, yMouseOrTouchPosition) {\n\tconst e = getElements(context);\n\tconst publicConstants = getPublicConstants(context);\n\n\tconst scrollHeight = e.$limberGridView.scrollHeight;\n\tif (\n\t\tscrollHeight - yMouseOrTouchPosition <=\n\t\tpublicConstants.AUTO_SCROLL_POINT\n\t) {\n\t\te.$limberGridViewHeightAdjustGuide.style.height =\n\t\t\tyMouseOrTouchPosition +\n\t\t\tpublicConstants.MOVE_OR_RESIZE_HEIGHT_INCREMENTS +\n\t\t\t\"px\";\n\t}\n};\n\nexport const adjustScroll = function (\n\tcontext,\n\tlimberGridViewOnVisibleAreaY,\n\tlimberGridViewHeightVisibleHeight\n) {\n\tconst e = getElements(context);\n\tconst publicConstants = getPublicConstants(context);\n\tconst privateConstants = getPrivateConstants(context);\n\n\tconst scrollTop = e.$limberGridView.scrollTop;\n\t// var scrollLeft = this.$limberGridView[0].scrollLeft;\n\tlet programScrolled = false;\n\tif (limberGridViewOnVisibleAreaY > 0) {\n\t\tif (\n\t\t\tlimberGridViewHeightVisibleHeight - limberGridViewOnVisibleAreaY <\n\t\t\tpublicConstants.AUTO_SCROLL_POINT\n\t\t) {\n\t\t\te.$limberGridView.scrollTop =\n\t\t\t\tscrollTop + publicConstants.AUTO_SCROLL_DISTANCE;\n\t\t\tprogramScrolled = true;\n\t\t}\n\t\tif (\n\t\t\tlimberGridViewOnVisibleAreaY < privateConstants.HEIGHT / 10 &&\n\t\t\tscrollTop !== 0\n\t\t) {\n\t\t\te.$limberGridView.scrollTop =\n\t\t\t\tscrollTop - publicConstants.AUTO_SCROLL_DISTANCE;\n\t\t\tprogramScrolled = true;\n\t\t}\n\t}\n\n\t// if(limberGridViewOnVisibleAreaX > 0){\n\t// \tif((limberGridViewWidthVisibleWidth - limberGridViewOnVisibleAreaX) < (this.WIDTH/10)){\n\t// \t\tthis.$limberGridView[0].scrollLeft = scrollLeft + 100;\n\t// \t\tvar programScrolled = true;\n\t// \t}\n\t// \tif((limberGridViewOnVisibleAreaX) < (this.WIDTH/10) && scrollLeft != 0){\n\t// \t\tthis.$limberGridView[0].scrollLeft = scrollLeft - 100;\n\t// \t\tvar programScrolled = true;\n\t// \t}\n\t// }\n\treturn programScrolled;\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nimport getElements from \"../../store/variables/elements\";\nimport { getPositionData } from \"../../store/variables/essentials\";\nimport getPrivateConstants from \"../../store/constants/privateConstants\";\nimport getPublicConstants from \"../../store/constants/publicConstants\";\n\nexport const calculateMousePosOnDesk = function (context, event) {\n\tconst e = getElements(context);\n\tconst privateConstants = getPrivateConstants(context);\n\n\tconst limberGridViewPosition = e.$limberGridView.getBoundingClientRect();\n\tif (\n\t\tevent.clientX >= limberGridViewPosition.left &&\n\t\tevent.clientX <=\n\t\t\tlimberGridViewPosition.left + limberGridViewPosition.width &&\n\t\tevent.clientY >= limberGridViewPosition.top &&\n\t\tevent.clientY <= limberGridViewPosition.top + limberGridViewPosition.height\n\t) {\n\t\tconst scrollTop = e.$limberGridView.scrollTop;\n\t\tconst scrollLeft = e.$limberGridView.scrollLeft;\n\n\t\tconst mouseXOnLimberGridView =\n\t\t\tevent.clientX -\n\t\t\tlimberGridViewPosition.left -\n\t\t\tprivateConstants.PADDING_LEFT +\n\t\t\tscrollLeft;\n\t\tconst mouseYOnLimberGridView =\n\t\t\tevent.clientY -\n\t\t\tlimberGridViewPosition.top -\n\t\t\tprivateConstants.PADDING_TOP +\n\t\t\tscrollTop;\n\n\t\tif (mouseXOnLimberGridView < 0 || mouseYOnLimberGridView < 0) {\n\t\t\treturn false;\n\t\t}\n\t\treturn { x: mouseXOnLimberGridView, y: mouseYOnLimberGridView };\n\t} else {\n\t\t// mouse pointer NOT inside limberGridView\n\t\treturn false;\n\t}\n};\n\nexport const calculateTouchPosOnDesk = function (context, event) {\n\tconst e = getElements(context);\n\tconst privateConstants = getPrivateConstants(context);\n\n\tconst limberGridViewPosition = e.$limberGridView.getBoundingClientRect();\n\tlet touch;\n\n\tif (event.type === \"touchend\") {\n\t\ttouch = {\n\t\t\tclientX: event.changedTouches[0].clientX,\n\t\t\tclientY: event.changedTouches[0].clientY,\n\t\t};\n\t} else {\n\t\ttouch = {\n\t\t\tclientX: event.touches[0].clientX,\n\t\t\tclientY: event.touches[0].clientY,\n\t\t};\n\t}\n\tif (\n\t\ttouch.clientX >= limberGridViewPosition.left &&\n\t\ttouch.clientX <=\n\t\t\tlimberGridViewPosition.left + limberGridViewPosition.width &&\n\t\ttouch.clientY >= limberGridViewPosition.top &&\n\t\ttouch.clientY <= limberGridViewPosition.top + limberGridViewPosition.height\n\t) {\n\t\tconst scrollTop = e.$limberGridView.scrollTop;\n\t\tconst scrollLeft = e.$limberGridView.scrollLeft;\n\n\t\tconst touchXOnLimberGridView =\n\t\t\ttouch.clientX -\n\t\t\tlimberGridViewPosition.left -\n\t\t\tprivateConstants.PADDING_LEFT +\n\t\t\tscrollLeft;\n\t\tconst touchYOnLimberGridView =\n\t\t\ttouch.clientY -\n\t\t\tlimberGridViewPosition.top -\n\t\t\tprivateConstants.PADDING_TOP +\n\t\t\tscrollTop;\n\n\t\tif (touchXOnLimberGridView < 0 || touchYOnLimberGridView < 0) {\n\t\t\treturn false;\n\t\t}\n\t\treturn { x: touchXOnLimberGridView, y: touchYOnLimberGridView };\n\t} else {\n\t\t// touch NOT inside limberGridView\n\t\treturn false;\n\t}\n};\n\nexport const calculateTouchPosOnItem = function (context, event) {\n\tconst e = getElements(context);\n\n\tconst limberGridViewItemPosition = e.$limberGridViewItems[\n\t\tevent.currentTarget.attributes[\"data-index\"].value\n\t].getBoundingClientRect();\n\n\tif (\n\t\tevent.touches[0].clientX >= limberGridViewItemPosition.left &&\n\t\tevent.touches[0].clientX <=\n\t\t\tlimberGridViewItemPosition.left + limberGridViewItemPosition.width &&\n\t\tevent.touches[0].clientY >= limberGridViewItemPosition.top &&\n\t\tevent.touches[0].clientY <=\n\t\t\tlimberGridViewItemPosition.top + limberGridViewItemPosition.height\n\t) {\n\t\tconst touchXOnLimberGridView =\n\t\t\tevent.touches[0].clientX - limberGridViewItemPosition.left;\n\t\tconst touchYOnLimberGridView =\n\t\t\tevent.touches[0].clientY - limberGridViewItemPosition.top;\n\n\t\treturn { x: touchXOnLimberGridView, y: touchYOnLimberGridView };\n\t} else {\n\t\t// touch NOT inside limberGridViewItem\n\t\treturn false;\n\t}\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\n// SEE index.js for options format\n\nconst setOptions = function (context, options) {\n\tObject.assign(context.options, options);\n};\n\nconst getOptions = function (context) {\n\treturn context.options;\n};\n\nexport default getOptions;\nexport { setOptions, getOptions };\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nimport getElements from \"../../store/variables/elements\";\nimport getOptions from \"../../store/variables/options\";\nimport { getPositionData } from \"../../store/variables/essentials\";\nimport getPrivateConstants from \"../../store/constants/privateConstants\";\nimport getPublicConstants from \"../../store/constants/publicConstants\";\nimport { calculateTouchPosOnItem } from \"./eventHandlerUtils\";\n\nexport const getUserActionData = (context, event) => {\n\tconst publicConstants = getPublicConstants(context);\n\tconst options = getOptions(context);\n\tconst pd = getPositionData(context);\n\n\tconst itemIndex = parseInt(\n\t\tevent.currentTarget.attributes[\"data-index\"].value\n\t);\n\tlet radius;\n\tlet touchPosOnLimberGridItem;\n\tlet X, Y;\n\n\tif (event.which === 1) {\n\t\tradius = Math.sqrt(\n\t\t\tMath.pow(0 - event.offsetX, 2) + Math.pow(0 - event.offsetY, 2)\n\t\t);\n\t\tX = event.offsetX;\n\t\tY = event.offsetY;\n\t} else if (event.which === 0) {\n\t\ttouchPosOnLimberGridItem = calculateTouchPosOnItem(context, event);\n\t\tradius = Math.sqrt(\n\t\t\tMath.pow(0 - touchPosOnLimberGridItem.x, 2) +\n\t\t\t\tMath.pow(0 - touchPosOnLimberGridItem.y, 2)\n\t\t);\n\t\tX = touchPosOnLimberGridItem.x;\n\t\tY = touchPosOnLimberGridItem.y;\n\t} else {\n\t\treturn false;\n\t\t// throw \"Unidentified event\";\n\t}\n\n\tconst resizeUIBox = {\n\t\tx:\n\t\t\tevent.currentTarget.offsetWidth -\n\t\t\tpublicConstants.RESIZE_SQUARE_GUIDE_LENGTH,\n\t\ty:\n\t\t\tevent.currentTarget.offsetHeight -\n\t\t\tpublicConstants.RESIZE_SQUARE_GUIDE_LENGTH,\n\t\twidth:\n\t\t\tpublicConstants.RESIZE_SQUARE_GUIDE_LENGTH +\n\t\t\tpublicConstants.RESIZE_SQUARE_GUIDE_BORDER_WIDTH,\n\t\theight:\n\t\t\tpublicConstants.RESIZE_SQUARE_GUIDE_LENGTH +\n\t\t\tpublicConstants.RESIZE_SQUARE_GUIDE_BORDER_WIDTH,\n\t};\n\n\tif (\n\t\toptions.itemMouseDownMoveCheck &&\n\t\toptions.itemMouseDownMoveCheck(\n\t\t\tX,\n\t\t\tY,\n\t\t\t{ ...pd[itemIndex] },\n\t\t\titemIndex,\n\t\t\tevent.target\n\t\t)\n\t) {\n\t\t// call developer defined function to check if mousedown for MOVE is in a valid place\n\t\treturn {\n\t\t\ttype: \"move\",\n\t\t\titemIndex: event.currentTarget.attributes[\"data-index\"].value,\n\t\t};\n\t}\n\n\tif (\n\t\tradius <= publicConstants.MOVE_GUIDE_RADIUS &&\n\t\t!options.itemMouseDownMoveCheck\n\t) {\n\t\treturn {\n\t\t\ttype: \"move\",\n\t\t\titemIndex: event.currentTarget.attributes[\"data-index\"].value,\n\t\t};\n\t}\n\n\tif (\n\t\toptions.itemMouseDownResizeCheck &&\n\t\toptions.itemMouseDownResizeCheck(\n\t\t\tX,\n\t\t\tY,\n\t\t\t{ ...pd[itemIndex] },\n\t\t\titemIndex,\n\t\t\tevent.target\n\t\t)\n\t) {\n\t\t// call developer defined function to check if mousedown for RESIZE is in a valid place\n\t\treturn {\n\t\t\ttype: \"resize\",\n\t\t\titemIndex: event.currentTarget.attributes[\"data-index\"].value,\n\t\t};\n\t}\n\n\tif (\n\t\tX >= resizeUIBox.x &&\n\t\tX <= resizeUIBox.x + resizeUIBox.width &&\n\t\tY >= resizeUIBox.y &&\n\t\tY <= resizeUIBox.y + resizeUIBox.height &&\n\t\t!options.itemMouseDownResizeCheck\n\t) {\n\t\treturn {\n\t\t\ttype: \"resize\",\n\t\t\titemIndex: event.currentTarget.attributes[\"data-index\"].value,\n\t\t};\n\t}\n};\n\nexport const loadResizingState = (context, userActionData) => {\n\tconst e = getElements(context);\n\tconst pd = getPositionData(context);\n\n\tconst item = pd[userActionData.itemIndex];\n\n\te.$limberGridViewHeightAdjustGuide.style.height = 0 + \"px\";\n\te.$limberGridViewHeightAdjustGuide.classList.add(\n\t\t\"limber-grid-view-height-adjust-guide-active\"\n\t);\n\n\te.$limberGridViewPseudoItem.style.width = `${item.width}px`;\n\te.$limberGridViewPseudoItem.style.height = `${item.height}px`;\n\te.$limberGridViewPseudoItem.setAttribute(\"data-after\", `w: 0px, h: 0px`);\n\te.$limberGridViewPseudoItem.style.transform = `translate(${userActionData.itemX}px,${userActionData.itemY}px)`;\n\te.$limberGridViewPseudoItem.classList.add(\n\t\t\"limber-grid-view-pseudo-item-active\"\n\t);\n\te.$limberGridViewPseudoItem.classList.remove(\n\t\t\"limber-grid-view-pseudo-item-resize-allow\",\n\t\t\"limber-grid-view-pseudo-item-resize-disallow\"\n\t);\n\n\te.$body.classList.add(\"limber-grid-view-body-tag-state-editing\");\n\n\tconst itemsLen = e.$limberGridViewItems.length;\n\tfor (let i = 0; i < itemsLen; i++) {\n\t\te.$limberGridViewItems[i].classList.add(\n\t\t\t\"limber-grid-view-item-resizing-state\"\n\t\t);\n\t}\n\n\te.$limberGridViewPseudoItem.classList.add(\n\t\t\"limber-grid-view-pseudo-item-resizing-state\"\n\t);\n};\n\nexport const unloadResizingState = (context, userActionData) => {\n\tconst e = getElements(context);\n\tconst pd = getPositionData(context);\n\n\tconst item = pd[userActionData.itemIndex];\n\n\te.$limberGridViewHeightAdjustGuide.classList.remove(\n\t\t\"limber-grid-view-height-adjust-guide-active\"\n\t);\n\n\te.$limberGridViewPseudoItem.classList.remove(\n\t\t\"limber-grid-view-pseudo-item-active\"\n\t);\n\te.$limberGridViewPseudoItem.style.transform = `translate(0px, 0px)`;\n\n\te.$body.classList.remove(\"limber-grid-view-body-tag-state-editing\");\n\n\tconst itemsLen = e.$limberGridViewItems.length;\n\tfor (let i = 0; i < itemsLen; i++) {\n\t\te.$limberGridViewItems[i].classList.remove(\n\t\t\t\"limber-grid-view-item-resizing-state\"\n\t\t);\n\t}\n\n\te.$limberGridViewPseudoItem.classList.remove(\n\t\t\"limber-grid-view-pseudo-item-resizing-state\"\n\t);\n};\n\nexport const loadMoveState = (context, userActionData, event) => {\n\tconst e = getElements(context);\n\tconst pd = getPositionData(context);\n\n\tconst item = pd[userActionData.itemIndex];\n\n\te.$limberGridViewHeightAdjustGuide.style.height = 0 + \"px\";\n\te.$limberGridViewHeightAdjustGuide.classList.add(\n\t\t\"limber-grid-view-height-adjust-guide-active\"\n\t);\n\n\te.$limberGridViewItems[userActionData.itemIndex].classList.add(\n\t\t\"limber-grid-view-item-demo\"\n\t);\n\n\te.$pseudoContainerItem.classList.add(\n\t\t\"limber-grid-view-pseudo-container-item-active\"\n\t);\n\n\te.$pseudoContainerItem.style.width = item.width + \"px\";\n\te.$pseudoContainerItem.style.height = item.height + \"px\";\n\n\tif (event.which === 1) {\n\t\te.$pseudoContainerItem.style.transform = `translate(${event.pageX}px, ${event.pageY}px)`;\n\t} else if (event.which === 0) {\n\t\te.$pseudoContainerItem.style.transform = `translate(${event.touches[0].pageX}px, ${event.touches[0].pageY}px)`;\n\t}\n\n\te.$body.classList.add(\"limber-grid-view-body-tag-state-editing\");\n};\n\nexport const unloadMoveState = (context, userActionData) => {\n\tconst e = getElements(context);\n\tconst pd = getPositionData(context);\n\n\tconst item = pd[userActionData.itemIndex];\n\n\te.$limberGridViewHeightAdjustGuide.classList.remove(\n\t\t\"limber-grid-view-height-adjust-guide-active\"\n\t);\n\n\te.$limberGridViewItems[userActionData.itemIndex].classList.remove(\n\t\t\"limber-grid-view-item-demo\"\n\t);\n\n\te.$pseudoContainerItem.classList.remove(\n\t\t\"limber-grid-view-pseudo-container-item-active\"\n\t);\n\n\te.$pseudoContainerItem.style.width = \"0px\";\n\te.$pseudoContainerItem.style.height = \"0px\";\n\n\te.$pseudoContainerItem.style.transform = `translate(0px, 0px)`;\n\n\te.$body.classList.remove(\"limber-grid-view-body-tag-state-editing\");\n};\n\nexport const loadOnMoveState = (context, userActionData, event, type) => {\n\tconst e = getElements(context);\n\tconst pd = getPositionData(context);\n\n\tconst item = pd[userActionData.itemIndex];\n\n\tif (type === \"move\") {\n\t\te.$limberGridViewMoveGuide.classList.remove(\n\t\t\t\"limber-grid-view-move-guide-active\"\n\t\t);\n\n\t\te.$pseudoContainerItem.classList.remove(\n\t\t\t\"limber-grid-view-pseudo-container-item-move-allow\",\n\t\t\t\"limber-grid-view-pseudo-container-item-move-disallow\"\n\t\t);\n\n\t\tif (event.which === 1) {\n\t\t\te.$pseudoContainerItem.style.transform = `translate(${event.pageX}px, ${event.pageY}px)`;\n\t\t} else if (event.which === 0) {\n\t\t\te.$pseudoContainerItem.style.transform = `translate(${event.touches[0].pageX}px, ${event.touches[0].pageY}px)`;\n\t\t}\n\t} else if (type === \"resize\") {\n\t\te.$limberGridViewPseudoItem.classList.remove(\n\t\t\t\"limber-grid-view-pseudo-item-resize-allow\",\n\t\t\t\"limber-grid-view-pseudo-item-resize-disallow\"\n\t\t);\n\t}\n};\n\nexport const unloadOnMoveState = (context) => {\n\tconst e = getElements(context);\n\n\te.$limberGridViewMoveGuide.classList.remove(\n\t\t\"limber-grid-view-move-guide-active\"\n\t);\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nexport const isPointInsideRect = (rect, point) => {\n\tconst rectCo = getCoordinates(rect);\n\ttry {\n\t\tif (\n\t\t\tpoint.x > rectCo.tl.x &&\n\t\t\tpoint.x < rectCo.tr.x &&\n\t\t\tpoint.y > rectCo.tl.y &&\n\t\t\tpoint.y < rectCo.bl.y\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t} catch (e) {\n\t\treturn null;\n\t}\n};\n\nexport const doesPointTouchRect = (rect, point) => {\n\tconst rectCo = getCoordinates(rect);\n\ttry {\n\t\tif (\n\t\t\tpoint.x >= rectCo.tl.x &&\n\t\t\tpoint.x <= rectCo.tr.x &&\n\t\t\tpoint.y >= rectCo.tl.y &&\n\t\t\tpoint.y <= rectCo.bl.y &&\n\t\t\t!isPointInsideRect(rect, point)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t} catch (e) {\n\t\treturn null;\n\t}\n};\n\nexport const doRectsOverlap = (rectA, rectB) => {\n\ttry {\n\t\tif (\n\t\t\tisNaN(rectA.x) ||\n\t\t\tisNaN(rectA.y) ||\n\t\t\tisNaN(rectA.width) ||\n\t\t\tisNaN(rectA.height) ||\n\t\t\tisNaN(rectB.x) ||\n\t\t\tisNaN(rectB.y) ||\n\t\t\tisNaN(rectB.width) ||\n\t\t\tisNaN(rectB.height)\n\t\t) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst tlA = { x: rectA.x, y: rectA.y };\n\t\tconst brA = { x: rectA.x + rectA.width, y: rectA.y + rectA.height };\n\t\tconst tlB = { x: rectB.x, y: rectB.y };\n\t\tconst brB = { x: rectB.x + rectB.width, y: rectB.y + rectB.height };\n\n\t\tif (tlA.x >= brB.x || tlB.x >= brA.x) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (tlA.y >= brB.y || tlB.y >= brA.y) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\treturn null;\n\t}\n};\n\nexport const doRectsOnlyTouch = (rectA, rectB) => {\n\ttry {\n\t\tif (\n\t\t\tisNaN(rectA.x) ||\n\t\t\tisNaN(rectA.y) ||\n\t\t\tisNaN(rectA.width) ||\n\t\t\tisNaN(rectA.height) ||\n\t\t\tisNaN(rectB.x) ||\n\t\t\tisNaN(rectB.y) ||\n\t\t\tisNaN(rectB.width) ||\n\t\t\tisNaN(rectB.height)\n\t\t) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst tlA = { x: rectA.x, y: rectA.y };\n\t\tconst brA = { x: rectA.x + rectA.width, y: rectA.y + rectA.height };\n\t\tconst tlB = { x: rectB.x, y: rectB.y };\n\t\tconst brB = { x: rectB.x + rectB.width, y: rectB.y + rectB.height };\n\n\t\tif (tlA.x > brB.x || tlB.x > brA.x) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (tlA.y > brB.y || tlB.y > brA.y) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (doRectsOverlap(rectA, rectB) === false) return true;\n\n\t\treturn false;\n\t} catch (e) {\n\t\treturn null;\n\t}\n};\n\nexport const subtractRect = (rectA, rectB, oCoForm) => {\n\t// gives the non overlapping free spaces in rectA\n\tif (!doRectsOverlap(rectA, rectB)) {\n\t\treturn null;\n\t}\n\n\tconst rectACo = getCoordinates(rectA);\n\tconst rectBCo = getCoordinates(rectB);\n\n\t/*\n\t\t____|_______________|___\n\t\t|\t|\t\t\t\t|\t|\n\t____|___|_______________|___|____\n\t\t|\t|\t\t\t\t|\t|\n\t\t|\t|\t\t\t\t|\t|\n\t\t|\t|\t\t\t\t|\t|\n\t\t|\t|\t\t\t\t|\t|\n\t____|___|_______________|___|___\n\t\t|\t|\t\t\t\t|\t|\n\t\t|___|_______________|___|\n\t\t\t|\t\t\t\t|\n\t\t\n\t*/\n\tconst subRects = {\n\t\tsubRectT: {\n\t\t\ttl: rectACo.tl,\n\t\t\ttr: rectACo.tr,\n\t\t\tbr: { x: rectACo.tr.x, y: rectBCo.tr.y },\n\t\t\tbl: { x: rectACo.tl.x, y: rectBCo.tl.y },\n\t\t},\n\t\tsubRectR: {\n\t\t\ttl: { x: rectBCo.tr.x, y: rectACo.tr.y },\n\t\t\ttr: rectACo.tr,\n\t\t\tbr: rectACo.br,\n\t\t\tbl: { x: rectBCo.br.x, y: rectACo.br.y },\n\t\t},\n\t\tsubRectB: {\n\t\t\ttl: { x: rectACo.bl.x, y: rectBCo.bl.y },\n\t\t\ttr: { x: rectACo.br.x, y: rectBCo.br.y },\n\t\t\tbr: rectACo.br,\n\t\t\tbl: rectACo.bl,\n\t\t},\n\t\tsubRectL: {\n\t\t\ttl: rectACo.tl,\n\t\t\ttr: { x: rectBCo.tl.x, y: rectACo.tl.y },\n\t\t\tbr: { x: rectBCo.bl.x, y: rectACo.bl.y },\n\t\t\tbl: rectACo.bl,\n\t\t},\n\t};\n\n\tconst keys = Object.keys(subRects);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tif (!isValidRectCoForm(subRects[keys[i]])) {\n\t\t\tdelete subRects[keys[i]];\n\t\t}\n\t}\n\n\tlet tl, tm, tr, rm, br, bm, bl, lm;\n\tlet tlNtm, tmNtr, trNrm, rmNbr, brNbm, bmNbl, blNlm, lmNtl;\n\tif (subRects.subRectT && subRects.subRectR) {\n\t\ttlNtm = {\n\t\t\ttl: subRects.subRectT.tl,\n\t\t\ttr: subRects.subRectR.tl,\n\t\t\tbr: { x: subRects.subRectR.tl.x, y: subRects.subRectT.bl.y },\n\t\t\tbl: subRects.subRectT.bl,\n\t\t};\n\t\ttr = {\n\t\t\ttl: subRects.subRectR.tl,\n\t\t\ttr: subRects.subRectR.tr,\n\t\t\tbr: subRects.subRectT.br,\n\t\t\tbl: { x: subRects.subRectR.tl.x, y: subRects.subRectT.bl.y },\n\t\t};\n\t\trmNbr = {\n\t\t\ttl: { x: subRects.subRectR.tl.x, y: subRects.subRectT.bl.y },\n\t\t\ttr: subRects.subRectT.br,\n\t\t\tbr: subRects.subRectR.br,\n\t\t\tbl: subRects.subRectR.bl,\n\t\t};\n\t}\n\n\tif (subRects.subRectR && subRects.subRectB) {\n\t\ttrNrm = {\n\t\t\ttl: subRects.subRectR.tl,\n\t\t\ttr: subRects.subRectR.tr,\n\t\t\tbr: subRects.subRectB.tr,\n\t\t\tbl: { x: subRects.subRectR.bl.x, y: subRects.subRectB.tl.y },\n\t\t};\n\t\tbr = {\n\t\t\ttl: { x: subRects.subRectR.bl.x, y: subRects.subRectB.tl.y },\n\t\t\ttr: subRects.subRectB.tr,\n\t\t\tbr: subRects.subRectB.br,\n\t\t\tbl: subRects.subRectR.bl,\n\t\t};\n\t\tbmNbl = {\n\t\t\ttl: subRects.subRectB.tl,\n\t\t\ttr: { x: subRects.subRectR.bl.x, y: subRects.subRectB.tl.y },\n\t\t\tbr: subRects.subRectR.bl,\n\t\t\tbl: subRects.subRectB.bl,\n\t\t};\n\t}\n\n\tif (subRects.subRectB && subRects.subRectL) {\n\t\tlmNtl = {\n\t\t\ttl: subRects.subRectL.tl,\n\t\t\ttr: subRects.subRectL.tr,\n\t\t\tbr: { x: subRects.subRectL.tr.x, y: subRects.subRectB.tr.y },\n\t\t\tbl: subRects.subRectB.tl,\n\t\t};\n\t\tbl = {\n\t\t\ttl: subRects.subRectB.tl,\n\t\t\ttr: { x: subRects.subRectL.tr.x, y: subRects.subRectB.tr.y },\n\t\t\tbr: subRects.subRectL.br,\n\t\t\tbl: subRects.subRectB.bl,\n\t\t};\n\t\tbrNbm = {\n\t\t\ttl: { x: subRects.subRectL.tr.x, y: subRects.subRectB.tr.y },\n\t\t\ttr: subRects.subRectB.tr,\n\t\t\tbr: subRects.subRectB.br,\n\t\t\tbl: subRects.subRectL.br,\n\t\t};\n\t}\n\n\tif (subRects.subRectL && subRects.subRectT) {\n\t\tblNlm = {\n\t\t\ttl: subRects.subRectT.bl,\n\t\t\ttr: { x: subRects.subRectL.tr.x, y: subRects.subRectT.bl.y },\n\t\t\tbr: subRects.subRectL.br,\n\t\t\tbl: subRects.subRectL.bl,\n\t\t};\n\t\ttl = {\n\t\t\ttl: subRects.subRectT.tl,\n\t\t\ttr: subRects.subRectL.tr,\n\t\t\tbr: { x: subRects.subRectL.tr.x, y: subRects.subRectT.bl.y },\n\t\t\tbl: subRects.subRectT.bl,\n\t\t};\n\t\ttmNtr = {\n\t\t\ttl: subRects.subRectL.tr,\n\t\t\ttr: subRects.subRectT.tr,\n\t\t\tbr: subRects.subRectT.br,\n\t\t\tbl: { x: subRects.subRectL.tr.x, y: subRects.subRectT.bl.y },\n\t\t};\n\t}\n\n\ttm =\n\t\thorizontalSubtract(tlNtm, tl) ||\n\t\thorizontalSubtract(tmNtr, tr) ||\n\t\ttlNtm ||\n\t\ttmNtr;\n\trm =\n\t\tverticalSubtract(trNrm, tr) ||\n\t\tverticalSubtract(rmNbr, br) ||\n\t\ttrNrm ||\n\t\trmNbr;\n\tbm =\n\t\thorizontalSubtract(brNbm, br) ||\n\t\thorizontalSubtract(bmNbl, bl) ||\n\t\tbrNbm ||\n\t\tbmNbl;\n\tlm =\n\t\tverticalSubtract(blNlm, bl) ||\n\t\tverticalSubtract(lmNtl, tl) ||\n\t\tblNlm ||\n\t\tlmNtl;\n\n\tlet rects;\n\tif (oCoForm) {\n\t\trects = [tl, tm, tr, rm, br, bm, bl, lm];\n\t} else {\n\t\trects = [\n\t\t\tgetRectObjectFromCo(tl),\n\t\t\tgetRectObjectFromCo(tm),\n\t\t\tgetRectObjectFromCo(tr),\n\t\t\tgetRectObjectFromCo(rm),\n\t\t\tgetRectObjectFromCo(br),\n\t\t\tgetRectObjectFromCo(bm),\n\t\t\tgetRectObjectFromCo(bl),\n\t\t\tgetRectObjectFromCo(lm),\n\t\t];\n\t}\n\n\trects = rects.filter((o) => o);\n\n\tif (rects.length === 0) {\n\t\trects = Object.keys(subRects).map((o) => {\n\t\t\tif (oCoForm) {\n\t\t\t\treturn subRects[o];\n\t\t\t} else {\n\t\t\t\treturn getRectObjectFromCo(subRects[o]);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn rects;\n};\n\nconst horizontalSubtract = (rectA, rectB) => {\n\t// rectA and rectB needs to be in Coordinate form\n\tif (!rectA && !rectB) return null;\n\tif (!doRectsOverlap(getRectObjectFromCo(rectA), getRectObjectFromCo(rectB)))\n\t\treturn null;\n\n\t/*\n\t\tCase I\n\t\t____________________\n\t\t| ____ \t\t\t\t|\n\t\t||____|\t\t\t\t|\n\t\t|___________________|\n\t\n\t\tCase II\n\t\t____________________\n\t\t| \t \t\t  _____\t|\n\t\t|\t\t\t  |____||\n\t\t|___________________|\n\t*/\n\n\tlet result = null;\n\tif (\n\t\trectA.tl.x === rectB.tl.x ||\n\t\tMath.abs(rectA.tl.x - rectB.tl.x) < Math.abs(rectA.tr.x - rectB.tr.x)\n\t) {\n\t\t// Case I\n\t\tresult = { tl: rectB.tr, tr: rectA.tr, br: rectA.br, bl: rectB.br };\n\t} else if (\n\t\trectA.tr === rectB.tr ||\n\t\tMath.abs(rectB.tl.x - rectA.tl.x) > Math.abs(rectB.tr.x - rectA.tr.x)\n\t) {\n\t\t// Case II\n\t\tresult = { tl: rectA.tl, tr: rectB.tl, br: rectB.bl, bl: rectA.bl };\n\t}\n\n\treturn result;\n};\n\nconst verticalSubtract = (rectA, rectB) => {\n\t// rectA and rectB needs to be in Coordinate form\n\tif (!rectA && !rectB) return null;\n\tif (!doRectsOverlap(getRectObjectFromCo(rectA), getRectObjectFromCo(rectB)))\n\t\treturn null;\n\n\t/*\n\t\tCase I \t\t\t\tCase II\n\t\t_______ \t\t\t________\n\t\t| ____ | \t\t\t|\t\t|\n\t\t| |   || \t\t\t|\t\t|\n\t\t| |___|| \t\t\t|\t\t|\n\t\t|  \t   | \t\t\t|  ____ |\n\t\t|      | \t\t\t|  |   ||\t\n\t\t|      | \t\t\t|  |___||\t\n\t\t|______| \t\t\t|_______|\n\t*/\n\n\tlet result = null;\n\tif (\n\t\trectA.tl.y === rectB.tl.y ||\n\t\tMath.abs(rectA.tl.y - rectB.tl.y) < Math.abs(rectA.bl.y - rectB.bl.y)\n\t) {\n\t\t// Case I\n\t\tresult = { tl: rectB.bl, tr: rectB.br, br: rectA.br, bl: rectA.bl };\n\t} else if (\n\t\trectA.bl.y === rectB.bl.y ||\n\t\tMath.abs(rectB.tl.y - rectA.tl.y) > Math.abs(rectB.bl.y - rectA.bl.y)\n\t) {\n\t\t// Case II\n\t\tresult = { tl: rectA.tl, tr: rectA.tr, br: rectB.tr, bl: rectB.tl };\n\t}\n\n\treturn result;\n};\n\nexport const isValidRectCoForm = function (rect) {\n\ttry {\n\t\tlet top, right, bottom, left;\n\t\ttop = rect.tr.x - rect.tl.x;\n\t\tright = rect.br.y - rect.tr.y;\n\t\tbottom = rect.br.x - rect.bl.x;\n\t\tleft = rect.bl.y - rect.tl.y;\n\n\t\tif (top <= 0 || right <= 0 || bottom <= 0 || left <= 0) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t} catch (e) {\n\t\treturn null;\n\t}\n};\n\nexport const getCoordinates = function (rect) {\n\tconst tl = { x: rect.x, y: rect.y };\n\tconst tr = { x: rect.x + rect.width, y: rect.y };\n\tconst br = { x: rect.x + rect.width, y: rect.y + rect.height };\n\tconst bl = { x: rect.x, y: rect.y + rect.height };\n\n\treturn { tl, tr, br, bl };\n};\n\nexport const getRectObjectFromCo = function (rect) {\n\tif (!isValidRectCoForm(rect)) return null;\n\treturn {\n\t\tx: rect.tl.x,\n\t\ty: rect.tl.y,\n\t\twidth: rect.tr.x - rect.tl.x,\n\t\theight: rect.bl.y - rect.tl.y,\n\t};\n};\n\nexport const areRectsAdjacent = (rectA, rectB) => {\n\tconst rectACo = getCoordinates(rectA);\n\tconst rectBCo = getCoordinates(rectB);\n\n\t// if (!doRectsOnlyTouch(rectA, rectB)) {\n\t// \treturn false;\n\t// }\n\n\tif (\n\t\t!(\n\t\t\tMath.abs(rectACo.tl.x - rectBCo.tr.x) < 1 ||\n\t\t\tMath.abs(rectBCo.tl.x - rectACo.tr.x) < 1 ||\n\t\t\tMath.abs(rectACo.tl.y - rectBCo.bl.y) < 1 ||\n\t\t\tMath.abs(rectBCo.tl.y - rectACo.bl.y) < 1\n\t\t)\n\t) {\n\t\treturn false;\n\t}\n\n\t// below filters point of intersection touch\n\tif (\n\t\t(rectACo.tl.y >= rectBCo.tl.y && rectACo.tl.y < rectBCo.bl.y) ||\n\t\t(rectBCo.tl.y >= rectACo.tl.y && rectBCo.tl.y < rectACo.bl.y) ||\n\t\t(rectACo.tl.x >= rectBCo.tl.x && rectACo.tl.x < rectBCo.tr.x) ||\n\t\t(rectBCo.tl.x >= rectACo.tl.x && rectBCo.tl.x < rectACo.tr.x) ||\n\t\t//\n\t\t(rectACo.bl.y <= rectBCo.bl.y && rectACo.bl.y > rectBCo.tl.y) ||\n\t\t(rectBCo.bl.y <= rectACo.bl.y && rectBCo.bl.y > rectACo.tl.y) ||\n\t\t(rectACo.tr.x <= rectBCo.tr.x && rectACo.tr.x > rectBCo.tl.x) ||\n\t\t(rectBCo.tr.x <= rectACo.tr.x && rectBCo.tr.x > rectACo.tl.x)\n\t) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\n\nexport const mergeRects = (rectA, rectB, oCoForm) => {\n\t// if (doRectsOverlap(rectA, rectB)) {\n\t// \treturn false;\n\t// }\n\tconst rectACo = getCoordinates(rectA);\n\tconst rectBCo = getCoordinates(rectB);\n\n\tlet result;\n\n\tconst merge = (rectACo, rectBCo) => {\n\t\tlet res;\n\t\t// check tl\n\t\tif (\n\t\t\trectACo.tl.x >= rectBCo.bl.x &&\n\t\t\trectACo.tl.x < rectBCo.br.x &&\n\t\t\trectACo.tl.y >= rectBCo.bl.y\n\t\t) {\n\t\t\tlet x = rectACo.tr.x < rectBCo.tr.x ? rectACo.tr.x : rectBCo.tr.x;\n\t\t\tres = {\n\t\t\t\ttl: { x: rectACo.tl.x, y: rectBCo.tl.y },\n\t\t\t\ttr: { x: x, y: rectBCo.tl.y },\n\t\t\t\tbr: { x: x, y: rectACo.bl.y },\n\t\t\t\tbl: { x: rectACo.bl.x, y: rectACo.bl.y },\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\trectACo.tl.y >= rectBCo.tr.y &&\n\t\t\trectACo.tl.y < rectBCo.br.y &&\n\t\t\trectACo.tl.x >= rectBCo.tr.x\n\t\t) {\n\t\t\tlet y = rectACo.br.y < rectBCo.br.y ? rectACo.br.y : rectBCo.br.y;\n\t\t\tres = {\n\t\t\t\ttl: { x: rectBCo.tl.x, y: rectACo.tl.y },\n\t\t\t\ttr: { x: rectACo.tr.x, y: rectACo.tr.y },\n\t\t\t\tbr: { x: rectACo.br.x, y: y },\n\t\t\t\tbl: { x: rectBCo.bl.x, y: y },\n\t\t\t};\n\t\t}\n\n\t\t// check tr\n\t\tif (\n\t\t\trectACo.tr.x <= rectBCo.br.x &&\n\t\t\trectACo.tr.x > rectBCo.bl.x &&\n\t\t\trectACo.tr.y >= rectBCo.bl.y\n\t\t) {\n\t\t\tlet x = rectACo.tl.x > rectBCo.tl.x ? rectACo.tl.x : rectBCo.tl.x;\n\t\t\tres = {\n\t\t\t\ttl: { x: x, y: rectBCo.tl.y },\n\t\t\t\ttr: { x: rectACo.tr.x, y: rectBCo.tr.y },\n\t\t\t\tbr: { x: rectACo.br.x, y: rectACo.br.y },\n\t\t\t\tbl: { x: x, y: rectACo.bl.y },\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\trectACo.tr.y >= rectBCo.tl.y &&\n\t\t\trectACo.tr.y < rectBCo.bl.y &&\n\t\t\trectACo.tr.x <= rectBCo.tl.x\n\t\t) {\n\t\t\tlet y = rectACo.bl.y < rectBCo.bl.y ? rectACo.bl.y : rectBCo.bl.y;\n\t\t\tres = {\n\t\t\t\ttl: { x: rectACo.tl.x, y: rectACo.tl.y },\n\t\t\t\ttr: { x: rectBCo.tr.x, y: rectACo.tl.y },\n\t\t\t\tbr: { x: rectBCo.br.x, y: y },\n\t\t\t\tbl: { x: rectACo.bl.x, y: y },\n\t\t\t};\n\t\t}\n\n\t\t// check br\n\t\tif (\n\t\t\trectACo.br.x <= rectBCo.tr.x &&\n\t\t\trectACo.br.x > rectBCo.tl.x &&\n\t\t\trectACo.br.y <= rectBCo.tl.y\n\t\t) {\n\t\t\tlet x = rectACo.tl.x > rectBCo.tl.x ? rectACo.tl.x : rectBCo.tl.x;\n\t\t\tres = {\n\t\t\t\ttl: { x: x, y: rectACo.tl.y },\n\t\t\t\ttr: { x: rectACo.tr.x, y: rectACo.tr.y },\n\t\t\t\tbr: { x: rectACo.tr.x, y: rectBCo.br.y },\n\t\t\t\tbl: { x: x, y: rectBCo.bl.y },\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\trectACo.br.y <= rectBCo.bl.y &&\n\t\t\trectACo.br.y > rectBCo.tl.y &&\n\t\t\trectACo.br.x <= rectBCo.tl.x\n\t\t) {\n\t\t\tlet y = rectACo.tl.y > rectBCo.tl.y ? rectACo.tl.y : rectBCo.tl.y;\n\t\t\tres = {\n\t\t\t\ttl: { x: rectACo.tl.x, y: y },\n\t\t\t\ttr: { x: rectBCo.tr.x, y: y },\n\t\t\t\tbr: { x: rectBCo.br.x, y: rectACo.br.y },\n\t\t\t\tbl: { x: rectACo.bl.x, y: rectACo.bl.y },\n\t\t\t};\n\t\t}\n\n\t\t// check bl\n\t\tif (\n\t\t\trectACo.bl.x >= rectBCo.tl.x &&\n\t\t\trectACo.bl.x < rectBCo.tr.x &&\n\t\t\trectACo.bl.y <= rectBCo.tl.y\n\t\t) {\n\t\t\tlet x = rectACo.tr.x < rectBCo.tr.x ? rectACo.tr.x : rectBCo.tr.x;\n\t\t\tres = {\n\t\t\t\ttl: { x: rectACo.tl.x, y: rectACo.tl.y },\n\t\t\t\ttr: { x: x, y: rectACo.tr.y },\n\t\t\t\tbr: { x: x, y: rectBCo.br.y },\n\t\t\t\tbl: { x: rectACo.bl.x, y: rectBCo.bl.y },\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\trectACo.bl.y <= rectBCo.br.y &&\n\t\t\trectACo.bl.y > rectBCo.tr.y &&\n\t\t\trectACo.bl.x >= rectBCo.tr.x\n\t\t) {\n\t\t\tlet y = rectACo.tl.y > rectBCo.tl.y ? rectACo.tl.y : rectBCo.tl.y;\n\t\t\tres = {\n\t\t\t\ttl: { x: rectBCo.tl.x, y: y },\n\t\t\t\ttr: { x: rectACo.tr.x, y: y },\n\t\t\t\tbr: { x: rectACo.br.x, y: rectACo.br.y },\n\t\t\t\tbl: { x: rectBCo.bl.x, y: rectACo.bl.y },\n\t\t\t};\n\t\t}\n\n\t\treturn res;\n\t};\n\n\tconst mergeOverlapping = () => {\n\t\tconst diff = subtractRect(rectA, rectB, true);\n\n\t\tconst arr = new Array(diff?.length || 0);\n\t\tlet m;\n\t\tlet count = 0;\n\t\tconst len = arr.length;\n\n\t\t// for (const d of diff) {\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tm = merge(diff[i], rectBCo);\n\t\t\tif (m && !isRectInside(rectA, getRectObjectFromCo(m))) {\n\t\t\t\tarr[count++] = m;\n\t\t\t}\n\t\t}\n\n\t\tconst res = new Array(count);\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tres[i] = arr[i];\n\t\t}\n\n\t\treturn res.length ? res : null;\n\t};\n\n\tresult = merge(rectACo, rectBCo);\n\tif (!result) result = merge(rectBCo, rectACo);\n\tif (result) result = [result];\n\tif (!result && !isRectInside(rectA, rectB) && !isRectInside(rectB, rectA)) {\n\t\tresult = mergeOverlapping();\n\t}\n\n\tif (result) {\n\t\tif (oCoForm) {\n\t\t\treturn result;\n\t\t} else {\n\t\t\treturn result.map((o) => getRectObjectFromCo(o));\n\t\t}\n\t}\n\n\treturn false;\n};\n\nexport const isRectInside = (rectA, rectB) => {\n\t// is rectB inside rectA\n\tconst rectACo = getCoordinates(rectA);\n\tconst rectBCo = getCoordinates(rectB);\n\n\tif (\n\t\trectACo.tl.x <= rectBCo.tl.x &&\n\t\trectACo.tr.x >= rectBCo.tr.x &&\n\t\trectACo.tl.y <= rectBCo.tl.y &&\n\t\trectACo.bl.y >= rectBCo.bl.y\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nexport const areRectsOnSameYAxisExPath = (rectA, rectB) => {\n\t// ExPath: Exclusive Path (in Exclusive and Inclusive)\n\tif (!(rectA?.tl?.x && rectA?.tr?.x && rectB?.tl?.x && rectA?.tr?.x)) {\n\t\treturn null;\n\t}\n\n\tif (rectA.tl.x >= rectB.tr.x || rectB.tl.x >= rectA.tr.x) {\n\t\treturn false;\n\t}\n\treturn true;\n};\n\nexport const areRectsIdentical = (rectA, rectB) => {\n\tif (\n\t\trectA.tl.x === rectB.tl.x &&\n\t\trectA.tl.y === rectB.tl.y &&\n\t\trectA.tr.x === rectB.tr.x &&\n\t\trectA.tr.y === rectB.tr.y &&\n\t\trectA.br.x === rectB.br.x &&\n\t\trectA.br.y === rectB.br.y &&\n\t\trectA.bl.x === rectB.bl.x &&\n\t\trectA.bl.y === rectB.bl.y\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nimport getElements from \"../../store/variables/elements\";\nimport { getPositionData } from \"../../store/variables/essentials\";\nimport getPrivateConstants from \"../../store/constants/privateConstants\";\nimport getPublicConstants from \"../../store/constants/publicConstants\";\n\nexport const loadInitState = (context) => {\n\tconst e = getElements(context);\n\tconst publicConstants = getPublicConstants(context);\n\n\te.$body.classList.add(\n\t\t\"limber-grid-view-body-tag-state-editing\",\n\t\t\"limber-grid-view-body-tag-state-editing-adding-cutting\"\n\t);\n\n\tconst len = e.$limberGridViewItems.length;\n\tfor (let i = 0; i < len; i++) {\n\t\te.$limberGridViewItems[i].classList.add(\n\t\t\t\"limber-grid-view-item-resizing-state\"\n\t\t);\n\t}\n\n\tfor (let i = 0; i < len; i++) {\n\t\te.$limberGridViewPseudoItem.classList.add(\n\t\t\t\"limber-grid-view-pseudo-item-resizing-state\"\n\t\t);\n\t}\n\n\t// e.$limberGridViewAddItemGuide[0].style.height = 1 + \"px\";\n\t// e.$limberGridViewAddItemGuide[0].style.width = 1 + \"px\";\n\t// e.$limberGridViewAddItemGuide[0].style.transform =\n\t// \t\"translate(\" + x + \"px, \" + y + \"px)\";\n\n\tif (publicConstants.DESK_INTERACTION_MODE === \"ADD\") {\n\t\te.$limberGridViewAddCutGuide.classList.add(\n\t\t\t\"limber-grid-view-add-cut-guide-active\"\n\t\t);\n\t} else if (publicConstants.DESK_INTERACTION_MODE === \"CUTSPACE\") {\n\t\te.$limberGridViewAddCutGuide.classList.add(\n\t\t\t\"limber-grid-view-add-cut-guide-active\",\n\t\t\t\"limber-grid-view-add-cut-guide-cut-mode\"\n\t\t);\n\t}\n\n\te.$limberGridViewHeightAdjustGuide.style.height = 0 + \"px\";\n\te.$limberGridViewHeightAdjustGuide.classList.add(\n\t\t\"limber-grid-view-height-adjust-guide-active\"\n\t);\n};\n\nexport const unloadInitState = (context) => {\n\tconst e = getElements(context);\n\n\te.$body.classList.remove(\n\t\t\"limber-grid-view-body-tag-state-editing\",\n\t\t\"limber-grid-view-body-tag-state-editing-adding-cutting\"\n\t);\n\n\tconst len = e.$limberGridViewItems.length;\n\tfor (var i = 0; i < len; i++) {\n\t\te.$limberGridViewItems[i].classList.remove(\n\t\t\t\"limber-grid-view-item-resizing-state\"\n\t\t);\n\t\te.$limberGridViewPseudoItem.classList.remove(\n\t\t\t\"limber-grid-view-pseudo-item-resizing-state\"\n\t\t);\n\t}\n\n\te.$limberGridViewAddCutGuide.classList.remove(\n\t\t\"limber-grid-view-add-cut-guide-active\",\n\t\t\"limber-grid-view-add-cut-guide-cut-mode\",\n\t\t\"limber-grid-view-add-cut-guide-add-allow\",\n\t\t\"limber-grid-view-add-cut-guide-add-disallow\"\n\t);\n\n\te.$limberGridViewHeightAdjustGuide.style.height = 0 + \"px\";\n\te.$limberGridViewHeightAdjustGuide.classList.remove(\n\t\t\"limber-grid-view-height-adjust-guide-active\"\n\t);\n\n\te.$limberGridViewTouchHoldGuide.classList.remove(\n\t\t\"limber-grid-view-touch-hold-guide-active\"\n\t);\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nimport getElements from \"../../store/variables/elements\";\nimport {\n\tgetPositionData,\n\tgetModifiedPositionData,\n} from \"../../store/variables/essentials\";\nimport getPrivateConstants from \"../../store/constants/privateConstants\";\nimport getPublicConstants from \"../../store/constants/publicConstants\";\nimport {\n\tdoRectsOverlap,\n\tisRectInside,\n\tgetRectObjectFromCo,\n\tdoRectsOnlyTouch,\n\tisPointInsideRect,\n\tdoesPointTouchRect,\n} from \"../rect/rectUtils\";\nimport { filter } from \"../utils/utils\";\n\nexport const isFlippingPosPossible = (context) => {\n\tconst pd = getPositionData(context);\n\n\tif (affectedItems.length === 2) {\n\t\tconst diff = Math.abs(pd[affectedItems[0]].y - pd[affectedItems[1]].y);\n\t\tif (diff > privateConstants.HEIGHT) {\n\t\t\t// to check if both lie on th visible screen or viewport\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n};\n\nexport const getMinMaxXY = (\n\tcontext,\n\taffectedItems,\n\tresizedRightX,\n\tresizedBottomY,\n\ttoY,\n\tmovedBottomY\n) => {\n\tconst pd = getPositionData(context);\n\tconst privateConstants = getPrivateConstants(context);\n\n\tlet minY = Number.MAX_SAFE_INTEGER;\n\tlet maxY = 0;\n\tlet minX = Number.MAX_SAFE_INTEGER;\n\tlet maxX = 0;\n\tconst len = affectedItems.length;\n\tfor (let i = 0; i < len; i++) {\n\t\tif (pd[affectedItems[i]].y < minY) {\n\t\t\tminY = pd[affectedItems[i]].y;\n\t\t}\n\t\tif (pd[affectedItems[i]].y + pd[affectedItems[i]].height > maxY) {\n\t\t\tmaxY = pd[affectedItems[i]].y + pd[affectedItems[i]].height;\n\t\t}\n\n\t\tif (pd[affectedItems[i]].x < minX) {\n\t\t\tminX = pd[affectedItems[i]].x;\n\t\t}\n\n\t\tif (pd[affectedItems[i]].x + pd[affectedItems[i]].width > maxX) {\n\t\t\tmaxX = pd[affectedItems[i]].x + pd[affectedItems[i]].width;\n\t\t}\n\t}\n\n\tif (resizedBottomY > maxY) maxY = resizedBottomY;\n\n\tif (resizedRightX > maxX) maxX = resizedRightX;\n\n\tif (toY < minY) minY = toY;\n\n\tif (movedBottomY > maxY) maxY = movedBottomY;\n\n\treturn {\n\t\tminX: minX - privateConstants.MARGIN,\n\t\tmaxX: maxX + privateConstants.MARGIN,\n\t\tminY: minY - privateConstants.MARGIN,\n\t\tmaxY: maxY + privateConstants.MARGIN,\n\t};\n};\n\nexport const filterToArrange = (context, toArrangeItems, arranged) => {\n\tconst len = toArrangeItems.length;\n\tconst result = new Array(len);\n\tfor (let i = 0; i < len; i++) {\n\t\tif (!arranged[toArrangeItems[i]]) {\n\t\t\tresult[i] = toArrangeItems[i];\n\t\t}\n\t}\n\treturn filter(result);\n};\n\nexport const getBottomMax = (context, minX, maxX) => {\n\tconst pd = getPositionData(context);\n\tconst mpd = getModifiedPositionData(context);\n\tconst privateConstants = getPrivateConstants(context);\n\n\tlet max = 0;\n\tlet item, mItem;\n\tconst len = pd.length;\n\n\tfor (let i = 0; i < len; i++) {\n\t\titem = getItemDimenWithMargin(privateConstants.MARGIN, pd[i]);\n\t\tmItem = getItemDimenWithMargin(privateConstants.MARGIN, mpd[i]);\n\t\tif (\n\t\t\tpd[i].y + pd[i].height > max &&\n\t\t\titem.x < maxX &&\n\t\t\titem.x + item.width > minX\n\t\t) {\n\t\t\tmax = pd[i].y + pd[i].height;\n\t\t}\n\n\t\tif (\n\t\t\tmpd[i].y + mpd[i].height > max &&\n\t\t\tmItem.x < maxX &&\n\t\t\tmItem.x + mItem.width > minX\n\t\t) {\n\t\t\tmax = mpd[i].y + mpd[i].height;\n\t\t}\n\t}\n\n\treturn max;\n};\n\nexport const getTopBottomWS = (context, workSpaceRectCo, minX, maxX) => {\n\tlet topWorkSpaceCo, bottomWorkSpaceCo;\n\tif (workSpaceRectCo.tl.y > 0) {\n\t\ttopWorkSpaceCo = {\n\t\t\ttl: { x: minX, y: 0 },\n\t\t\ttr: { x: maxX, y: 0 },\n\t\t\tbr: { x: maxX, y: workSpaceRectCo.tr.y },\n\t\t\tbl: { x: minX, y: workSpaceRectCo.tl.y },\n\t\t};\n\t}\n\n\tconst bottomMax = getBottomMax(context, minX, maxX);\n\n\tif (bottomMax > workSpaceRectCo.bl.y) {\n\t\tbottomWorkSpaceCo = {\n\t\t\ttl: { x: minX, y: workSpaceRectCo.bl.y },\n\t\t\ttr: { x: maxX, y: workSpaceRectCo.bl.y },\n\t\t\tbr: { x: maxX, y: bottomMax },\n\t\t\tbl: { x: minX, y: bottomMax },\n\t\t};\n\t}\n\n\treturn { topWorkSpaceCo, bottomWorkSpaceCo };\n};\n\nexport const getItemsInWorkSpace = (\n\tcontext,\n\tworkSpaceRect,\n\tgetIndices = false\n) => {\n\tconst mpd = getModifiedPositionData(context);\n\tconst privateConstants = getPrivateConstants(context);\n\n\tconst len = mpd.length;\n\tconst itemsInWorkSpace = new Array(len);\n\tlet count = 0;\n\tfor (let i = 0; i < len; i++) {\n\t\tif (\n\t\t\tdoRectsOverlap(\n\t\t\t\tworkSpaceRect,\n\t\t\t\tgetItemDimenWithMargin(privateConstants.MARGIN, mpd[i])\n\t\t\t)\n\t\t) {\n\t\t\tif (!getIndices) {\n\t\t\t\titemsInWorkSpace[count++] = mpd[i];\n\t\t\t} else {\n\t\t\t\titemsInWorkSpace[count++] = i;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst res = new Array(count);\n\tfor (let i = 0; i < count; i++) {\n\t\tres[i] = itemsInWorkSpace[i];\n\t}\n\n\treturn res;\n};\n\nexport const getItemsBelowBottomWorkSpace = (\n\tcontext,\n\tworkSpaceRect,\n\tgetIndices = false\n) => {\n\tconst mpd = getModifiedPositionData(context);\n\tconst privateConstants = getPrivateConstants(context);\n\n\tif (!workSpaceRect) {\n\t\treturn [];\n\t}\n\n\tconst len = mpd.length;\n\tconst items = new Array(len);\n\tlet count = 0;\n\n\tfor (let i = 0; i < len; i++) {\n\t\tif (\n\t\t\tworkSpaceRect.bl.y <=\n\t\t\tgetItemDimenWithMargin(privateConstants.MARGIN, mpd[i]).y\n\t\t) {\n\t\t\tif (!getIndices) {\n\t\t\t\titems[count++] = mpd[i];\n\t\t\t} else {\n\t\t\t\titems[count++] = i;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst res = new Array(count);\n\tfor (let i = 0; i < count; i++) {\n\t\tres[i] = items[i];\n\t}\n\n\treturn res;\n};\n\nexport const getResizeWSItemsDetail = (\n\tcontext,\n\twsCo,\n\ttopWsCo,\n\tbottomWsCo,\n\tcWsCo,\n\tarranged,\n\titemsToArrange,\n\tgetIndices = false\n) => {\n\tconst mpd = getModifiedPositionData(context);\n\tconst privateConstants = getPrivateConstants(context);\n\n\tconst wsPlusTopWsCo = {\n\t\ttl: { ...(topWsCo?.tl ? topWsCo.tl : wsCo.tl) },\n\t\ttr: { ...(topWsCo?.tr ? topWsCo.tr : wsCo.tr) },\n\t\tbr: { ...wsCo.br },\n\t\tbl: { ...wsCo.bl },\n\t};\n\tconst wsPlusTopWs = getRectObjectFromCo(wsPlusTopWsCo);\n\tconst bottomWs = getRectObjectFromCo(bottomWsCo);\n\tconst cWs = getRectObjectFromCo(cWsCo);\n\n\t// const itemsToArrangeMap = {};\n\t// const iToALen = itemsToArrange.length;\n\t// for (let i = 0; i < iToALen; i++) {\n\t// \titemsToArrangeMap[itemsToArrange[i]] = true;\n\t// }\n\n\tlet count = 0;\n\tconst iToALen = itemsToArrange.length;\n\tconst _itemsToArrange = new Array(iToALen);\n\tfor (let i = 0; i < iToALen; i++) {\n\t\tif (!arranged[itemsToArrange[i]]) {\n\t\t\t_itemsToArrange[count++] = itemsToArrange[i];\n\t\t}\n\t}\n\tconst filteredItemsToArrange = filter(_itemsToArrange);\n\n\tconst len = mpd.length;\n\tconst updatedItemsToArrange = new Array(len);\n\tlet uCount = 0;\n\tconst itemsInWorkSpace = new Array(len);\n\tlet iCount = 0;\n\n\tfor (let i = 0; i < len; i++) {\n\t\tconst _item = getItemDimenWithMargin(privateConstants.MARGIN, mpd[i]);\n\t\tif (doRectsOverlap(cWs, _item)) {\n\t\t\tif (arranged[i]) {\n\t\t\t\tif (!getIndices) {\n\t\t\t\t\titemsInWorkSpace[iCount++] = mpd[i];\n\t\t\t\t} else {\n\t\t\t\t\titemsInWorkSpace[iCount++] = i;\n\t\t\t\t}\n\t\t\t} else if (doRectsOverlap(wsPlusTopWs, _item)) {\n\t\t\t\tif (!getIndices) {\n\t\t\t\t\titemsInWorkSpace[iCount++] = mpd[i];\n\t\t\t\t} else {\n\t\t\t\t\titemsInWorkSpace[iCount++] = i;\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tdoRectsOverlap(bottomWs, _item) &&\n\t\t\t\t!isRectInside(bottomWs, _item)\n\t\t\t) {\n\t\t\t\tif (!getIndices) {\n\t\t\t\t\titemsInWorkSpace[iCount++] = mpd[i];\n\t\t\t\t} else {\n\t\t\t\t\titemsInWorkSpace[iCount++] = i;\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tdoRectsOverlap(bottomWs, _item) &&\n\t\t\t\tisRectInside(bottomWs, _item) &&\n\t\t\t\t!arranged[i]\n\t\t\t) {\n\t\t\t\tupdatedItemsToArrange[uCount++] = i;\n\t\t\t\tmpd[i].x = undefined;\n\t\t\t\tmpd[i].y = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tupdatedItemsToArrange: filter([\n\t\t\t...filteredItemsToArrange,\n\t\t\t...updatedItemsToArrange,\n\t\t]),\n\t\titemsInWorkSpace: filter(itemsInWorkSpace),\n\t};\n};\n\nexport const getItemDimenWithMargin = (MARGIN, item) => {\n\tconst _item = { ...item };\n\t_item.x -= MARGIN;\n\t_item.y -= MARGIN;\n\t_item.width += MARGIN * 2;\n\t_item.height += MARGIN * 2;\n\n\treturn _item;\n};\n\nexport const cBSTRectComparator = function (item) {\n\treturn (node, v, d) => {\n\t\tif (node.d.rect.width >= item.width && node.d.rect.height >= item.height) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n};\n\nexport const cBSTLComp = function (v) {\n\treturn (node) => {\n\t\tif (node.v > v) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n};\n\nexport const cBSTRComp = function () {\n\treturn true;\n};\n\nexport const getScore = (rect, maxHWSum) => {\n\treturn (rect.width + rect.height) / maxHWSum;\n};\n\n// export const assignScoreToFreeRects = (freeRects) => {\n// \tconst len = freeRects.length;\n\n// \tlet maxHWSum = 0;\n// \tlet sum = 0;\n// \tfor (let i = 0; i < len; i++) {\n// \t\tsum = freeRects[i].d.rect.width + freeRects[i].d.rect.height;\n// \t\tif (sum > maxHWSum) {\n// \t\t\tmaxHWSum = sum;\n// \t\t}\n// \t}\n\n// \tlet maxScore = 0;\n// \tfor (let i = 0; i < len; i++) {\n// \t\tfreeRects[i].d.score = getScore(freeRects[i].d.rect, maxHWSum);\n// \t\tif (freeRects[i].d.score > maxScore) {\n// \t\t\tmaxScore = freeRects[i].d.score;\n// \t\t}\n// \t}\n// \treturn { maxScore, maxHWSum };\n// };\n\nexport const getItemsToArrangeScore = (context, affectedItems) => {\n\tconst mpd = getModifiedPositionData(context);\n\n\tconst len = affectedItems.length;\n\tlet item;\n\tlet maxHeight = 0;\n\tlet maxWidth = 0;\n\tlet maxHWSum = 0;\n\n\tlet score;\n\n\tfor (let i = 0; i < len; i++) {\n\t\titem = mpd[affectedItems[i]];\n\n\t\tif (item.width > maxWidth) {\n\t\t\tmaxWidth = item.width;\n\t\t}\n\n\t\tif (item.height > maxHeight) {\n\t\t\tmaxHeight = item.height;\n\t\t}\n\t}\n\n\tmaxHWSum = maxWidth + maxHeight;\n\n\tconst scoreArr = new Array(len);\n\tfor (let i = 0; i < len; i++) {\n\t\titem = mpd[affectedItems[i]];\n\n\t\tscore = getScore(item, maxHWSum);\n\t\tscoreArr[i] = { score, d: affectedItems[i] };\n\t}\n\n\tscoreArr.sort((a, b) => a.score - b.score);\n\n\treturn scoreArr;\n};\n\nexport const getPerfectMatch = (arr, hwSum) => {\n\tconst len = arr.length;\n\n\tfor (let i = 0; i < len; i++) {\n\t\tarr[i].d.score = getScore(arr[i].d.rect, hwSum);\n\t}\n\n\tarr.sort((a, b) => a.d.score - b.d.score);\n\n\treturn arr[0];\n};\n\nexport const shiftItemsDown = (context, items, height) => {\n\tconst mpd = getModifiedPositionData(context);\n\n\tconst len = items.length;\n\n\tfor (let i = 0; i < len; i++) {\n\t\tmpd[items[i]].y += height;\n\t}\n};\n\nexport const shiftItemsUp = function (context, y, shiftHeight) {\n\tconst pd = getPositionData(context);\n\tconst e = getElements(context);\n\n\tconst len = pd.length;\n\tfor (let i = 0; i < len; i++) {\n\t\tif (pd[i].y >= y) {\n\t\t\tpd[i].y -= shiftHeight;\n\t\t\te.$limberGridViewItems[i].style.transform =\n\t\t\t\t\"translate(\" + pd[i].x + \"px, \" + pd[i].y + \"px)\";\n\t\t}\n\t}\n};\n\nexport const addItemAllowCheck = function (context, x, y, width, height) {\n\tconst privateConstants = getPrivateConstants(context);\n\tconst publicConstants = getPublicConstants(context);\n\tconst pd = getPositionData(context);\n\n\tvar tempPlane = {\n\t\tx: x - privateConstants.MARGIN,\n\t\ty: y - privateConstants.MARGIN,\n\t\twidth: width + publicConstants.MARGIN * 2,\n\t\theight: height + publicConstants.MARGIN * 2,\n\t};\n\n\tif (x < 0 || y < 0) {\n\t\treturn false;\n\t}\n\n\tif (typeof width !== \"number\" || typeof height !== \"number\") {\n\t\treturn false;\n\t}\n\n\tif (x + width > privateConstants.WIDTH) {\n\t\treturn false;\n\t}\n\n\tif (width < 50 || height < 50) {\n\t\treturn false;\n\t}\n\n\tlet isInside;\n\tconst len = pd.length;\n\tfor (let i = 0; i < len; i++) {\n\t\tisInside =\n\t\t\tdoRectsOverlap(\n\t\t\t\tgetItemDimenWithMargin(privateConstants.MARGIN, pd[i]),\n\t\t\t\ttempPlane\n\t\t\t) ||\n\t\t\tdoRectsOnlyTouch(\n\t\t\t\tgetItemDimenWithMargin(privateConstants.MARGIN, pd[i]),\n\t\t\t\ttempPlane\n\t\t\t);\n\n\t\tif (isInside) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\n\nexport const cutSpaceAllowCheck = function (context, x, y, width, height) {\n\tconst privateConstants = getPrivateConstants(context);\n\tconst pd = getPositionData(context);\n\n\tconst tempPlane = {\n\t\tx: 0,\n\t\ty: y,\n\t\twidth: privateConstants.WIDTH,\n\t\theight: height,\n\t};\n\n\tif (typeof width !== \"number\" || typeof height !== \"number\") {\n\t\treturn false;\n\t}\n\n\tlet minY = Number.MAX_SAFE_INTEGER;\n\tlet maxY = 0;\n\n\tlet atLeastOneOverlapping = false;\n\tlet isOverlapping;\n\tconst len = pd.length;\n\tfor (let i = 0; i < len; i++) {\n\t\tif (\n\t\t\tisRectInside(\n\t\t\t\ttempPlane,\n\t\t\t\tgetItemDimenWithMargin(privateConstants.MARGIN, pd[i])\n\t\t\t)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\tisOverlapping =\n\t\t\tdoRectsOverlap(\n\t\t\t\ttempPlane,\n\t\t\t\tgetItemDimenWithMargin(privateConstants.MARGIN, pd[i])\n\t\t\t) ||\n\t\t\tdoRectsOnlyTouch(\n\t\t\t\ttempPlane,\n\t\t\t\tgetItemDimenWithMargin(privateConstants.MARGIN, pd[i])\n\t\t\t);\n\n\t\tif (isOverlapping) {\n\t\t\tatLeastOneOverlapping = true;\n\t\t\tconst topPoint = {\n\t\t\t\tx: pd[i].x,\n\t\t\t\ty: pd[i].y - privateConstants.MARGIN,\n\t\t\t};\n\t\t\tconst bottomPoint = {\n\t\t\t\tx: pd[i].x,\n\t\t\t\ty: pd[i].y + pd[i].height + privateConstants.MARGIN,\n\t\t\t};\n\t\t\tif (\n\t\t\t\tpd[i].y - privateConstants.MARGIN < minY &&\n\t\t\t\t(isPointInsideRect(tempPlane, topPoint) ||\n\t\t\t\t\tdoesPointTouchRect(tempPlane, topPoint))\n\t\t\t) {\n\t\t\t\tminY = pd[i].y - privateConstants.MARGIN;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tpd[i].y + pd[i].height + privateConstants.MARGIN > maxY &&\n\t\t\t\t(isPointInsideRect(tempPlane, bottomPoint) ||\n\t\t\t\t\tdoesPointTouchRect(tempPlane, bottomPoint))\n\t\t\t) {\n\t\t\t\tmaxY = pd[i].y + pd[i].height + privateConstants.MARGIN;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (atLeastOneOverlapping) {\n\t\tif (minY === Number.MAX_SAFE_INTEGER) {\n\t\t\tminY = y;\n\t\t}\n\n\t\tif (maxY === 0) {\n\t\t\tmaxY = y + height;\n\t\t}\n\n\t\tif (minY - maxY > 0) {\n\t\t\treturn { y: maxY, shiftHeight: minY - maxY };\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn { y: y, shiftHeight: height };\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nexport const getBindedFunctions = (context) => {\n\treturn context.store.variables.bindedFunctions;\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nimport getOptions from \"../../store/variables/options\";\nimport getElements from \"../../store/variables/elements\";\nimport { isMobile } from \"../utils/utils\";\nimport { getCallbacks } from \"../../store/variables/essentials\";\n// import { onItemMouseDown, onItemTouchStart } from \"./itemInteraction\";\n// import {\n// \tonLimberGridMouseDown,\n// \tonLimberGridTouchStart,\n// } from \"./deskInteraction\";\nimport { getBindedFunctions } from \"../../store/variables/bindedFunctions\";\n// import {\n// \tgetItemInteractionVars,\n// \tgetDeskInteractionVars,\n// } from \"../../store/variables/eventSpecific\";\n// import { onItemClick } from \"./miscellaneous\";\n\nexport const reInitializeEvents = function () {\n\tunInitializeEvents();\n\tinitializeEvents();\n};\n\nexport const initializeVariables = function () {};\n\nexport const initializeEvents = function () {\n\tconst options = getOptions(this);\n\tconst e = getElements(this);\n\tconst callbacks = getCallbacks(this);\n\n\tconst bf = getBindedFunctions(this);\n\n\tif (options.editable === true) {\n\t\tif (!isMobile(this)) {\n\t\t\tif (options.enableInteractiveAddAndCut !== false) {\n\t\t\t\te.$limberGridView.addEventListener(\"mousedown\", bf.onDeskMouseDown);\n\t\t\t\tif (options.enableTouchInteraction !== false) {\n\t\t\t\t\te.$limberGridView.addEventListener(\"touchstart\", bf.onDeskTouchStart);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar len = e.$limberGridViewItems.length;\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tif (!isMobile(this)) {\n\t\t\t\te.$limberGridViewItems[i].addEventListener(\n\t\t\t\t\t\"mousedown\",\n\t\t\t\t\tbf.onItemMouseDown\n\t\t\t\t);\n\t\t\t\tif (options.enableTouchInteraction !== false) {\n\t\t\t\t\te.$limberGridViewItems[i].addEventListener(\n\t\t\t\t\t\t\"touchstart\",\n\t\t\t\t\t\tbf.onItemTouchStart\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (callbacks.onItemClickCallback) {\n\t\t\t\te.$limberGridViewItems[i].addEventListener(\"click\", bf.onItemClick);\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport const unInitializeEvents = function () {\n\tconst options = getOptions(this);\n\tconst e = getElements(this);\n\n\tconst bf = getBindedFunctions(this);\n\n\tif (options.editable === true) {\n\t\tif (e.$limberGridView !== undefined) {\n\t\t\te.$limberGridView.removeEventListener(\"mousedown\", bf.onDeskMouseDown);\n\t\t\te.$limberGridView.removeEventListener(\"touchstart\", bf.onDeskTouchStart);\n\t\t}\n\n\t\tif (e.$limberGridViewItems !== undefined) {\n\t\t\tconst len = e.$limberGridViewItems.length;\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\te.$limberGridViewItems[i].removeEventListener(\n\t\t\t\t\t\"mousedown\",\n\t\t\t\t\tbf.onItemMouseDown\n\t\t\t\t);\n\t\t\t\te.$limberGridViewItems[i].removeEventListener(\n\t\t\t\t\t\"touchstart\",\n\t\t\t\t\tbf.onItemTouchStart\n\t\t\t\t);\n\n\t\t\t\te.$limberGridViewItems[i].removeEventListener(\"click\", bf.onItemClick);\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport const initializeItemTouchEvents = function () {\n\tconst e = getElements(this);\n\n\tconst bf = getBindedFunctions(this);\n\n\tif (e.$limberGridViewItems !== undefined) {\n\t\tconst len = e.$limberGridViewItems.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\te.$limberGridViewItems[i].addEventListener(\n\t\t\t\t\"mousedown\",\n\t\t\t\tbf.onItemMouseDown\n\t\t\t);\n\t\t\te.$limberGridViewItems[i].addEventListener(\n\t\t\t\t\"touchstart\",\n\t\t\t\tbf.onItemTouchStart\n\t\t\t);\n\t\t}\n\t}\n};\n\nexport const unInitializeItemTouchEvents = function () {\n\tconst e = getElements(this);\n\n\tconst bf = getBindedFunctions(this);\n\n\tif (e.$limberGridViewItems !== undefined) {\n\t\tconst len = e.$limberGridViewItems.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\te.$limberGridViewItems[i].removeEventListener(\n\t\t\t\t\"mousedown\",\n\t\t\t\tbf.onItemMouseDown\n\t\t\t);\n\t\t\te.$limberGridViewItems[i].removeEventListener(\n\t\t\t\t\"touchstart\",\n\t\t\t\tbf.onItemTouchStart\n\t\t\t);\n\t\t}\n\t}\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nexport const getItemInteractionVars = function (context) {\n\treturn context.store.variables.eventSpecific.itemInteraction;\n};\n\nexport const setItemInteractionVarsByName = function (context, name, value) {\n\tcontext.store.variables.eventSpecific.itemInteraction[name] = value;\n};\n\nexport const getDeskInteractionVars = function (context) {\n\treturn context.store.variables.eventSpecific.deskInteraction;\n};\n\nexport const setDeskInteractionVarsByName = function (context, name, value) {\n\tcontext.store.variables.eventSpecific.deskInteraction[name] = value;\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nexport const shuffle = (arr) => {\n\tlet temp,\n\t\tlen = arr.length,\n\t\tj;\n\tfor (let i = 0; i < len; i++) {\n\t\tj = Math.floor(Math.random() * (i + 1));\n\t\ttemp = arr[i];\n\t\tarr[i] = arr[j];\n\t\tarr[j] = temp;\n\t}\n\treturn arr;\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\n/*\n\t\t\n\tLIFO(Last In First Out) Stack Data Structure\n\n\n*/\n\nconst Stack = function () {\n\tthis.length = 100;\n\tthis.stack = new Array(this.length);\n\tthis.ptr = -1;\n};\n\nStack.prototype.constructor = Stack;\n\nStack.prototype.push = function (data) {\n\tif (data === null || data === undefined) {\n\t\treturn false;\n\t}\n\tif (this.ptr < this.length - 1) {\n\t\tthis.stack[++this.ptr] = data;\n\t} else {\n\t\tthis.resize();\n\t\tthis.stack[++this.ptr] = data;\n\t}\n\treturn true;\n};\n\nStack.prototype.pop = function () {\n\tif (this.ptr >= 0) {\n\t\tconst top = this.stack[this.ptr];\n\t\tthis.ptr--;\n\t\treturn top;\n\t}\n};\n\nStack.prototype.wipePop = function () {\n\tif (this.ptr >= 0) {\n\t\tconst top = this.stack[this.ptr];\n\t\tthis.stack[this.ptr] = undefined;\n\t\tthis.ptr--;\n\t\treturn top;\n\t}\n};\n\nStack.prototype.resize = function () {\n\tconst oldlen = this.length;\n\tconst oldStack = this.stack;\n\tthis.length += 100;\n\tthis.stack = new Array(this.length);\n\n\tfor (let i = 0; i < oldlen; i++) {\n\t\tthis.stack[i] = oldStack[i];\n\t}\n};\n\nStack.prototype.getTop = function () {\n\tif (this.ptr >= 0) {\n\t\treturn this.stack[this.ptr];\n\t}\n\treturn null;\n};\n\nStack.prototype.isEmpty = function () {\n\tif (this.ptr < 0) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\nStack.prototype.getData = function () {\n\tconst arr = new Array(this.ptr + 1);\n\tfor (let i = 0; i <= this.ptr; i++) {\n\t\tarr[i] = this.stack[i];\n\t}\n\treturn arr;\n};\n\nStack.prototype.getAllData = function () {\n\tconst arr = new Array(this.length);\n\tfor (let i = 0; i < this.length; i++) {\n\t\tarr[i] = this.stack[i];\n\t}\n\treturn arr;\n};\n\nStack.prototype.getSize = function () {\n\treturn this.ptr + 1;\n};\n\nStack.prototype.empty = function () {\n\tthis.ptr = -1;\n};\n\nStack.prototype.wipe = function () {\n\tthis.length = 100;\n\tthis.stack = new Array(this.length);\n\tthis.ptr = -1;\n};\n\nexport default Stack;\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nimport getElements, {\n\tset$limberGridView,\n\tset$limberGridViewDebugStackTopRect,\n\tset$limberGridViewDebugStackTopAdjRect,\n\tset$limberGridViewDebugMergedRect,\n\tset$limberGridViewDebugAdjRect,\n\tset$limberGridViewDebugMergedTempRects,\n\tset$limberGridViewDebugStackRects,\n\tset$limberGridViewDebugResultStackRects,\n\tset$limberGridViewDebugUnmergedRects,\n\tset$limberGridViewDebugMergedFreeRects,\n} from \"../../store/variables/elements\";\nimport { DEBUG_MODE } from \"../../store/variables/essentials\";\n\nexport const sleep = (ms) => {\n\treturn new Promise((resolve, reject) => {\n\t\tsetTimeout(resolve, ms);\n\t});\n};\n\nexport const printUnmergedFreeRects = (context, arr) => {\n\tif (process.env.NODE_ENV === \"development\") {\n\t\tconst e = getElements(context);\n\t\tlet len = e.$limberGridViewDebugUnmergedRects.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\te.$limberGridView.removeChild(e.$limberGridViewDebugUnmergedRects[i]);\n\t\t}\n\t\tset$limberGridViewDebugUnmergedRects(context, []);\n\n\t\t// USE it to hide items\n\t\t// e.$limberGridView.innerHTML = \"\";\n\n\t\tlen = arr.length;\n\t\tlet html;\n\t\tlet node;\n\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tnode = document.createElement(\"div\");\n\t\t\tnode.setAttribute(\n\t\t\t\t\"class\",\n\t\t\t\t\"limber-grid-view-debug-rect limber-grid-view-debug-unmerged-rect\"\n\t\t\t);\n\t\t\tnode.setAttribute(\n\t\t\t\t\"id\",\n\t\t\t\t`limber-grid-view-debug-unmerged-rect-${arr[i].id}`\n\t\t\t);\n\t\t\tnode.setAttribute(\"tabindex\", \"-1\");\n\n\t\t\tnode.setAttribute(\n\t\t\t\t\"title\",\n\t\t\t\t`${arr[i].id}: ${Object.keys(arr[i]?.a || []).map(\n\t\t\t\t\t(o) => arr[i].a[o].d.id\n\t\t\t\t)}`\n\t\t\t);\n\t\t\tnode.innerHTML = arr[i].id;\n\t\t\tnode.style.transform = `translate(${arr[i].rect.x}px, ${arr[i].rect.y}px)`;\n\t\t\tnode.style.width = arr[i].rect.width + \"px\";\n\t\t\tnode.style.height = arr[i].rect.height + \"px\";\n\t\t\te.$limberGridView.appendChild(node);\n\t\t}\n\n\t\tset$limberGridViewDebugUnmergedRects(\n\t\t\tcontext,\n\t\t\te.$limberGridView.querySelectorAll(\n\t\t\t\t\".limber-grid-view-debug-unmerged-rect\"\n\t\t\t)\n\t\t);\n\t}\n};\n\nexport const printMergedFreeRects = (context, arr) => {\n\tif (process.env.NODE_ENV === \"development\") {\n\t\tconst e = getElements(context);\n\t\tlet len = e.$limberGridViewDebugMergedFreeRects.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\te.$limberGridView.removeChild(e.$limberGridViewDebugMergedFreeRects[i]);\n\t\t}\n\t\tset$limberGridViewDebugMergedFreeRects(context, []);\n\n\t\t// USE it to hide items\n\t\t// e.$limberGridView.innerHTML = \"\";\n\n\t\tlen = arr.length;\n\t\tlet html;\n\t\tlet node;\n\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tnode = document.createElement(\"div\");\n\t\t\tnode.setAttribute(\n\t\t\t\t\"class\",\n\t\t\t\t`limber-grid-view-debug-rect limber-grid-view-debug-merged-free-rect`\n\t\t\t);\n\t\t\tnode.setAttribute(\n\t\t\t\t\"id\",\n\t\t\t\t`limber-grid-view-debug-merged-free-rect-${arr[i].id}`\n\t\t\t);\n\t\t\tnode.setAttribute(\"tabindex\", -1);\n\n\t\t\tnode.setAttribute(\n\t\t\t\t\"title\",\n\t\t\t\t`${arr[i].id}: ${Object.keys(arr[i].o).map(\n\t\t\t\t\t(o) => arr[i].o[o]?.d?.id || \"\"\n\t\t\t\t)}`\n\t\t\t);\n\n\t\t\tnode.innerHTML = arr[i].id;\n\t\t\tnode.style.transform = `translate(${arr[i].rect.x}px, ${arr[i].rect.y}px)`;\n\t\t\tnode.style.width = arr[i].rect.width + \"px\";\n\t\t\tnode.style.height = arr[i].rect.height + \"px\";\n\t\t\te.$limberGridView.appendChild(node);\n\t\t}\n\n\t\tset$limberGridViewDebugMergedFreeRects(\n\t\t\tcontext,\n\t\t\te.$limberGridView.querySelectorAll(\n\t\t\t\t\".limber-grid-view-debug-merged-free-rect\"\n\t\t\t)\n\t\t);\n\t}\n};\n\nexport const printResultStackRects = (context, arr) => {\n\tif (process.env.NODE_ENV === \"development\") {\n\t\tconst e = getElements(context);\n\t\tlet len = e.$limberGridViewDebugResultStackRects.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\te.$limberGridView.removeChild(e.$limberGridViewDebugResultStackRects[i]);\n\t\t}\n\t\tset$limberGridViewDebugResultStackRects(context, []);\n\n\t\t// USE it to hide items\n\t\t// e.$limberGridView.innerHTML = \"\";\n\n\t\tlen = arr.length;\n\t\tlet html;\n\t\tlet node;\n\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tnode = document.createElement(\"div\");\n\t\t\tnode.setAttribute(\n\t\t\t\t\"class\",\n\t\t\t\t`limber-grid-view-debug-rect limber-grid-view-debug-result-stack-rects`\n\t\t\t);\n\t\t\tnode.setAttribute(\n\t\t\t\t\"id\",\n\t\t\t\t`limber-grid-view-debug-result-stack-rects-${arr[i].id}`\n\t\t\t);\n\t\t\tnode.setAttribute(\"tabindex\", -1);\n\n\t\t\tnode.setAttribute(\n\t\t\t\t\"title\",\n\t\t\t\t`${arr[i].id}: ${Object.keys(arr[i].o).map(\n\t\t\t\t\t(o) => arr[i].o[o]?.d?.id || \"\"\n\t\t\t\t)}`\n\t\t\t);\n\n\t\t\tnode.innerHTML = arr[i].id;\n\t\t\tnode.style.transform = `translate(${arr[i].rect.x}px, ${arr[i].rect.y}px)`;\n\t\t\tnode.style.width = arr[i].rect.width + \"px\";\n\t\t\tnode.style.height = arr[i].rect.height + \"px\";\n\t\t\te.$limberGridView.appendChild(node);\n\t\t}\n\n\t\tset$limberGridViewDebugResultStackRects(\n\t\t\tcontext,\n\t\t\te.$limberGridView.querySelectorAll(\n\t\t\t\t\".limber-grid-view-debug-result-stack-rects\"\n\t\t\t)\n\t\t);\n\t}\n};\n\nexport const printStackRects = (context, arr) => {\n\tif (process.env.NODE_ENV === \"development\") {\n\t\tconst e = getElements(context);\n\t\tlet len = e.$limberGridViewDebugStackRects.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\te.$limberGridView.removeChild(e.$limberGridViewDebugStackRects[i]);\n\t\t}\n\t\tset$limberGridViewDebugStackRects(context, []);\n\n\t\t// USE it to hide items\n\t\t// e.$limberGridView.innerHTML = \"\";\n\n\t\tlen = arr.length;\n\t\tlet html;\n\t\tlet node;\n\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tnode = document.createElement(\"div\");\n\t\t\tnode.setAttribute(\n\t\t\t\t\"class\",\n\t\t\t\t`limber-grid-view-debug-rect limber-grid-view-debug-stack-rects`\n\t\t\t);\n\t\t\tnode.setAttribute(\n\t\t\t\t\"id\",\n\t\t\t\t`limber-grid-view-debug-stack-rects-${arr[i].id}`\n\t\t\t);\n\t\t\tnode.setAttribute(\"tabindex\", -1);\n\n\t\t\tnode.setAttribute(\n\t\t\t\t\"title\",\n\t\t\t\t`${arr[i].id}: ${Object.keys(arr[i].o).map(\n\t\t\t\t\t(o) => arr[i].o[o]?.d?.id || \"\"\n\t\t\t\t)}`\n\t\t\t);\n\n\t\t\tnode.innerHTML = arr[i].id;\n\t\t\tnode.style.transform = `translate(${arr[i].rect.x}px, ${arr[i].rect.y}px)`;\n\t\t\tnode.style.width = arr[i].rect.width + \"px\";\n\t\t\tnode.style.height = arr[i].rect.height + \"px\";\n\t\t\te.$limberGridView.appendChild(node);\n\t\t}\n\n\t\tset$limberGridViewDebugStackRects(\n\t\t\tcontext,\n\t\t\te.$limberGridView.querySelectorAll(\".limber-grid-view-debug-stack-rects\")\n\t\t);\n\t}\n};\n\nexport const printMergedTempRects = (context, obj) => {\n\tif (process.env.NODE_ENV === \"development\") {\n\t\tconst e = getElements(context);\n\t\tconst node = document.createElement(\"div\");\n\t\tnode.setAttribute(\n\t\t\t\"class\",\n\t\t\t`limber-grid-view-debug-rect limber-grid-view-debug-merged-temp-rects`\n\t\t);\n\t\tnode.setAttribute(\n\t\t\t\"id\",\n\t\t\t`limber-grid-view-debug-merged-temp-rects-${obj.id}`\n\t\t);\n\t\tnode.setAttribute(\"tabindex\", -1);\n\n\t\tnode.setAttribute(\n\t\t\t\"title\",\n\t\t\t`${obj.id}: ${Object.keys(obj.o).map((o) => obj.o[o]?.d?.id || \"\")}`\n\t\t);\n\n\t\tnode.innerHTML = obj.id;\n\t\tnode.style.transform = `translate(${obj.rect.x}px, ${obj.rect.y}px)`;\n\t\tnode.style.width = obj.rect.width + \"px\";\n\t\tnode.style.height = obj.rect.height + \"px\";\n\t\te.$limberGridView.appendChild(node);\n\n\t\tset$limberGridViewDebugMergedTempRects(\n\t\t\tcontext,\n\t\t\te.$limberGridView.querySelectorAll(\n\t\t\t\t\".limber-grid-view-debug-merged-temp-rects\"\n\t\t\t)\n\t\t);\n\t}\n};\n\nexport const printStackTopRect = (context, obj) => {\n\tif (process.env.NODE_ENV === \"development\") {\n\t\tconst e = getElements(context);\n\t\tif (!obj) {\n\t\t\tif (e.$limberGridViewDebugStackTopRect) {\n\t\t\t\te.$limberGridView.removeChild(e.$limberGridViewDebugStackTopRect);\n\t\t\t\tset$limberGridViewDebugStackTopRect(context, undefined);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (e.$limberGridViewDebugStackTopRect) {\n\t\t\te.$limberGridView.removeChild(e.$limberGridViewDebugStackTopRect);\n\t\t}\n\n\t\tconst node = document.createElement(\"div\");\n\t\tnode.setAttribute(\n\t\t\t\"class\",\n\t\t\t`limber-grid-view-debug-rect limber-grid-view-debug-stack-top-rect`\n\t\t);\n\t\tnode.setAttribute(\"id\", `limber-grid-view-debug-stack-top-rect`);\n\t\tnode.setAttribute(\"tabindex\", -1);\n\n\t\tnode.setAttribute(\n\t\t\t\"title\",\n\t\t\t`${obj.id}: ${Object.keys(obj.o).map((o) => obj.o[o]?.d?.id || \"\")}`\n\t\t);\n\n\t\tnode.innerHTML = obj.id;\n\t\tnode.style.transform = `translate(${obj.rect.x}px, ${obj.rect.y}px)`;\n\t\tnode.style.width = obj.rect.width + \"px\";\n\t\tnode.style.height = obj.rect.height + \"px\";\n\t\te.$limberGridView.appendChild(node);\n\n\t\tset$limberGridViewDebugStackTopRect(\n\t\t\tcontext,\n\t\t\te.$limberGridView.querySelectorAll(\n\t\t\t\t\".limber-grid-view-debug-stack-top-rect\"\n\t\t\t)[0]\n\t\t);\n\t\t// console.log(e.$limberGridViewDebugStackTopRect);\n\t}\n};\n\nexport const printStackTopAdjRect = (context, obj) => {\n\tif (process.env.NODE_ENV === \"development\") {\n\t\tconst e = getElements(context);\n\t\tif (!obj) {\n\t\t\tif (e.$limberGridViewDebugStackTopAdjRect) {\n\t\t\t\te.$limberGridView.removeChild(e.$limberGridViewDebugStackTopAdjRect);\n\t\t\t\tset$limberGridViewDebugStackTopAdjRect(context, undefined);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (e.$limberGridViewDebugStackTopAdjRect) {\n\t\t\te.$limberGridView.removeChild(e.$limberGridViewDebugStackTopAdjRect);\n\t\t}\n\n\t\tconst node = document.createElement(\"div\");\n\t\tnode.setAttribute(\n\t\t\t\"class\",\n\t\t\t`limber-grid-view-debug-rect limber-grid-view-debug-stack-top-adj-rect`\n\t\t);\n\t\tnode.setAttribute(\"id\", `limber-grid-view-debug-stack-top-adj-rect`);\n\t\tnode.setAttribute(\"tabindex\", -1);\n\n\t\tnode.setAttribute(\n\t\t\t\"title\",\n\t\t\t`${obj.id}: ${Object.keys(obj.o).map((o) => obj.o[o]?.d?.id || \"\")}`\n\t\t);\n\n\t\tnode.innerHTML = obj.id;\n\t\tnode.style.transform = `translate(${obj.rect.x}px, ${obj.rect.y}px)`;\n\t\tnode.style.width = obj.rect.width + \"px\";\n\t\tnode.style.height = obj.rect.height + \"px\";\n\t\te.$limberGridView.appendChild(node);\n\n\t\tset$limberGridViewDebugStackTopAdjRect(\n\t\t\tcontext,\n\t\t\te.$limberGridView.querySelectorAll(\n\t\t\t\t\".limber-grid-view-debug-stack-top-adj-rect\"\n\t\t\t)[0]\n\t\t);\n\t\t// console.log(e.$limberGridViewDebugStackTopAdjRect);\n\t}\n};\n\nexport const printMergedRect = (context, obj) => {\n\tif (process.env.NODE_ENV === \"development\") {\n\t\tconst e = getElements(context);\n\t\tif (!obj) {\n\t\t\tif (e.$limberGridViewDebugMergedRect) {\n\t\t\t\te.$limberGridView.removeChild(e.$limberGridViewDebugMergedRect);\n\t\t\t\tset$limberGridViewDebugMergedRect(context, undefined);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (e.$limberGridViewDebugMergedRect) {\n\t\t\te.$limberGridView.removeChild(e.$limberGridViewDebugMergedRect);\n\t\t}\n\n\t\tconst node = document.createElement(\"div\");\n\t\tnode.setAttribute(\n\t\t\t\"class\",\n\t\t\t`limber-grid-view-debug-rect limber-grid-view-debug-merged-rect limber-grid-view-debug-merged-rect-thick`\n\t\t);\n\t\tnode.setAttribute(\"id\", `limber-grid-view-debug-merged-rect`);\n\t\tnode.setAttribute(\"tabindex\", -1);\n\n\t\tnode.setAttribute(\n\t\t\t\"title\",\n\t\t\t`${obj.id}: ${Object.keys(obj.o).map((o) => obj.o[o]?.d?.id || \"\")}`\n\t\t);\n\n\t\tnode.innerHTML = obj.id;\n\t\tnode.style.transform = `translate(${obj.rect.x}px, ${obj.rect.y}px)`;\n\t\tnode.style.width = obj.rect.width + \"px\";\n\t\tnode.style.height = obj.rect.height + \"px\";\n\t\te.$limberGridView.appendChild(node);\n\n\t\tset$limberGridViewDebugMergedRect(\n\t\t\tcontext,\n\t\t\te.$limberGridView.querySelectorAll(\n\t\t\t\t\".limber-grid-view-debug-merged-rect\"\n\t\t\t)[0]\n\t\t);\n\t\t// console.log(e.$limberGridViewDebugMergedRect);\n\t}\n};\n\nexport const printAdjRect = (context, obj) => {\n\tif (process.env.NODE_ENV === \"development\") {\n\t\tconst e = getElements(context);\n\t\tif (!obj) {\n\t\t\tif (e.$limberGridViewDebugAdjRect) {\n\t\t\t\te.$limberGridView.removeChild(e.$limberGridViewDebugAdjRect);\n\t\t\t\tset$limberGridViewDebugAdjRect(context, undefined);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (e.$limberGridViewDebugAdjRect) {\n\t\t\te.$limberGridView.removeChild(e.$limberGridViewDebugAdjRect);\n\t\t}\n\n\t\tconst node = document.createElement(\"div\");\n\t\tnode.setAttribute(\n\t\t\t\"class\",\n\t\t\t`limber-grid-view-debug-rect limber-grid-view-debug-adj-rect`\n\t\t);\n\t\tnode.setAttribute(\"id\", `limber-grid-view-debug-adj-rect`);\n\t\tnode.setAttribute(\"tabindex\", -1);\n\n\t\tnode.setAttribute(\n\t\t\t\"title\",\n\t\t\t`${obj.id}: ${Object.keys(obj.o).map((o) => obj.o[o]?.d?.id || \"\")}`\n\t\t);\n\n\t\tnode.innerHTML = obj.id;\n\t\tnode.style.transform = `translate(${obj.rect.x}px, ${obj.rect.y}px)`;\n\t\tnode.style.width = obj.rect.width + \"px\";\n\t\tnode.style.height = obj.rect.height + \"px\";\n\t\te.$limberGridView.appendChild(node);\n\n\t\tset$limberGridViewDebugAdjRect(\n\t\t\tcontext,\n\t\t\te.$limberGridView.querySelectorAll(\".limber-grid-view-debug-adj-rect\")[0]\n\t\t);\n\t\t// console.log(e.$limberGridViewDebugAdjRect);\n\t}\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nimport { IntervalTreesIterative } from \"IntervalTreeJS\";\nimport { ClosestBST } from \"ClosestBST\";\nimport {\n\tgetPositionData,\n\tgetModifiedPositionData,\n} from \"../../store/variables/essentials\";\nimport getElements from \"../../store/variables/elements\";\nimport getPrivateConstants, {\n\tgetPrivateConstantByName,\n} from \"../../store/constants/privateConstants\";\nimport getPublicConstants, {\n\tgetPublicConstantByName,\n} from \"../../store/constants/publicConstants\";\nimport {\n\tgetMinMaxXY,\n\tgetTopBottomWS,\n\tgetItemsInWorkSpace,\n\tgetItemsBelowBottomWorkSpace,\n\tgetItemDimenWithMargin,\n\tgetItemsToArrangeScore,\n\t// assignScoreToFreeRects,\n\tcBSTRectComparator,\n\tcBSTLComp,\n\tcBSTRComp,\n\tgetPerfectMatch,\n\tshiftItemsDown,\n\tgetResizeWSItemsDetail,\n} from \"./arrangeUtils\";\nimport {\n\tgetRectObjectFromCo,\n\tsubtractRect,\n\tdoRectsOverlap,\n\tareRectsAdjacent,\n\tgetCoordinates,\n\tmergeRects,\n\tisRectInside,\n\tareRectsOnSameYAxisExPath,\n\tareRectsIdentical,\n} from \"../rect/rectUtils\";\nimport { shuffle } from \"../array/arrayUtils\";\nimport { filter } from \"../utils/utils\";\nimport Stack from \"../stack/stack\";\nimport {\n\tsleep,\n\tprintUnmergedFreeRects,\n\tprintMergedFreeRects,\n\tprintResultStackRects,\n\tprintStackRects,\n\tprintMergedTempRects,\n\tprintStackTopRect,\n\tprintStackTopAdjRect,\n\tprintMergedRect,\n\tprintAdjRect,\n} from \"../debug/debug\";\n\nexport const arrangeMove = async (\n\tcontext,\n\taffectedItems,\n\ttoY,\n\tmovedBottomY,\n\tisDemo = false\n) => {\n\tconst privateConstants = getPrivateConstants(context);\n\tconst publicConstants = getPublicConstants(context);\n\tconst mpd = getModifiedPositionData(context);\n\n\tconst p1 = performance.now();\n\n\tconst idCount = { idCount: 0 };\n\n\tconst { minY, maxY } = getMinMaxXY(\n\t\tcontext,\n\t\taffectedItems,\n\t\tundefined,\n\t\tundefined,\n\t\ttoY,\n\t\tmovedBottomY\n\t);\n\n\t// last element is moved or resized item;\n\tconst itemsToArrange = new Array(affectedItems.length - 1);\n\tconst iToALen = affectedItems.length - 1;\n\tfor (let i = 0; i < iToALen; i++) {\n\t\titemsToArrange[i] = affectedItems[i];\n\t}\n\n\tconst workSpaceRectCo = {\n\t\ttl: { x: 0, y: minY },\n\t\ttr: { x: privateConstants.WIDTH, y: minY },\n\t\tbr: { x: privateConstants.WIDTH, y: maxY },\n\t\tbl: { x: 0, y: maxY },\n\t};\n\n\tconst combinedWorkSpaceRectCo = {\n\t\ttl: { ...workSpaceRectCo.tl },\n\t\ttr: { ...workSpaceRectCo.tr },\n\t\tbr: { ...workSpaceRectCo.br },\n\t\tbl: { ...workSpaceRectCo.bl },\n\t};\n\tconst { topWorkSpaceCo, bottomWorkSpaceCo } = getTopBottomWS(\n\t\tcontext,\n\t\tworkSpaceRectCo,\n\t\t0,\n\t\tprivateConstants.WIDTH\n\t);\n\tconst shrinkRes = shrinkTopBottomWS(\n\t\tcontext,\n\t\ttopWorkSpaceCo,\n\t\tbottomWorkSpaceCo\n\t);\n\n\tif (shrinkRes.integrateTop) {\n\t\tcombinedWorkSpaceRectCo.tl = { ...topWorkSpaceCo.tl };\n\t\tcombinedWorkSpaceRectCo.tr = { ...topWorkSpaceCo.tr };\n\t}\n\tif (shrinkRes.integrateBottom) {\n\t\tcombinedWorkSpaceRectCo.br = { ...bottomWorkSpaceCo.br };\n\t\tcombinedWorkSpaceRectCo.bl = { ...bottomWorkSpaceCo.bl };\n\t}\n\n\tlet itemsInBottomWorkSpace = getItemsInWorkSpace(\n\t\tcontext,\n\t\tgetRectObjectFromCo(bottomWorkSpaceCo),\n\t\ttrue\n\t);\n\tconst itemsBelowBottomWorkSpace = getItemsBelowBottomWorkSpace(\n\t\tcontext,\n\t\tbottomWorkSpaceCo,\n\t\ttrue\n\t);\n\n\tlet combinedWorkSpaceRect = getRectObjectFromCo(combinedWorkSpaceRectCo);\n\tlet itemsInCombinedWorkSpace = getItemsInWorkSpace(\n\t\tcontext,\n\t\tcombinedWorkSpaceRect\n\t);\n\n\tconst shiftHeight =\n\t\t(privateConstants.DEFINED_MIN_HEIGHT_AND_WIDTH -\n\t\t\tprivateConstants.MARGIN * 2) /\n\t\t2;\n\n\tlet passCount = 0;\n\tlet arranged = {};\n\tlet arrangedCount = 0;\n\tlet workSpaceResizeCount = 0;\n\n\tlet DEBUG_COUNT = 0;\n\n\twhile (arrangedCount !== iToALen) {\n\t\t// sort items in workspace by lt.x  i.e horizontally\n\t\titemsInCombinedWorkSpace.sort((a, b) => a.x - b.x);\n\n\t\tconst { it: freeRectsItY, idCount: lastId1 } = sweepLine(\n\t\t\tcontext,\n\t\t\tcombinedWorkSpaceRect,\n\t\t\tcombinedWorkSpaceRectCo,\n\t\t\titemsInCombinedWorkSpace,\n\t\t\tidCount.idCount\n\t\t);\n\t\tidCount.idCount = lastId1;\n\n\t\tconst freeRectsArr = freeRectsItY.getSortedData();\n\t\tshuffle(freeRectsArr);\n\n\t\tassignAdjacentRects(freeRectsItY);\n\n\t\t// DEBUG:\n\t\t// printUnmergedFreeRects(context, freeRectsArr.map((o) => o.d));\n\n\t\tconst { mergedRects, idCount: lastId2 } = await mergeFreeRects(\n\t\t\tfreeRectsArr,\n\t\t\tidCount.idCount\n\t\t);\n\t\tidCount.idCount = lastId2;\n\n\t\t// DEBUG:\n\t\t// printMergedFreeRects(context, mergedRects.map((o) => o.d));\n\n\t\tconst { overlappedRects } = findOverlapped(mergedRects);\n\n\t\t// DEBUG:\n\t\t// printMergedFreeRects(context, overlappedRects.map((o) => o.d));\n\n\t\tconst {\n\t\t\tarranged: _arranged,\n\t\t\titemsInBottomWorkSpace: _itemsInBottomWorkSpace,\n\t\t\tidCount: lastId3,\n\t\t} = await arrange(\n\t\t\tcontext,\n\t\t\titemsToArrange.filter((id) => !arranged[id]),\n\t\t\toverlappedRects,\n\t\t\tgetRectObjectFromCo(topWorkSpaceCo),\n\t\t\tgetRectObjectFromCo(bottomWorkSpaceCo),\n\t\t\tcombinedWorkSpaceRectCo,\n\t\t\tidCount.idCount\n\t\t);\n\t\tidCount.idCount = lastId3;\n\n\t\titemsInBottomWorkSpace = [\n\t\t\t...itemsInBottomWorkSpace,\n\t\t\t...Object.keys(_itemsInBottomWorkSpace),\n\t\t];\n\n\t\tarranged = { ...arranged, ..._arranged };\n\t\tconst _arrangedArr = Object.values(_arranged);\n\t\titemsInCombinedWorkSpace = [...itemsInCombinedWorkSpace, ..._arrangedArr];\n\n\t\tarrangedCount += _arrangedArr.length;\n\n\t\tif (arrangedCount !== iToALen) {\n\t\t\t// resize workSpace and push bottom workspace down\n\t\t\tworkSpaceResizeCount++;\n\t\t\tconsole.log(\"workSpaceResizeCount\", workSpaceResizeCount);\n\n\t\t\tworkSpaceRectCo.br.y += shiftHeight;\n\t\t\tworkSpaceRectCo.bl.y += shiftHeight;\n\t\t\tif (bottomWorkSpaceCo) {\n\t\t\t\tbottomWorkSpaceCo.tl.y += shiftHeight;\n\t\t\t\tbottomWorkSpaceCo.tr.y += shiftHeight;\n\t\t\t\tbottomWorkSpaceCo.br.y += shiftHeight;\n\t\t\t\tbottomWorkSpaceCo.bl.y += shiftHeight;\n\t\t\t}\n\t\t\tcombinedWorkSpaceRectCo.br.y += shiftHeight;\n\t\t\tcombinedWorkSpaceRectCo.bl.y += shiftHeight;\n\n\t\t\tcombinedWorkSpaceRect = getRectObjectFromCo(combinedWorkSpaceRectCo);\n\n\t\t\tshiftItemsDown(context, itemsInBottomWorkSpace, shiftHeight);\n\t\t}\n\n\t\tpassCount++;\n\n\t\tDEBUG_COUNT++;\n\t\tif (DEBUG_COUNT > 50) {\n\t\t\tthrow \"Arrange time out\";\n\t\t}\n\t}\n\n\tif (workSpaceResizeCount > 0) {\n\t\t// push items in below bottom workspace below\n\t\tshiftItemsDown(\n\t\t\tcontext,\n\t\t\titemsBelowBottomWorkSpace,\n\t\t\tshiftHeight * workSpaceResizeCount\n\t\t);\n\n\t\t// put items in bottom workspace and below bottom workspace in arranged map\n\t\tlet len = itemsInBottomWorkSpace.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tarranged[itemsInBottomWorkSpace[i]] = mpd[itemsInBottomWorkSpace[i]];\n\t\t}\n\n\t\tlen = itemsBelowBottomWorkSpace.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tarranged[itemsBelowBottomWorkSpace[i]] =\n\t\t\t\tmpd[itemsBelowBottomWorkSpace[i]];\n\t\t}\n\t}\n\n\tconst p2 = performance.now();\n\tconsole.log(\"p1: \", p1);\n\tconsole.log(\"p2: \", p2);\n\tconsole.log(\"arrange total: \", p2 - p1);\n\n\treturn arranged;\n};\n\nexport const arrangeResize = async (\n\tcontext,\n\taffectedItems,\n\tresizedBottomY,\n\tresizedRightX,\n\tisDemo = false\n) => {\n\tconst privateConstants = getPrivateConstants(context);\n\tconst publicConstants = getPublicConstants(context);\n\n\tconst p1 = performance.now();\n\n\tconst idCount = { idCount: 0 };\n\n\tconst { minX, maxX, minY, maxY } = getMinMaxXY(\n\t\tcontext,\n\t\taffectedItems,\n\t\tresizedRightX,\n\t\tresizedBottomY,\n\t\tundefined,\n\t\tundefined\n\t);\n\n\t// last element is moved or resized item;\n\tlet itemsToArrange = new Array(affectedItems.length - 1);\n\tlet iToALen = affectedItems.length - 1;\n\tfor (let i = 0; i < iToALen; i++) {\n\t\titemsToArrange[i] = affectedItems[i];\n\t}\n\n\tconst workSpaceRectCo = {\n\t\ttl: { x: 0, y: minY },\n\t\ttr: { x: privateConstants.WIDTH, y: minY },\n\t\tbr: { x: privateConstants.WIDTH, y: maxY },\n\t\tbl: { x: 0, y: maxY },\n\t};\n\n\tconst combinedWorkSpaceRectCo = {\n\t\ttl: { ...workSpaceRectCo.tl },\n\t\ttr: { ...workSpaceRectCo.tr },\n\t\tbr: { ...workSpaceRectCo.br },\n\t\tbl: { ...workSpaceRectCo.bl },\n\t};\n\n\tconst { topWorkSpaceCo, bottomWorkSpaceCo } = getTopBottomWS(\n\t\tcontext,\n\t\tworkSpaceRectCo,\n\t\t0,\n\t\tprivateConstants.WIDTH\n\t);\n\tconst shrinkRes = shrinkTopBottomWS(\n\t\tcontext,\n\t\ttopWorkSpaceCo,\n\t\tbottomWorkSpaceCo\n\t);\n\n\tif (shrinkRes.integrateTop) {\n\t\tcombinedWorkSpaceRectCo.tl = { ...topWorkSpaceCo.tl };\n\t\tcombinedWorkSpaceRectCo.tr = { ...topWorkSpaceCo.tr };\n\t}\n\tif (shrinkRes.integrateBottom) {\n\t\tcombinedWorkSpaceRectCo.br = { ...bottomWorkSpaceCo.br };\n\t\tcombinedWorkSpaceRectCo.bl = { ...bottomWorkSpaceCo.bl };\n\t}\n\n\tconst _workSpaceRectCo = {\n\t\t// can safely do these operations\n\t\t// work space width should be greather than or equal to \"DEFINED_MIN_HEIGHT_AND_WIDTH + (MARGIN * 2)\"\n\t\t// minX - privateConstants.MARGIN\n\t\t// maxX + privateConstants.MARGIN\n\t\t// above two operations are already done in getMinMaxXY\n\t\ttl: { x: minX, y: minY },\n\t\ttr: { x: maxX, y: minY },\n\t\tbr: { x: maxX, y: maxY },\n\t\tbl: { x: minX, y: maxY },\n\t};\n\n\tconst _combinedWorkSpaceRectCo = {\n\t\ttl: { ..._workSpaceRectCo.tl },\n\t\ttr: { ..._workSpaceRectCo.tr },\n\t\tbr: { ..._workSpaceRectCo.br },\n\t\tbl: { ..._workSpaceRectCo.bl },\n\t};\n\n\tconst {\n\t\ttopWorkSpaceCo: _topWorkSpaceCo,\n\t\tbottomWorkSpaceCo: _bottomWorkSpaceCo,\n\t} = getTopBottomWS(\n\t\tcontext,\n\t\t_workSpaceRectCo,\n\t\tminX - privateConstants.MARGIN,\n\t\tmaxX + privateConstants.MARGIN\n\t);\n\n\tconst _shrinkRes = shrinkTopBottomWS(context, _topWorkSpaceCo);\n\n\tif (_shrinkRes.integrateTop) {\n\t\t_combinedWorkSpaceRectCo.tl = { ..._topWorkSpaceCo.tl };\n\t\t_combinedWorkSpaceRectCo.tr = { ..._topWorkSpaceCo.tr };\n\t}\n\tif (_bottomWorkSpaceCo) {\n\t\t_combinedWorkSpaceRectCo.br = { ..._bottomWorkSpaceCo.br };\n\t\t_combinedWorkSpaceRectCo.bl = { ..._bottomWorkSpaceCo.bl };\n\t}\n\n\tconst combinedWorkSpaceRect = getRectObjectFromCo(combinedWorkSpaceRectCo);\n\tlet itemsInCombinedWorkSpace = getItemsInWorkSpace(\n\t\tcontext,\n\t\tcombinedWorkSpaceRect\n\t);\n\n\tlet _combinedWorkSpaceRect = getRectObjectFromCo(_combinedWorkSpaceRectCo);\n\n\tconst incrementHeight = privateConstants.DEFINED_MIN_HEIGHT_AND_WIDTH * 2;\n\n\tlet passCount = 0;\n\tlet arranged = {};\n\tlet arrangedCount = 0;\n\tlet workSpaceResizeCount = 0;\n\n\twhile (arrangedCount !== iToALen) {\n\t\tlet freeRectsItY;\n\t\tif (passCount === 0) {\n\t\t\t// sort items in workspace by lt.x  i.e horizontally\n\t\t\titemsInCombinedWorkSpace.sort((a, b) => a.x - b.x);\n\n\t\t\tconst { it: _freeRectsItY, idCount: lastId1 } = sweepLine(\n\t\t\t\tcontext,\n\t\t\t\tcombinedWorkSpaceRect,\n\t\t\t\tcombinedWorkSpaceRectCo,\n\t\t\t\titemsInCombinedWorkSpace,\n\t\t\t\tidCount.idCount\n\t\t\t);\n\t\t\tfreeRectsItY = _freeRectsItY;\n\t\t\tidCount.idCount = lastId1;\n\t\t} else if (passCount === 1) {\n\t\t\tconst {\n\t\t\t\titemsInWorkSpace: _itemsInCombinedWorkSpace,\n\t\t\t\tupdatedItemsToArrange,\n\t\t\t} = getResizeWSItemsDetail(\n\t\t\t\tcontext,\n\t\t\t\t_workSpaceRectCo,\n\t\t\t\t_topWorkSpaceCo,\n\t\t\t\t_bottomWorkSpaceCo,\n\t\t\t\t_combinedWorkSpaceRectCo,\n\t\t\t\tarranged,\n\t\t\t\titemsToArrange\n\t\t\t);\n\t\t\titemsInCombinedWorkSpace = _itemsInCombinedWorkSpace;\n\t\t\titemsToArrange = updatedItemsToArrange;\n\t\t\tiToALen = updatedItemsToArrange.length + arrangedCount;\n\t\t\tpassCount++;\n\t\t\tcontinue;\n\t\t} else if (passCount >= 2) {\n\t\t\t// sort items in workspace by lt.x  i.e horizontally\n\t\t\titemsInCombinedWorkSpace.sort((a, b) => a.x - b.x);\n\n\t\t\tconst { it: _freeRectsItY, idCount: lastId1 } = sweepLine(\n\t\t\t\tcontext,\n\t\t\t\t_combinedWorkSpaceRect,\n\t\t\t\t_combinedWorkSpaceRectCo,\n\t\t\t\titemsInCombinedWorkSpace,\n\t\t\t\tidCount.idCount\n\t\t\t);\n\t\t\tfreeRectsItY = _freeRectsItY;\n\t\t\tidCount.idCount = lastId1;\n\t\t}\n\n\t\tconst freeRectsArr = freeRectsItY.getSortedData();\n\t\tshuffle(freeRectsArr);\n\n\t\tassignAdjacentRects(freeRectsItY);\n\n\t\t// DEBUG:\n\t\t// printUnmergedFreeRects(\n\t\t// \tcontext,\n\t\t// \tfreeRectsArr.map((o) => o.d)\n\t\t// );\n\n\t\tconst { mergedRects, idCount: lastId2 } = await mergeFreeRects(\n\t\t\tfreeRectsArr,\n\t\t\tidCount.idCount\n\t\t);\n\t\tidCount.idCount = lastId2;\n\n\t\t// DEBUG:\n\t\t// printMergedFreeRects(\n\t\t// \tcontext,\n\t\t// \tmergedRects.map((o) => o.d)\n\t\t// );\n\n\t\tconst { overlappedRects } = findOverlapped(mergedRects);\n\n\t\t// DEBUG:\n\t\t// printMergedFreeRects(\n\t\t// \tcontext,\n\t\t// \toverlappedRects.map((o) => o.d)\n\t\t// );\n\n\t\tconst { arranged: _arranged, idCount: lastId3 } = await arrange(\n\t\t\tcontext,\n\t\t\titemsToArrange.filter((id) => !arranged[id]),\n\t\t\toverlappedRects,\n\t\t\tgetRectObjectFromCo(topWorkSpaceCo),\n\t\t\tgetRectObjectFromCo(bottomWorkSpaceCo),\n\t\t\tpassCount === 0 ? combinedWorkSpaceRectCo : _combinedWorkSpaceRectCo,\n\t\t\tidCount.idCount\n\t\t);\n\t\tidCount.idCount = lastId3;\n\n\t\tarranged = { ...arranged, ..._arranged };\n\t\tconst _arrangedArr = Object.values(_arranged);\n\t\titemsInCombinedWorkSpace = [...itemsInCombinedWorkSpace, ..._arrangedArr];\n\n\t\tarrangedCount += _arrangedArr.length;\n\n\t\tif (arrangedCount !== iToALen && passCount >= 2) {\n\t\t\t// resize combined workSpace\n\t\t\tworkSpaceResizeCount++;\n\t\t\tconsole.log(\"workSpaceResizeCount\", workSpaceResizeCount);\n\n\t\t\t_combinedWorkSpaceRectCo.br.y += incrementHeight;\n\t\t\t_combinedWorkSpaceRectCo.bl.y += incrementHeight;\n\t\t\t_combinedWorkSpaceRect = getRectObjectFromCo(_combinedWorkSpaceRectCo);\n\t\t}\n\n\t\tpassCount++;\n\n\t\tif (passCount > 50) {\n\t\t\tthrow \"Arrange time out\";\n\t\t}\n\t}\n\n\tconst p2 = performance.now();\n\tconsole.log(\"p1: \", p1);\n\tconsole.log(\"p2: \", p2);\n\tconsole.log(\"arrange total: \", p2 - p1);\n\n\treturn arranged;\n};\n\nexport const arrangeFromHeight = async (context, itemsToArrange, height) => {\n\tconst privateConstants = getPrivateConstants(context);\n\tconst publicConstants = getPublicConstants(context);\n\n\tconst p1 = performance.now();\n\n\tconst idCount = { idCount: 0 };\n\n\tconst minX = 0;\n\tconst maxX = privateConstants.WIDTH;\n\tconst minY = height;\n\tconst maxY = height + privateConstants.DEFINED_MIN_HEIGHT_AND_WIDTH;\n\n\tconst iToALen = itemsToArrange.length;\n\n\tconst workSpaceRectCo = {\n\t\ttl: { x: minX, y: minY },\n\t\ttr: { x: maxX, y: minY },\n\t\tbr: { x: maxX, y: maxY },\n\t\tbl: { x: minX, y: maxY },\n\t};\n\n\tconst combinedWorkSpaceRectCo = {\n\t\ttl: { ...workSpaceRectCo.tl },\n\t\ttr: { ...workSpaceRectCo.tr },\n\t\tbr: { ...workSpaceRectCo.br },\n\t\tbl: { ...workSpaceRectCo.bl },\n\t};\n\n\tconst { topWorkSpaceCo } = getTopBottomWS(\n\t\tcontext,\n\t\tworkSpaceRectCo,\n\t\t0,\n\t\tprivateConstants.WIDTH\n\t);\n\tconst shrinkRes = shrinkTopBottomWS(context, topWorkSpaceCo);\n\n\tif (shrinkRes.integrateTop) {\n\t\tcombinedWorkSpaceRectCo.tl = { ...topWorkSpaceCo.tl };\n\t\tcombinedWorkSpaceRectCo.tr = { ...topWorkSpaceCo.tr };\n\t}\n\n\tlet combinedWorkSpaceRect = getRectObjectFromCo(combinedWorkSpaceRectCo);\n\tlet itemsInCombinedWorkSpace = getItemsInWorkSpace(\n\t\tcontext,\n\t\tcombinedWorkSpaceRect\n\t);\n\n\tconst shiftHeight =\n\t\tprivateConstants.DEFINED_MIN_HEIGHT_AND_WIDTH -\n\t\tprivateConstants.MARGIN * 2 -\n\t\t10;\n\n\tlet passCount = 0;\n\tlet arranged = {};\n\tlet arrangedCount = 0;\n\tlet workSpaceResizeCount = 0;\n\n\twhile (arrangedCount !== iToALen) {\n\t\t// sort items in workspace by lt.x  i.e horizontally\n\t\titemsInCombinedWorkSpace.sort((a, b) => a.x - b.x);\n\n\t\tconst { it: freeRectsItY, idCount: lastId1 } = sweepLine(\n\t\t\tcontext,\n\t\t\tcombinedWorkSpaceRect,\n\t\t\tcombinedWorkSpaceRectCo,\n\t\t\titemsInCombinedWorkSpace,\n\t\t\tidCount.idCount\n\t\t);\n\t\tidCount.idCount = lastId1;\n\n\t\tconst freeRectsArr = freeRectsItY.getSortedData();\n\t\tshuffle(freeRectsArr);\n\n\t\tassignAdjacentRects(freeRectsItY);\n\n\t\t// DEBUG:\n\t\t// printUnmergedFreeRects(context, freeRectsArr.map((o) => o.d));\n\n\t\tconst { mergedRects, idCount: lastId2 } = await mergeFreeRects(\n\t\t\tfreeRectsArr,\n\t\t\tidCount.idCount\n\t\t);\n\t\tidCount.idCount = lastId2;\n\n\t\t// DEBUG:\n\t\t// printMergedFreeRects(context, mergedRects.map((o) => o.d));\n\n\t\tconst { overlappedRects } = findOverlapped(mergedRects);\n\n\t\t// DEBUG:\n\t\t// printMergedFreeRects(context, overlappedRects.map((o) => o.d));\n\n\t\tconst { arranged: _arranged, idCount: lastId3 } = await arrange(\n\t\t\tcontext,\n\t\t\titemsToArrange.filter((id) => !arranged[id]),\n\t\t\toverlappedRects,\n\t\t\tgetRectObjectFromCo(topWorkSpaceCo),\n\t\t\tundefined,\n\t\t\tcombinedWorkSpaceRectCo,\n\t\t\tidCount.idCount\n\t\t);\n\t\tidCount.idCount = lastId3;\n\n\t\tarranged = { ...arranged, ..._arranged };\n\t\tconst _arrangedArr = Object.values(_arranged);\n\t\titemsInCombinedWorkSpace = [...itemsInCombinedWorkSpace, ..._arrangedArr];\n\n\t\tarrangedCount += _arrangedArr.length;\n\n\t\tif (arrangedCount !== iToALen) {\n\t\t\t// resize workSpace and push bottom workspace down\n\t\t\tworkSpaceResizeCount++;\n\t\t\tconsole.log(\"workSpaceResizeCount\", workSpaceResizeCount);\n\n\t\t\tworkSpaceRectCo.br.y += shiftHeight;\n\t\t\tworkSpaceRectCo.bl.y += shiftHeight;\n\t\t\tcombinedWorkSpaceRectCo.br.y += shiftHeight;\n\t\t\tcombinedWorkSpaceRectCo.bl.y += shiftHeight;\n\n\t\t\tcombinedWorkSpaceRect = getRectObjectFromCo(combinedWorkSpaceRectCo);\n\t\t}\n\n\t\tpassCount++;\n\n\t\tpassCount++;\n\t\tif (passCount > 10000) {\n\t\t\tthrow \"Arrange time out\";\n\t\t}\n\t}\n\n\tconst p2 = performance.now();\n\tconsole.log(\"p1: \", p1);\n\tconsole.log(\"p2: \", p2);\n\tconsole.log(\"arrange total: \", p2 - p1);\n\n\treturn arranged;\n};\n\nexport const shrinkTopBottomWS = (context, topWorkSpace, bottomWorkSpace) => {\n\tlet topWSItems, bottomWSItems;\n\tconst res = { integrateTop: false, integrateBottom: false };\n\tif (topWorkSpace) {\n\t\ttopWSItems = getItemsInWorkSpace(\n\t\t\tcontext,\n\t\t\tgetRectObjectFromCo(topWorkSpace)\n\t\t);\n\t\tconst sweepRes = sweepLineTop(topWorkSpace, topWSItems);\n\n\t\tif (sweepRes < topWorkSpace.bl.y) {\n\t\t\ttopWorkSpace.tl.y = sweepRes;\n\t\t\ttopWorkSpace.tr.y = sweepRes;\n\n\t\t\tres.integrateTop = true;\n\t\t}\n\t}\n\n\tif (bottomWorkSpace) {\n\t\tbottomWSItems = getItemsInWorkSpace(\n\t\t\tcontext,\n\t\t\tgetRectObjectFromCo(bottomWorkSpace)\n\t\t);\n\t\tconst sweepRes = sweepLineBottom(bottomWorkSpace, bottomWSItems);\n\n\t\tif (sweepRes > bottomWorkSpace.tl.y) {\n\t\t\tbottomWorkSpace.bl.y = sweepRes;\n\t\t\tbottomWorkSpace.br.y = sweepRes;\n\n\t\t\tres.integrateBottom = true;\n\t\t}\n\t}\n\n\treturn res;\n};\n\nexport const sweepLineTop = (area, items) => {\n\tconst len = items.length;\n\tconst it = new IntervalTreesIterative();\n\n\tfor (let i = 0; i < len; i++) {\n\t\tit.insert({\n\t\t\tlow: items[i].y,\n\t\t\thigh: items[i].y + items[i].height,\n\t\t\td: {\n\t\t\t\trect: items[i],\n\t\t\t},\n\t\t});\n\t}\n\n\tlet resultPoint = area.bl.y;\n\tlet res, rLen;\n\tlet breakSig = false;\n\n\tfor (let i = 0; i < len; i++) {\n\t\tres = it.findAll({ low: items[i].y + items[i].height, high: area.bl.y });\n\t\trLen = res.length;\n\t\tbreakSig = false;\n\t\tfor (let j = 0; j < rLen; j++) {\n\t\t\tif (\n\t\t\t\tareRectsOnSameYAxisExPath(\n\t\t\t\t\tgetCoordinates(items[i]),\n\t\t\t\t\tgetCoordinates(res[j].d.rect)\n\t\t\t\t) &&\n\t\t\t\t!areRectsIdentical(\n\t\t\t\t\tgetCoordinates(items[i]),\n\t\t\t\t\tgetCoordinates(res[j].d.rect)\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tbreakSig = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!breakSig && items[i].y + items[i].height < resultPoint) {\n\t\t\tresultPoint = items[i].y + items[i].height;\n\t\t}\n\t}\n\n\treturn resultPoint;\n};\n\nexport const sweepLineBottom = (area, items) => {\n\tconst len = items.length;\n\tconst it = new IntervalTreesIterative();\n\n\tfor (let i = 0; i < len; i++) {\n\t\tit.insert({\n\t\t\tlow: items[i].y,\n\t\t\thigh: items[i].y + items[i].height,\n\t\t\td: {\n\t\t\t\trect: items[i],\n\t\t\t},\n\t\t});\n\t}\n\n\tlet resultPoint = area.tl.y;\n\tlet res, rLen;\n\tlet breakSig = false;\n\tfor (let i = 0; i < len; i++) {\n\t\tres = it.findAll({ low: area.tl.y, high: items[i].y });\n\t\trLen = res.length;\n\t\tbreakSig = false;\n\t\tfor (let j = 0; j < rLen; j++) {\n\t\t\tif (\n\t\t\t\tareRectsOnSameYAxisExPath(\n\t\t\t\t\tgetCoordinates(items[i]),\n\t\t\t\t\tgetCoordinates(res[j].d.rect)\n\t\t\t\t) &&\n\t\t\t\t!areRectsIdentical(\n\t\t\t\t\tgetCoordinates(items[i]),\n\t\t\t\t\tgetCoordinates(res[j].d.rect)\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tbreakSig = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!breakSig && items[i].y > resultPoint) {\n\t\t\tresultPoint = items[i].y;\n\t\t}\n\t}\n\n\treturn resultPoint;\n};\n\nexport const sweepLine = (context, area, areaCo, items, lastId) => {\n\t// area: area to sweep\n\t// area: area to sweep Coordinate Form\n\t// items: items in area\n\n\tconst privateConstants = getPrivateConstants(context);\n\n\tlet idCount = lastId;\n\n\tconst it = new IntervalTreesIterative();\n\n\tit.insert({\n\t\tlow: areaCo.tl.y,\n\t\thigh: areaCo.bl.y,\n\t\td: { id: idCount++, rect: area, a: {}, o: {}, ref: null },\n\t});\n\n\tlet tempItem;\n\tlet fInterval = { low: 0, high: 0, d: null };\n\tlet intervals;\n\tlet iLen = 0;\n\tlet diff;\n\tlet dLen = 0;\n\n\tconst len = items.length;\n\tfor (let i = 0; i < len; i++) {\n\t\ttempItem = getCoordinates(items[i]);\n\t\tfInterval = { low: tempItem.tl.y, high: tempItem.bl.y };\n\t\tintervals = it.findAll(fInterval);\n\t\tiLen = intervals.length;\n\t\tfor (let j = 0; j < iLen; j++) {\n\t\t\tif (\n\t\t\t\tdoRectsOverlap(\n\t\t\t\t\tintervals[j].d.rect,\n\t\t\t\t\tgetItemDimenWithMargin(privateConstants.MARGIN, items[i])\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tdiff = subtractRect(\n\t\t\t\t\tintervals[j].d.rect,\n\t\t\t\t\tgetItemDimenWithMargin(privateConstants.MARGIN, items[i]),\n\t\t\t\t\ttrue\n\t\t\t\t);\n\n\t\t\t\tdLen = diff.length;\n\t\t\t\tfor (let k = 0; k < dLen; k++) {\n\t\t\t\t\tit.insert({\n\t\t\t\t\t\tlow: diff[k].tl.y,\n\t\t\t\t\t\thigh: diff[k].bl.y,\n\t\t\t\t\t\td: {\n\t\t\t\t\t\t\tid: idCount++,\n\t\t\t\t\t\t\trect: getRectObjectFromCo(diff[k]),\n\t\t\t\t\t\t\ta: {},\n\t\t\t\t\t\t\to: {},\n\t\t\t\t\t\t\tref: null,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tit.remove(intervals[j].interval, intervals[j].d);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { it, idCount };\n};\n\nexport const assignAdjacentRects = (rectsItY) => {\n\tconst rectItYArr = rectsItY.getSortedData();\n\n\tconst len = rectItYArr.length;\n\tlet resY, lenY;\n\n\tfor (let i = 0; i < len; i++) {\n\t\tresY = rectsItY.findAll(rectItYArr[i].interval);\n\t\tlenY = resY.length;\n\t\tfor (let j = 0; j < lenY; j++) {\n\t\t\tif (areRectsAdjacent(rectItYArr[i].d.rect, resY[j].d.rect)) {\n\t\t\t\trectItYArr[i].d.a[resY[j].d.id] = resY[j];\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport const mergeFreeRects = async (freeRectsArr, lastId) => {\n\tconst stack = new Stack();\n\tconst stackIt = new IntervalTreesIterative();\n\tconst resultStack = new Stack();\n\tconst resultIt = new IntervalTreesIterative();\n\n\tlet adjacents,\n\t\tadj,\n\t\ttop,\n\t\tkeys,\n\t\tkeyslen,\n\t\tmergedObject,\n\t\tmergedRect,\n\t\tmergedRects,\n\t\tmergeRectsLen;\n\tlet atLeastOneFullMerge = false;\n\tlet idCount = lastId;\n\tconst freeRectsLen = freeRectsArr.length;\n\n\tfor (let k = 0; k < freeRectsLen; k++) {\n\t\tif (freeRectsArr[k].d.ref !== null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tstack.push(freeRectsArr[k]);\n\t\twhile (!stack.isEmpty()) {\n\t\t\ttop = stack.pop();\n\n\t\t\tkeys = Object.keys(top.d.a);\n\t\t\tkeyslen = keys.length;\n\t\t\tatLeastOneFullMerge = false;\n\t\t\tfor (let i = 0; i < keyslen; i++) {\n\t\t\t\tif (!top.d.a[keys[i]]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tadj = top.d.a[keys[i]];\n\n\t\t\t\twhile (adj?.d?.ref) {\n\t\t\t\t\tadj = adj.d.ref;\n\t\t\t\t}\n\n\t\t\t\tmergedRects = mergeRects(top.d.rect, adj.d.rect);\n\t\t\t\tmergeRectsLen = mergedRects?.length || 0;\n\t\t\t\tif (mergeRectsLen === 1) {\n\t\t\t\t\tmergedRect = mergedRects[0];\n\n\t\t\t\t\tif (mergedRect) {\n\t\t\t\t\t\tadjacents = { ...top.d.a, ...adj.d.a };\n\t\t\t\t\t\tdelete adjacents[top.d.id];\n\t\t\t\t\t\tdelete adjacents[adj.d.id];\n\n\t\t\t\t\t\tmergedObject = {\n\t\t\t\t\t\t\td: {\n\t\t\t\t\t\t\t\tid: idCount++,\n\t\t\t\t\t\t\t\trect: mergedRect,\n\t\t\t\t\t\t\t\ta: adjacents,\n\t\t\t\t\t\t\t\to: {},\n\t\t\t\t\t\t\t\tref: null,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tfilterAdjacents(mergedObject);\n\t\t\t\t\t\tif (!isRectIdenticalOrInside(stackIt, mergedObject)) {\n\t\t\t\t\t\t\tstack.push(mergedObject);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (isRectInside(mergedRect, adj.d.rect)) {\n\t\t\t\t\t\t\tadj.d.ref = mergedObject;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (isRectInside(mergedRect, top.d.rect)) {\n\t\t\t\t\t\t\ttop.d.ref = mergedObject;\n\t\t\t\t\t\t\tatLeastOneFullMerge = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!atLeastOneFullMerge) {\n\t\t\t\tisRectIdenticalOrInside(resultIt, top);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { mergedRects: resultIt.getSortedData(), idCount };\n};\n\nexport const isRectIdenticalOrInside = (it, obj) => {\n\tconst res = it.findAll({\n\t\tlow: obj.d.rect.y,\n\t\thigh: obj.d.rect.y + obj.d.rect.height,\n\t});\n\n\tlet isIdenticalOrInside = false;\n\tconst len = res?.length || 0;\n\tfor (let i = 0; i < len; i++) {\n\t\tif (\n\t\t\tareRectsIdentical(\n\t\t\t\tgetCoordinates(obj.d.rect),\n\t\t\t\tgetCoordinates(res[i].d.rect)\n\t\t\t) ||\n\t\t\tisRectInside(res[i].d.rect, obj.d.rect)\n\t\t) {\n\t\t\tisIdenticalOrInside = true;\n\t\t}\n\t}\n\n\tif (!isIdenticalOrInside) {\n\t\tit.insert({\n\t\t\tlow: obj.d.rect.y,\n\t\t\thigh: obj.d.rect.y + obj.d.rect.height,\n\t\t\td: obj.d,\n\t\t});\n\t}\n\n\treturn isIdenticalOrInside;\n};\n\nexport const filterAdjacents = (mergedObject, visited) => {\n\tconst mergedRect = mergedObject.d.rect;\n\tconst adjs = mergedObject.d.a;\n\tlet adj;\n\tconst adjsKeys = Object.keys(adjs);\n\tconst adjsKeysLen = adjsKeys.length;\n\tfor (let j = 0; j < adjsKeysLen; j++) {\n\t\tadj = adjs[adjsKeys[j]];\n\n\t\tif (!areRectsAdjacent(mergedRect, adj.d.rect)) {\n\t\t\tdelete adjs[adjsKeys[j]];\n\t\t}\n\t}\n};\n\nexport const findOverlapped = (mergedRects) => {\n\tconst it = new IntervalTreesIterative();\n\n\tconst len = mergedRects.length;\n\tfor (let i = 0; i < len; i++) {\n\t\tmergedRects[i].low = mergedRects[i].d.rect.y;\n\t\tmergedRects[i].high =\n\t\t\tmergedRects[i].d.rect.y + mergedRects[i].d.rect.height;\n\t\tit.insert(mergedRects[i]);\n\t}\n\n\tconst completeOverlapped = {};\n\tconst itArr = it.getSortedData();\n\n\tlet res, rlen;\n\n\tfor (let i = 0; i < len; i++) {\n\t\tres = it.findAll(itArr[i].interval);\n\t\trlen = res.length;\n\t\tfor (let j = 0; j < rlen; j++) {\n\t\t\tif (\n\t\t\t\titArr[i].d.rect &&\n\t\t\t\tres[j].d.rect &&\n\t\t\t\tisRectInside(itArr[i].d.rect, res[j].d.rect) &&\n\t\t\t\titArr[i].d.id !== res[j].d.id\n\t\t\t) {\n\t\t\t\tcompleteOverlapped[res[j].d.id] = res[j];\n\t\t\t\tres[j].d._rect = res[j].d.rect;\n\t\t\t\tres[j].d.rect = null;\n\n\t\t\t\tconst olpds = Object.values(res[j].d.o);\n\t\t\t\tconst oLen = olpds.length;\n\t\t\t\tfor (let k = 0; k < oLen; k++) {\n\t\t\t\t\t// Hey everyone I'm done.\n\t\t\t\t\tconst olpd = olpds[k];\n\t\t\t\t\tdelete olpd.d.o[res[j].d.id];\n\t\t\t\t}\n\t\t\t\tres[j].d.o = {};\n\t\t\t} else if (doRectsOverlap(itArr[i].d.rect, res[j].d.rect)) {\n\t\t\t\titArr[i].d.o[res[j].d.id] = res[j];\n\t\t\t\tres[j].d.o[itArr[i].d.id] = itArr[i];\n\t\t\t}\n\t\t}\n\t}\n\n\tconst resArr = new Array(len);\n\tlet count = 0;\n\tfor (let i = 0; i < len; i++) {\n\t\tif (itArr[i].d.rect) {\n\t\t\tresArr[count++] = itArr[i];\n\t\t}\n\t}\n\n\tconst filteredResArr = new Array(count);\n\tfor (let i = 0; i < count; i++) {\n\t\tfilteredResArr[i] = resArr[i];\n\t}\n\n\treturn {\n\t\toverlappedRects: filteredResArr,\n\t\tcompleteOverlapped: Object.values(completeOverlapped),\n\t};\n};\n\n/**\n * [description]\n * @param  {number[]} itemsToArrange          Array of items to arrange\n * @param  {object[]} overlappedRects         Array of overlapping rects\n * @param  {object} topWorkSpace            Top work space object in object form\n * @param  {object} bottomWorkSpace         Bottom work space object in object form\n * @param  {object} combinedWorkSpaceRectCo combined work space object in object form\n * @param  {number} lastId                  next id available\n * @return {object}                         arranged{object}: key is index in position data array, value is the object; itemsInbottomworkSpace{object}: key is index in position data array, value is also the index; idCount: next available id\n */\nexport const arrange = async (\n\tcontext,\n\titemsToArrange,\n\toverlappedRects,\n\ttopWorkSpace,\n\tbottomWorkSpace,\n\tcombinedWorkSpaceRectCo,\n\tlastId\n) => {\n\t// this function updates the modified position data\n\t// so no need to update the modified position data later\n\n\tconst mpd = getModifiedPositionData(context);\n\tconst privateConstants = getPrivateConstants(context);\n\n\tlet idCount = lastId;\n\tconst arranged = {};\n\tconst itemsInBottomWorkSpace = {};\n\n\t// construct closest bst\n\tshuffle(overlappedRects);\n\tconst wCBST = new ClosestBST();\n\tconst orLen = overlappedRects.length;\n\tfor (let i = 0; i < orLen; i++) {\n\t\twCBST.insert({\n\t\t\tv: overlappedRects[i].d.rect.width,\n\t\t\td: overlappedRects[i].d,\n\t\t});\n\t}\n\n\tconst iToALen = itemsToArrange.length;\n\n\tconst itemsToArrangeStack = new Stack();\n\tconst itemsToArrangeLaterStack = new Stack();\n\n\tconst itemsToArrangeWithScore = getItemsToArrangeScore(\n\t\tcontext,\n\t\titemsToArrange\n\t);\n\tfor (let i = 0; i < iToALen; i++) {\n\t\titemsToArrangeStack.push(itemsToArrangeWithScore[i]);\n\t}\n\n\tlet top;\n\tlet aItem;\n\tlet wCBSTRes;\n\n\twhile (!itemsToArrangeStack.isEmpty()) {\n\t\ttop = itemsToArrangeStack.pop();\n\n\t\taItem = mpd[top.d];\n\n\t\twCBSTRes = wCBST.findUsingComparator(\n\t\t\tcBSTRectComparator(\n\t\t\t\tgetItemDimenWithMargin(privateConstants.MARGIN, aItem)\n\t\t\t),\n\t\t\tcBSTLComp(aItem.width),\n\t\t\tcBSTRComp\n\t\t);\n\n\t\tif (!wCBSTRes.length) {\n\t\t\titemsToArrangeLaterStack.push(top);\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst pm = getPerfectMatch(wCBSTRes, aItem.width + aItem.height);\n\n\t\taItem.x = pm.d.rect.x + privateConstants.MARGIN;\n\t\taItem.y = pm.d.rect.y + privateConstants.MARGIN;\n\n\t\tarranged[top.d] = aItem;\n\n\t\tif (bottomWorkSpace && isRectInside(bottomWorkSpace, pm.d.rect)) {\n\t\t\t// put in bottom and combined workspace\n\t\t\titemsInBottomWorkSpace[top.d] = top.d;\n\t\t}\n\n\t\t// DEBUG:\n\t\t// printMergedFreeRects(context, wCBST.getSortedData().map((o) => o.d));\n\n\t\tconst { result, idCount: lastId1 } = await arrangeCleanUp(\n\t\t\tcontext,\n\t\t\taItem,\n\t\t\tpm,\n\t\t\twCBST,\n\t\t\tidCount\n\t\t);\n\t\tidCount = lastId1;\n\n\t\tconst resLen = result.length;\n\t\tfor (let i = 0; i < resLen; i++) {\n\t\t\tresult[i].v = result[i].d.rect.width;\n\t\t\twCBST.insert(result[i]);\n\t\t}\n\t\t// DEBUG:\n\t\t// printMergedFreeRects(context, wCBST.getSortedData().map((o) => o.d));\n\t}\n\n\treturn {\n\t\tarranged,\n\t\titemsInBottomWorkSpace,\n\t\tidCount,\n\t};\n};\n\nexport const arrangeCleanUp = async (context, aItem, pm, wCBST, lastId) => {\n\tconst privateConstants = getPrivateConstants(context);\n\n\tlet idCount = lastId;\n\tlet diff;\n\tlet diffLen;\n\tlet diffObj;\n\n\t// overlapped\n\tlet olpd;\n\t// indirect operlapped\n\tlet iolpd;\n\t// indirect overlapping keys\n\tlet ioKeys;\n\tlet ioKeysLen;\n\n\tconst indirectOverlaps = {};\n\n\tconst diffStack = new Stack();\n\n\tconst itemWithMargins = {\n\t\tx: aItem.x - privateConstants.MARGIN,\n\t\ty: aItem.y - privateConstants.MARGIN,\n\t\twidth: aItem.width + privateConstants.MARGIN * 2,\n\t\theight: aItem.height + privateConstants.MARGIN * 2,\n\t};\n\twCBST.remove(pm.v, pm.d);\n\n\tdiff = subtractRect(pm.d.rect, itemWithMargins);\n\tdiffLen = diff?.length || 0;\n\tfor (let i = 0; i < diffLen; i++) {\n\t\tdiffObj = {\n\t\t\tv: diff[i].width,\n\t\t\td: {\n\t\t\t\tid: idCount++,\n\t\t\t\trect: diff[i],\n\t\t\t\ta: {},\n\t\t\t\to: {},\n\t\t\t\tref: null,\n\t\t\t},\n\t\t};\n\n\t\tdiffStack.push(diffObj);\n\t}\n\n\tlet subtractFlag = false;\n\tconst directOverlaps = { ...pm.d.o };\n\tconst pmOlps = Object.values(pm.d.o);\n\tconst pmOlapsLen = pmOlps.length;\n\tfor (let j = 0; j < pmOlapsLen; j++) {\n\t\tolpd = pmOlps[j];\n\t\tdelete olpd.d.o[pm.d.id];\n\n\t\t// if diffLen is 0, this overlapping rect will be put back later after operations\n\t\twCBST.remove(olpd.d.rect.width, olpd.d);\n\n\t\tsubtractFlag = false;\n\t\tif (doRectsOverlap(olpd.d.rect, itemWithMargins)) {\n\t\t\tsubtractFlag = true;\n\t\t\tdiff = subtractRect(olpd.d.rect, itemWithMargins);\n\t\t\tdiffLen = diff?.length || 0;\n\n\t\t\tif (diffLen) {\n\t\t\t\tfor (let k = 0; k < diffLen; k++) {\n\t\t\t\t\tdiffObj = {\n\t\t\t\t\t\tv: diff[k].width,\n\t\t\t\t\t\td: {\n\t\t\t\t\t\t\tid: idCount++,\n\t\t\t\t\t\t\trect: diff[k],\n\t\t\t\t\t\t\ta: {},\n\t\t\t\t\t\t\to: {},\n\t\t\t\t\t\t\tref: null,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\n\t\t\t\t\tdiffStack.push(diffObj);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tdiffStack.push(olpd);\n\t\t\tolpd.d.a = {};\n\t\t}\n\n\t\tioKeys = Object.keys(olpd.d.o);\n\t\tioKeysLen = ioKeys.length;\n\t\tfor (let k = 0; k < ioKeysLen; k++) {\n\t\t\tiolpd = olpd.d.o[ioKeys[k]];\n\t\t\tif (!directOverlaps[ioKeys[k]]) {\n\t\t\t\tindirectOverlaps[ioKeys[k]] = iolpd;\n\t\t\t}\n\t\t\tif (subtractFlag) {\n\t\t\t\tdelete iolpd.d.o[olpd.d.id];\n\t\t\t}\n\t\t}\n\t}\n\n\t// now merge the rects in diff stack and put the merged rects in wCBST tree\n\t// printUnmergedFreeRects(context, diffStack.getData().map((o) => o.d));\n\tconst diffStackData = diffStack.getData();\n\tconst diffStackDataLen = diffStackData.length;\n\tconst it = new IntervalTreesIterative();\n\tfor (let i = 0; i < diffStackDataLen; i++) {\n\t\tit.insert({\n\t\t\tlow: diffStackData[i].d.rect.y,\n\t\t\thigh: diffStackData[i].d.rect.y + diffStackData[i].d.rect.height,\n\t\t\td: diffStackData[i].d,\n\t\t});\n\t}\n\n\tassignAdjacentRects(it);\n\tconst { mergedRects, idCount: lastId1 } = await mergeFreeRects(\n\t\tdiffStack.getData(),\n\t\tidCount\n\t);\n\n\tconst {\n\t\toverlappedRects: _overlappedRects,\n\t\tcompleteOverlapped,\n\t} = findOverlapped([...mergedRects, ...Object.values(indirectOverlaps)]);\n\n\tconst completeOverlappedLen = completeOverlapped.length;\n\tfor (let i = 0; i < completeOverlappedLen; i++) {\n\t\twCBST.remove(completeOverlapped[i].d._rect.width, completeOverlapped[i].d);\n\t}\n\n\tconst _overlappedRectsLen = _overlappedRects.length;\n\tconst overlappedRects = new Array(_overlappedRectsLen);\n\tlet count = 0;\n\tfor (let i = 0; i < _overlappedRectsLen; i++) {\n\t\tif (!indirectOverlaps[_overlappedRects[i].d.id]) {\n\t\t\toverlappedRects[count++] = _overlappedRects[i];\n\t\t}\n\t}\n\n\tconst filteredOverlappedRects = filter(overlappedRects);\n\n\t// printMergedFreeRects(context, filteredOverlappedRects.map((o) => o.d));\n\n\treturn { result: filteredOverlappedRects, idCount: lastId1 };\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nimport getOptions from \"../../store/variables/options\";\nimport getElements, {\n\tset$limberGridViewItems,\n} from \"../../store/variables/elements\";\nimport {\n\tgetPositionData,\n\tsetPositionData,\n\tgetModifiedPositionData,\n\tsetModifiedPositionData,\n\tgetCallbacks,\n} from \"../../store/variables/essentials\";\nimport { isMobile } from \"../utils/utils\";\n\nimport getPrivateConstants from \"../../store/constants/privateConstants\";\nimport getPublicConstants from \"../../store/constants/publicConstants\";\nimport {\n\tinitializeEvents,\n\tunInitializeEvents,\n\tinitializeVariables,\n} from \"../eventHandlerLib/initializers\";\nimport { addItemAllowCheck } from \"../arrange/arrangeUtils\";\nimport { arrangeFromHeight } from \"../arrange/arrange\";\nimport { getPdBottomMax } from \"./rendererUtils\";\n\nexport const render = function (context, scale = true) {\n\tconst options = getOptions(context);\n\tconst pd = getPositionData(context);\n\tconst privateConstants = getPrivateConstants(context);\n\tconst publicConstants = getPublicConstants(context);\n\tconst e = getElements(context);\n\tconst callbacks = getCallbacks(context);\n\n\tunInitializeEvents.call(context);\n\n\tconst len = pd.length;\n\n\tlet WIDTH_SCALE_FACTOR = 1;\n\tif (scale) {\n\t\tWIDTH_SCALE_FACTOR = privateConstants.WIDTH_SCALE_FACTOR;\n\t}\n\n\tconst nodes = new Array(len);\n\tlet spd;\n\n\tif (!isMobile(context)) {\n\t\tlet classList = \"limber-grid-view-item\";\n\t\tif (options.editable === true) {\n\t\t\tclassList = \"limber-grid-view-item limber-grid-view-item-editable\";\n\t\t}\n\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tpd[i].x *= WIDTH_SCALE_FACTOR;\n\t\t\tpd[i].y *= WIDTH_SCALE_FACTOR;\n\t\t\tpd[i].width *= WIDTH_SCALE_FACTOR;\n\t\t\tpd[i].height *= WIDTH_SCALE_FACTOR;\n\n\t\t\tconst itemEl = document.createElement(\"div\");\n\t\t\titemEl.setAttribute(\"class\", classList);\n\t\t\titemEl.setAttribute(\"data-index\", i);\n\t\t\titemEl.style.transform = `translate(${pd[i].x}px, ${pd[i].y}px)`;\n\t\t\titemEl.style.width = `${pd[i].width}px`;\n\t\t\titemEl.style.height = `${pd[i].height}px`;\n\n\t\t\t// const renderData = callbacks.renderContent(i, pd[i].width, pd[i].height);\n\t\t\t// renderItemContent(context, renderData, itemEl);\n\n\t\t\tnodes[i] = itemEl;\n\t\t}\n\t} else {\n\t\tconst classList = \"limber-grid-view-item limber-grid-view-item-mobile-view\";\n\t\tspd = getSerializedPositionData(pd);\n\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tpd[i].x *= WIDTH_SCALE_FACTOR;\n\t\t\tpd[i].y *= WIDTH_SCALE_FACTOR;\n\t\t\tpd[i].width *= WIDTH_SCALE_FACTOR;\n\t\t\tpd[i].height *= WIDTH_SCALE_FACTOR;\n\n\t\t\tspd[i].width = privateConstants.WIDTH;\n\t\t\tspd[i].height =\n\t\t\t\tprivateConstants.WIDTH / publicConstants.MOBILE_ASPECT_RATIO;\n\n\t\t\tconst itemEl = document.createElement(\"div\");\n\t\t\titemEl.setAttribute(\"class\", classList);\n\t\t\titemEl.setAttribute(\"data-index\", spd[i].index);\n\t\t\titemEl.style.width = `${spd[i].width}px`;\n\t\t\titemEl.style.height = `${spd[i].height}px`;\n\n\t\t\t// const renderData = callbacks.renderContent(\n\t\t\t// \ti,\n\t\t\t// \tspd[i].width,\n\t\t\t// \tspd[i].height\n\t\t\t// );\n\t\t\t// renderItemContent(context, renderData, itemEl);\n\n\t\t\tnodes[i] = itemEl;\n\t\t}\n\t}\n\n\t// e.$limberGridView.innerHTML = \"\";\n\tconst itemsLen = e.$limberGridViewItems.length;\n\tfor (let i = 0; i < itemsLen; i++) {\n\t\te.$limberGridView.removeChild(e.$limberGridViewItems[i]);\n\t}\n\n\tfor (let i = 0; i < len; i++) {\n\t\te.$limberGridView.appendChild(nodes[i]);\n\t}\n\n\tfor (let i = 0; i < len; i++) {\n\t\tconst itemEl = nodes[i];\n\t\tif (!isMobile(context)) {\n\t\t\tconst renderData = callbacks.renderContent(i, pd[i].width, pd[i].height);\n\t\t\trenderItemContent(context, renderData, itemEl);\n\t\t} else {\n\t\t\tconst renderData = callbacks.renderContent(\n\t\t\t\ti,\n\t\t\t\tspd[i].width,\n\t\t\t\tspd[i].height\n\t\t\t);\n\t\t\trenderItemContent(context, renderData, itemEl);\n\t\t}\n\t}\n\n\tset$limberGridViewItems(context, [\n\t\t...e.$limberGridView.getElementsByClassName(\"limber-grid-view-item\"),\n\t]);\n\n\t// initializeVariables();\n\tinitializeEvents.call(context);\n\n\tif (callbacks.renderComplete) {\n\t\tcallbacks.renderComplete();\n\t}\n};\n\nexport const renderItem = function (context, index) {\n\tconst e = getElements(context);\n\tconst callbacks = getCallbacks(context);\n\tconst pd = getPositionData(context);\n\n\tconst renderData = callbacks.renderContent(\n\t\tindex,\n\t\tpd[index].width,\n\t\tpd[index].height\n\t);\n\t// e.$limberGridViewItems[index].innerHTML = \"\";\n\trenderItemContent(context, renderData, e.$limberGridViewItems[index]);\n\n\tif (callbacks.renderComplete) {\n\t\tcallbacks.renderComplete(index);\n\t}\n};\n\nexport const addItem = async function (context, item) {\n\tconst options = getOptions(context);\n\tconst e = getElements(context);\n\tconst callbacks = getCallbacks(context);\n\tconst privateConstants = getPrivateConstants(context);\n\tconst publicConstants = getPublicConstants(context);\n\n\tunInitializeEvents.call(context);\n\n\ttry {\n\t\tlet allow = false;\n\t\tif (item.x && item.y && item.width && item.height) {\n\t\t\tallow = addItemAllowCheck(\n\t\t\t\tcontext,\n\t\t\t\titem.x,\n\t\t\t\titem.y,\n\t\t\t\titem.width,\n\t\t\t\titem.height\n\t\t\t);\n\t\t\tif (allow) {\n\t\t\t\tconst pd = getPositionData(context);\n\t\t\t\tsetModifiedPositionData(context, pd);\n\t\t\t\tconst mpd = getModifiedPositionData(context);\n\t\t\t\tmpd.push(item);\n\t\t\t\tsetPositionData(context, mpd);\n\t\t\t}\n\t\t} else if (item.width && item.height && !item.x && !item.y) {\n\t\t\tconst pd = getPositionData(context);\n\t\t\tsetModifiedPositionData(context, pd);\n\t\t\tconst mpd = getModifiedPositionData(context);\n\n\t\t\tconst bottomY = getPdBottomMax(context);\n\t\t\tmpd.push({\n\t\t\t\tx: undefined,\n\t\t\t\ty: undefined,\n\t\t\t\twidth: item.width,\n\t\t\t\theight: item.height,\n\t\t\t});\n\t\t\tconst arranged = await arrangeFromHeight(\n\t\t\t\tcontext,\n\t\t\t\t[mpd.length - 1],\n\t\t\t\tbottomY\n\t\t\t);\n\t\t\tsetPositionData(context, mpd);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst pd = getPositionData(context);\n\t\tconst len = pd.length;\n\t\tconst index = len - 1;\n\t\tlet renderData;\n\n\t\tconst itemEl = document.createElement(\"div\");\n\t\tif (!isMobile(context)) {\n\t\t\tlet classList = \"limber-grid-view-item\";\n\t\t\tif (options.editable === true) {\n\t\t\t\tclassList = \"limber-grid-view-item limber-grid-view-item-editable\";\n\t\t\t}\n\n\t\t\titemEl.setAttribute(\"class\", classList);\n\t\t\titemEl.setAttribute(\"data-index\", index);\n\t\t\titemEl.style.transform = `translate(${pd[index].x}px, ${pd[index].y}px)`;\n\t\t\titemEl.style.width = `${pd[index].width}px`;\n\t\t\titemEl.style.height = `${pd[index].height}px`;\n\n\t\t\trenderData = callbacks.renderContent(\n\t\t\t\tindex,\n\t\t\t\tpd[index].width,\n\t\t\t\tpd[index].height,\n\t\t\t\t\"isAdd\"\n\t\t\t);\n\t\t} else {\n\t\t\tconst classList =\n\t\t\t\t\"limber-grid-view-item limber-grid-view-item-mobile-view\";\n\n\t\t\titemEl.setAttribute(\"class\", classList);\n\t\t\titemEl.setAttribute(\"data-index\", index);\n\t\t\titemEl.style.width = `${privateConstants.WIDTH}px`;\n\t\t\titemEl.style.height = `${\n\t\t\t\tprivateConstants.WIDTH / publicConstants.MOBILE_ASPECT_RATIO\n\t\t\t}px`;\n\n\t\t\trenderData = callbacks.renderContent(\n\t\t\t\tindex,\n\t\t\t\tprivateConstants.WIDTH,\n\t\t\t\tprivateConstants.WIDTH / publicConstants.MOBILE_ASPECT_RATIO,\n\t\t\t\t\"isAdd\"\n\t\t\t);\n\t\t}\n\n\t\te.$limberGridView.appendChild(itemEl);\n\n\t\trenderItemContent(context, renderData, itemEl);\n\n\t\tset$limberGridViewItems(context, [\n\t\t\t...e.$limberGridView.getElementsByClassName(\"limber-grid-view-item\"),\n\t\t]);\n\n\t\tif (callbacks.addComplete) {\n\t\t\tcallbacks.addComplete(index);\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n\n\tinitializeEvents.call(context);\n};\n\nexport const removeItem = function (context, index) {\n\tconst e = getElements(context);\n\tconst callbacks = getCallbacks(context);\n\tconst pd = getPositionData(context);\n\n\tunInitializeEvents.call(context);\n\n\tpd.splice(index, 1);\n\n\tif (callbacks.removePlugin) {\n\t\tcallbacks.removePlugin(e.$limberGridViewItems[index]);\n\t}\n\n\te.$limberGridView.removeChild(e.$limberGridViewItems[index]);\n\tset$limberGridViewItems(context, [\n\t\t...e.$limberGridView.getElementsByClassName(\"limber-grid-view-item\"),\n\t]);\n\n\tconst len = pd.length;\n\tfor (let i = 0; i < len; i++) {\n\t\te.$limberGridViewItems[i].setAttribute(\"data-index\", i);\n\t}\n\n\tif (callbacks.removeComplete) {\n\t\tcallbacks.removeComplete(index, e.$limberGridViewItems[index]);\n\t}\n\n\t// initializeVariables();\n\tinitializeEvents.call(context);\n};\n\nexport const getSerializedPositionData = (pd) => {\n\tconst len = pd.length;\n\tconst arr = new Array(len);\n\tfor (let i = 0; i < len; i++) {\n\t\tarr[i] = { ...pd[i] };\n\t\tarr[i].index = i;\n\t}\n\n\treturn arr.sort((a, b) => {\n\t\tif (a.y === b.y) {\n\t\t\treturn a.x - b.x;\n\t\t}\n\t\treturn a.y - b.y;\n\t});\n};\n\nexport const renderItemContent = (context, renderData, itemEl) => {\n\tconst callbacks = getCallbacks(context);\n\tif (typeof renderData === \"string\") {\n\t\titemEl.innerHTML = renderData;\n\t} else if (renderData instanceof Element) {\n\t\titemEl.innerHTML = \"\";\n\t\titemEl.appendChild(renderData);\n\t} else if (callbacks.renderPlugin) {\n\t\tcallbacks.renderPlugin(renderData, itemEl);\n\t}\n};\n\n// export const renderPseudoElements = function (_positionData) {\n// \tif (e.$limberGridViewGridPseudoItems != undefined) {\n// \t\tvar length_0 = _positionData.length;\n// \t\tfor (var i = 0; i < length_0; i++) {\n// \t\t\te.$limberGridViewGridPseudoItems[0].parentNode.removeChild(\n// \t\t\t\te.$limberGridViewGridPseudoItems[0]\n// \t\t\t);\n// \t\t}\n// \t\te.$limberGridViewGridPseudoItems = undefined;\n// \t\tset$limberGridViewBodyPseudoItems(undefined);\n// \t}\n\n// \tvar gridHtml = [];\n// \tvar bodyHtml = [];\n\n// \tif (!isMobile()) {\n// \t\tvar length_0 = _positionData.length;\n// \t\tfor (var i = 0; i < length_0; i++) {\n// \t\t\tvar gridFront =\n// \t\t\t\t'<div class = \"limberGridViewGridPseudoItem\" data-index = \"' + i + '\" ';\n// \t\t\tvar bodyFront =\n// \t\t\t\t'<div class = \"limberGridViewBodyPseudoItem\" data-index = \"' + i + '\" ';\n// \t\t\tvar style_1 =\n// \t\t\t\t'style = \"transform : translate(' + _positionData[i].x + \"px, \";\n// \t\t\tvar style_2 = _positionData[i].y + \"px); \";\n// \t\t\tvar style_3 = \"width : \" + _positionData[i].width + \"px; \";\n// \t\t\tvar style_4 = \"height : \" + _positionData[i].height + \"px; \";\n// \t\t\tvar style_5 = '\">';\n\n// \t\t\tvar style = style_1 + style_2 + style_3 + style_4 + style_5;\n\n// \t\t\tvar end = \"</div>\";\n\n// \t\t\tvar gridItem = gridFront + style + end;\n// \t\t\tvar bodyItem = bodyFront + style + end;\n\n// \t\t\tgridHtml.push(gridItem);\n// \t\t\tbodyHtml.push(bodyItem);\n// \t\t}\n// \t} else {\n// \t\tvar length_0 = _positionData.length;\n// \t\tfor (var i = 0; i < length_0; i++) {\n// \t\t\tvar gridFront =\n// \t\t\t\t'<div class = \"limberGridViewGridPseudoItem\" data-index = \"' + i + '\" ';\n// \t\t\tvar bodyFront =\n// \t\t\t\t'<div class = \"limberGridViewBodyPseudoItem\" data-index = \"' + i + '\" ';\n// \t\t\tvar style_1 = 'style = \"transform : translate(' + 0 + \"px, \";\n// \t\t\tvar style_2 =\n// \t\t\t\t(privateConstants.WIDTH / publicConstants.MOBILE_ASPECT_RATIO +\n// \t\t\t\t\tgetMarginAtPoint(serializedPositionData.map[i])) *\n// \t\t\t\t\tserializedPositionData.map[i] +\n// \t\t\t\t\"px); \";\n// \t\t\tvar style_3 = \"width : \" + privateConstants.WIDTH + \"px; \";\n// \t\t\tvar style_4 =\n// \t\t\t\t\"height : \" +\n// \t\t\t\tprivateConstants.WIDTH / publicConstants.MOBILE_ASPECT_RATIO +\n// \t\t\t\t\"px; \";\n// \t\t\tvar style_5 = \"margin : \" + publicConstants.MARGIN + 'px;\">';\n\n// \t\t\tvar style = style_1 + style_2 + style_3 + style_4 + style_5;\n\n// \t\t\tvar end = \"</div>\";\n\n// \t\t\tvar gridItem = gridFront + style + end;\n// \t\t\tvar bodyItem = bodyFront + style + end;\n\n// \t\t\tgridHtml.push(gridItem);\n// \t\t\tbodyHtml.push(bodyItem);\n// \t\t}\n// \t}\n// \tvar limberGridViewMoveGuide = '<div class = \"limberGridViewMoveGuide\"></div>';\n// \tvar limberGridViewHeightAdjustGuide =\n// \t\t'<div class = \"limberGridViewHeightAdjustGuide\"></div>';\n// \tvar limberGridViewAddItemGuide =\n// \t\t'<div class = \"limberGridViewAddItemGuide\"></div>';\n// \tvar limberGridViewAddItemOnTouchHoldGuide =\n// \t\t'<div class = \"limberGridViewAddItemOnTouchHoldGuide\"></div>';\n// \tgridHtml.push(limberGridViewMoveGuide);\n// \tgridHtml.push(limberGridViewHeightAdjustGuide);\n// \tgridHtml.push(limberGridViewAddItemGuide);\n// \tgridHtml.push(limberGridViewAddItemOnTouchHoldGuide);\n\n// \te.$bodyPseudoEl.innerHTML = bodyHtml.join(\"\");\n// \te.$limberGridView[0].insertAdjacentHTML(\"beforeend\", gridHtml.join(\"\"));\n// \tset$limberGridViewGridPseudoItems(\n// \t\te.$limberGridView[0].getElementsByClassName(\"limberGridViewGridPseudoItem\")\n// \t);\n// \tset$limberGridViewBodyPseudoItems(\n// \t\te.$bodyPseudoEl.getElementsByClassName(\"limberGridViewBodyPseudoItem\")\n// \t);\n// \tset$limberGridViewMoveGuide(\n// \t\te.$limberGridView[0].getElementsByClassName(\"limberGridViewMoveGuide\")\n// \t);\n// \tset$limberGridViewHeightAdjustGuide(\n// \t\te.$limberGridView[0].getElementsByClassName(\n// \t\t\t\"limberGridViewHeightAdjustGuide\"\n// \t\t)\n// \t);\n// \tset$limberGridViewAddItemGuide(\n// \t\te.$limberGridView[0].getElementsByClassName(\"limberGridViewAddItemGuide\")\n// \t);\n// \tset$limberGridViewAddItemOnTouchHoldGuide(\n// \t\te.$limberGridView[0].getElementsByClassName(\n// \t\t\t\"limberGridViewAddItemOnTouchHoldGuide\"\n// \t\t)\n// \t);\n// };\n\n// export const renderItems = function (\n// \titems,\n// \tscale = true,\n// \tprocessType = \"onDemand\"\n// ) {\n// \tunInitializeEvents();\n// \tvar scrollTop = e.$limberGridView[0].scrollTop;\n// \tif (scale == true) {\n// \t\tvar WIDTH_SCALE_FACTOR = privateConstants.WIDTH_SCALE_FACTOR;\n// \t} else {\n// \t\tvar WIDTH_SCALE_FACTOR = 1;\n// \t}\n\n// \tvar classList = [\"limberGridViewItem\"];\n// \tif (options.editable == true) {\n// \t\tclassList.push(\"limberGridViewItemEditable\");\n// \t}\n\n// \tvar html = [];\n\n// \t// dev Code\n// \tvar t0 = performance.now();\n// \t// dev Code END\n// \tif (!isMobile()) {\n// \t\te.$limberGridViewContainer[0].removeChild(e.$limberGridView[0]);\n// \t\tvar length_0 = items.length;\n// \t\tfor (var i = 0; i < length_0; i++) {\n// \t\t\tpositionData[items[i]].width *= WIDTH_SCALE_FACTOR;\n// \t\t\tif (positionData[items[i]].width > privateConstants.WIDTH) {\n// \t\t\t\tpositionData[items[i]].width = privateConstants.WIDTH;\n// \t\t\t}\n// \t\t\tvar div = document.createElement(\"div\");\n// \t\t\tvar attribute = document.createAttribute(\"data-index\");\n// \t\t\tattribute.value = items[i];\n// \t\t\tdiv.setAttributeNode(attribute);\n\n// \t\t\tif (classList.length > 0) {\n// \t\t\t\tdiv.classList.add(classList[0]);\n// \t\t\t\tdiv.classList.add(classList[1]);\n// \t\t\t} else {\n// \t\t\t\tdiv.classList.add(classList[0]);\n// \t\t\t}\n\n// \t\t\tdiv.style.transform =\n// \t\t\t\t\"translate(\" +\n// \t\t\t\t(positionData[items[i]].x *= WIDTH_SCALE_FACTOR) +\n// \t\t\t\t\"px, \" +\n// \t\t\t\t(positionData[items[i]].y *= WIDTH_SCALE_FACTOR) +\n// \t\t\t\t\"px)\";\n// \t\t\tdiv.style.width = positionData[items[i]].width + \"px\";\n// \t\t\tdiv.style.height =\n// \t\t\t\t(positionData[items[i]].height *= WIDTH_SCALE_FACTOR) + \"px\";\n\n// \t\t\tvar userData = callbacks.getItemRenderDataCallback(\n// \t\t\t\titems[i],\n// \t\t\t\tpositionData[items[i]].width,\n// \t\t\t\tpositionData[items[i]].height,\n// \t\t\t\tprocessType\n// \t\t\t);\n// \t\t\tif (typeof userData == \"string\") {\n// \t\t\t\tdiv.innerHTML = userData;\n// \t\t\t} else {\n// \t\t\t\tdiv.appendChild(userData);\n// \t\t\t}\n\n// \t\t\tif (\n// \t\t\t\te.$limberGridViewItems[items[i]] == undefined ||\n// \t\t\t\te.$limberGridViewItems[items[i]] == null\n// \t\t\t) {\n// \t\t\t\te.$limberGridView[0].appendChild(div);\n// \t\t\t} else {\n// \t\t\t\te.$limberGridView[0].replaceChild(\n// \t\t\t\t\tdiv,\n// \t\t\t\t\te.$limberGridViewItems[items[i]]\n// \t\t\t\t);\n// \t\t\t}\n// \t\t}\n// \t\te.$limberGridViewContainer[0].appendChild(e.$limberGridView[0]);\n// \t} else {\n// \t\te.$limberGridViewContainer[0].removeChild(e.$limberGridView[0]);\n// \t\tvar length_0 = items.length;\n// \t\tfor (var i = 0; i < length_0; i++) {\n// \t\t\tvar div = document.createElement(\"div\");\n// \t\t\tvar attribute = document.createAttribute(\"data-index\");\n// \t\t\tattribute.value = items[i];\n// \t\t\tdiv.setAttributeNode(attribute);\n\n// \t\t\tdiv.classList.add(\"limberGridViewItem\");\n// \t\t\tdiv.style.transform =\n// \t\t\t\t\"translate(\" +\n// \t\t\t\t0 +\n// \t\t\t\t\"px, \" +\n// \t\t\t\t(privateConstants.WIDTH / publicConstants.MOBILE_ASPECT_RATIO +\n// \t\t\t\t\tgetMarginAtPoint(serializedPositionData.map[items[i]])) *\n// \t\t\t\t\tserializedPositionData.map[items[i]] +\n// \t\t\t\t\"px)\";\n// \t\t\tdiv.style.width = privateConstants.WIDTH + \"px\";\n// \t\t\tdiv.style.height =\n// \t\t\t\tprivateConstants.WIDTH / publicConstants.MOBILE_ASPECT_RATIO + \"px\";\n\n// \t\t\tvar userData = callbacks.getItemRenderDataCallback(\n// \t\t\t\titems[i],\n// \t\t\t\tprivateConstants.WIDTH,\n// \t\t\t\tprivateConstants.WIDTH / publicConstants.MOBILE_ASPECT_RATIO,\n// \t\t\t\tprocessType\n// \t\t\t);\n// \t\t\tif (typeof userData == \"string\") {\n// \t\t\t\tdiv.innerHTML = userData;\n// \t\t\t} else {\n// \t\t\t\tdiv.appendChild(userData);\n// \t\t\t}\n\n// \t\t\tif (\n// \t\t\t\te.$limberGridViewItems[items[i]] == undefined ||\n// \t\t\t\te.$limberGridViewItems[items[i]] == null\n// \t\t\t) {\n// \t\t\t\te.$limberGridView[0].appendChild(div);\n// \t\t\t} else {\n// \t\t\t\te.$limberGridView[0].replaceChild(\n// \t\t\t\t\tdiv,\n// \t\t\t\t\te.$limberGridViewItems[items[i]]\n// \t\t\t\t);\n// \t\t\t}\n// \t\t}\n// \t\te.$limberGridViewContainer[0].appendChild(e.$limberGridView[0]);\n// \t}\n\n// \t// dev Code\n// \tvar t1 = performance.now();\n// \tconsole.log(t0);\n// \tconsole.log(t1);\n// \tconsole.log(t1 - t0);\n// \t// dev Code END\n// \te.$limberGridViewItems = e.$limberGridView[0].querySelectorAll(\n// \t\t\".limberGridViewItem\"\n// \t);\n\n// \trenderPseudoItems(items);\n\n// \tinitializeVariables();\n// \tinitializeEvents();\n\n// \tvar renderDetails = {\n// \t\titems: JSON.parse(JSON.stringify(items)),\n// \t\tscale: scale,\n// \t\tprocessType: processType,\n// \t};\n\n// \tif (\n// \t\tcallbacks.itemsRenderComplete != undefined &&\n// \t\tcallbacks.itemsRenderComplete != null &&\n// \t\tprocessType != \"addItems\" &&\n// \t\tprocessType != \"resizeItems\" &&\n// \t\tprocessType != \"removeItems\" &&\n// \t\tprocessType != \"addItemInteractive\"\n// \t) {\n// \t\te.$limberGridView[0].scrollTop = scrollTop;\n// \t\tcallbacks.itemsRenderComplete(\n// \t\t\trenderDetails.items,\n// \t\t\tscale,\n// \t\t\tprocessType,\n// \t\t\tscrollTop\n// \t\t);\n// \t}\n\n// \treturn renderDetails;\n// };\n\n// export const renderPseudoItems = function (items) {\n// \tvar gridHtml = [];\n// \tvar bodyHtml = [];\n\n// \tif (!isMobile()) {\n// \t\te.$limberGridViewContainer[0].removeChild(e.$limberGridView[0]);\n// \t\te.$body[0].removeChild(e.$bodyPseudoEl);\n// \t\tvar length_0 = items.length;\n// \t\tfor (var i = 0; i < length_0; i++) {\n// \t\t\tvar divGrid = document.createElement(\"div\");\n// \t\t\tvar attributeGrid = document.createAttribute(\"data-index\");\n// \t\t\tattributeGrid.value = items[i];\n// \t\t\tdivGrid.setAttributeNode(attributeGrid);\n// \t\t\tdivGrid.classList.add(\"limberGridViewGridPseudoItem\");\n// \t\t\tdivGrid.style.transform =\n// \t\t\t\t\"translate(\" +\n// \t\t\t\tpositionData[items[i]].x +\n// \t\t\t\t\"px, \" +\n// \t\t\t\tpositionData[items[i]].y +\n// \t\t\t\t\"px)\";\n// \t\t\tdivGrid.style.width = positionData[items[i]].width + \"px\";\n// \t\t\tdivGrid.style.height = positionData[items[i]].height + \"px\";\n\n// \t\t\tvar divBody = document.createElement(\"div\");\n// \t\t\tvar attributeBody = document.createAttribute(\"data-index\");\n// \t\t\tattributeBody.value = items[i];\n// \t\t\tdivBody.setAttributeNode(attributeBody);\n// \t\t\tdivBody.classList.add(\"limberGridViewBodyPseudoItem\");\n// \t\t\tdivBody.style.transform = \"translate(\" + 0 + \"px, \" + 0 + \"px)\";\n// \t\t\tdivBody.style.width = positionData[items[i]].width + \"px\";\n// \t\t\tdivBody.style.height = positionData[items[i]].height + \"px\";\n\n// \t\t\tif (\n// \t\t\t\te.$limberGridViewGridPseudoItems[items[i]] == undefined ||\n// \t\t\t\te.$limberGridViewGridPseudoItems[items[i]] == null\n// \t\t\t) {\n// \t\t\t\te.$limberGridView[0].appendChild(divGrid);\n// \t\t\t\te.$bodyPseudoEl.appendChild(divBody);\n// \t\t\t} else {\n// \t\t\t\te.$limberGridView[0].replaceChild(\n// \t\t\t\t\tdivGrid,\n// \t\t\t\t\te.$limberGridViewGridPseudoItems[items[i]]\n// \t\t\t\t);\n// \t\t\t\te.$bodyPseudoEl.replaceChild(\n// \t\t\t\t\tdivBody,\n// \t\t\t\t\te.$limberGridViewBodyPseudoItems[items[i]]\n// \t\t\t\t);\n// \t\t\t}\n// \t\t}\n// \t\te.$limberGridViewContainer[0].appendChild(e.$limberGridView[0]);\n// \t\te.$body[0].appendChild(e.$bodyPseudoEl);\n// \t} else {\n// \t\te.$limberGridViewContainer[0].removeChild(e.$limberGridView[0]);\n// \t\te.$body[0].removeChild(e.$bodyPseudoEl);\n// \t\tvar length_0 = items.length;\n// \t\tfor (var i = 0; i < length_0; i++) {\n// \t\t\tvar divGrid = document.createElement(\"div\");\n// \t\t\tvar attributeGrid = document.createAttribute(\"data-index\");\n// \t\t\tattributeGrid.value = items[i];\n// \t\t\tdivGrid.setAttributeNode(attributeGrid);\n// \t\t\tdivGrid.classList.add(\"limberGridViewGridPseudoItem\");\n// \t\t\tdivGrid.style.transform =\n// \t\t\t\t\"translate(\" +\n// \t\t\t\t0 +\n// \t\t\t\t\"px, \" +\n// \t\t\t\t(privateConstants.WIDTH / publicConstants.MOBILE_ASPECT_RATIO +\n// \t\t\t\t\tgetMarginAtPoint(serializedPositionData.map[i])) *\n// \t\t\t\t\tserializedPositionData.map[i] +\n// \t\t\t\t\"px)\";\n// \t\t\tdivGrid.style.width = privateConstants.WIDTH + \"px\";\n// \t\t\tdivGrid.style.height =\n// \t\t\t\tprivateConstants.WIDTH / publicConstants.MOBILE_ASPECT_RATIO + \"px\";\n\n// \t\t\tvar divBody = document.createElement(\"div\");\n// \t\t\tvar attributeBody = document.createAttribute(\"data-index\");\n// \t\t\tattributeBody.value = items[i];\n// \t\t\tdivBody.setAttributeNode(attributeBody);\n// \t\t\tdivBody.classList.add(\"limberGridViewBodyPseudoItem\");\n// \t\t\tdivBody.style.transform = \"translate(\" + 0 + \"px, \" + 0 + \"px)\";\n// \t\t\tdivBody.style.width = privateConstants.WIDTH + \"px\";\n// \t\t\tdivBody.style.height =\n// \t\t\t\tprivateConstants.WIDTH / publicConstants.MOBILE_ASPECT_RATIO + \"px\";\n\n// \t\t\tif (\n// \t\t\t\te.$limberGridViewGridPseudoItems[items[i]] == undefined ||\n// \t\t\t\te.$limberGridViewGridPseudoItems[items[i]] == null\n// \t\t\t) {\n// \t\t\t\te.$limberGridView[0].appendChild(divGrid);\n// \t\t\t\te.$bodyPseudoEl.appendChild(divBody);\n// \t\t\t} else {\n// \t\t\t\te.$limberGridView[0].replaceChild(\n// \t\t\t\t\tdivGrid,\n// \t\t\t\t\te.$limberGridViewGridPseudoItems[items[i]]\n// \t\t\t\t);\n// \t\t\t\te.$bodyPseudoEl.replaceChild(\n// \t\t\t\t\tdivBody,\n// \t\t\t\t\te.$limberGridViewBodyPseudoItems[items[i]]\n// \t\t\t\t);\n// \t\t\t}\n// \t\t}\n// \t\te.$limberGridViewContainer[0].appendChild(e.$limberGridView[0]);\n// \t\te.$body[0].appendChild(e.$bodyPseudoEl);\n// \t}\n\n// \tset$limberGridViewGridPseudoItems(\n// \t\te.$limberGridView[0].getElementsByClassName(\"limberGridViewGridPseudoItem\")\n// \t);\n// \te.$limberGridViewBodyPseudoItems = e.$bodyPseudoEl.getElementsByClassName(\n// \t\t\"limberGridViewBodyPseudoItem\"\n// \t);\n// };\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nimport { isValidRectCoForm, getCoordinates } from \"../rect/rectUtils\";\nimport { getItemDimenWithMargin } from \"../arrange/arrangeUtils\";\nimport getPrivateConstants from \"../../store/constants/privateConstants\";\nimport { getPositionData } from \"../../store/variables/essentials\";\n\nexport const checkPositionData = (pd) => {\n\tif (Array.isArray(pd)) {\n\t\tconst len = pd.length;\n\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tif (\n\t\t\t\t!pd[i] ||\n\t\t\t\tisNaN(pd[i].x) ||\n\t\t\t\tpd[i].x < 0 ||\n\t\t\t\tisNaN(pd[i].y) ||\n\t\t\t\tpd[i].y < 0 ||\n\t\t\t\tisNaN(pd[i].height) ||\n\t\t\t\tpd[i].height <= 0 ||\n\t\t\t\tisNaN(pd[i].width) ||\n\t\t\t\tpd[i].width <= 0\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!isValidRectCoForm(getCoordinates(pd[i]))) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n};\n\nexport const getPdBottomMax = (context) => {\n\tconst pd = getPositionData(context);\n\tconst privateConstants = getPrivateConstants(context);\n\n\tlet max = privateConstants.MARGIN;\n\tlet item;\n\tconst len = pd.length;\n\n\tfor (let i = 0; i < len; i++) {\n\t\titem = getItemDimenWithMargin(privateConstants.MARGIN, pd[i]);\n\t\tif (item.y + item.height > max) {\n\t\t\tmax = item.y + item.height;\n\t\t}\n\t}\n\n\treturn max;\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nimport {\n\t// getMarginAtPoint,\n\tadjustHeight,\n\tadjustScroll,\n} from \"../utils/essentials\";\nimport { getItemDimenWithMargin } from \"../utils/utils\";\n// import {\n// \tisPlaneBInsidePlaneA_TouchingIsInside,\n// \tshiftItemsUp,\n// } from \"../calc/calcUtils\";\nimport { doRectsOverlap, doRectsOnlyTouch } from \"../rect/rectUtils\";\nimport getPublicConstants from \"../../store/constants/publicConstants\";\nimport getPrivateConstants from \"../../store/constants/privateConstants\";\nimport {\n\tgetCallbacks,\n\tgetPositionData,\n} from \"../../store/variables/essentials\";\nimport getElements from \"../../store/variables/elements\";\nimport { calculateTouchPosOnDesk } from \"./eventHandlerUtils.js\";\nimport { loadInitState, unloadInitState } from \"./deskInteractionUtils.js\";\nimport {\n\tshiftItemsUp,\n\taddItemAllowCheck,\n\tcutSpaceAllowCheck,\n} from \"../arrange/arrangeUtils\";\nimport {\n\tinitializeItemTouchEvents,\n\tunInitializeItemTouchEvents,\n} from \"./initializers\";\nimport { getBindedFunctions } from \"../../store/variables/bindedFunctions\";\nimport { getDeskInteractionVars } from \"../../store/variables/eventSpecific\";\nimport { addItem } from \"../renderers/renderers\";\n// import { addItemsAtPositions } from \"../renderers/addOrRemoveItems\";\n\n// let userActionData = {};\n// let mouseDownCancel = false;\n// // let limberGridMouseDownCancel = false;\n// let mouseDownTimerComplete = false;\n// // let limberGridMouseDownTimerComplete = false;\n// let tapHoldCancel = false;\n// // let limberGridTouchStartCancel = false;\n// let tapHoldTimerComplete = false;\n// // let limberGridTouchStartTimerComplete = false;\n// let longPressCheck;\n// // let limberGridMouseDownCheckTimeOutVariable;\n// let longTouchCheck;\n// // let limberGridTouchStartCheckTimeOutVariable;\n// let addItemAllowCheckTimeOutVariable;\n// let cutSpaceAllowCheckTimeOutVariable;\n\nexport const onDeskMouseDown = function (event) {\n\tconst e = getElements(this);\n\tconst publicConstants = getPublicConstants(this);\n\n\tconst dkiv = getDeskInteractionVars(this);\n\tconst bf = getBindedFunctions(this);\n\n\tif (event.target.classList.contains(\"limber-grid-view\")) {\n\t\tevent.stopPropagation();\n\t} else {\n\t\treturn;\n\t}\n\n\tif (event.which !== 1) {\n\t\treturn;\n\t}\n\n\tdkiv.mouseDownCancel = false;\n\tdkiv.mouseDownTimerComplete = false;\n\n\tclearTimeout(dkiv.longPressCheck);\n\tdkiv.longPressCheck = setTimeout(\n\t\tmouseDownCheck.bind(this, event, event.offsetX, event.offsetY),\n\t\tpublicConstants.MOUSE_DOWN_TIME\n\t);\n\n\te.$limberGridView.addEventListener(\"mousemove\", bf.onDeskMouseMove);\n\tdocument.addEventListener(\"mouseup\", bf.onDeskMouseUp);\n\tdocument.addEventListener(\"contextmenu\", bf.onDeskContextMenu);\n};\n\nexport const onDeskTouchStart = function (event) {\n\tconst e = getElements(this);\n\tconst publicConstants = getPublicConstants(this);\n\n\tconst dkiv = getDeskInteractionVars(this);\n\tconst bf = getBindedFunctions(this);\n\n\tif (!event.target.classList.contains(\"limber-grid-view\")) {\n\t\treturn;\n\t}\n\n\tif (event.touches.length !== 1) {\n\t\t// onDeskContextMenu.call(this, event);\n\t\treturn;\n\t}\n\n\t// if (event.target.classList.contains(\"limber-grid-view\")) {\n\t// \tevent.stopPropagation();\n\t// } else {\n\t// \treturn;\n\t// }\n\n\tif (event.which !== 0) {\n\t\t// onDeskContextMenu.call(this, event);\n\t\treturn;\n\t}\n\n\tdkiv.tapHoldCancel = false;\n\tdkiv.tapHoldTimerComplete = false;\n\n\te.$limberGridView.addEventListener(\"touchmove\", bf.onDeskTouchMove);\n\tdocument.addEventListener(\"touchend\", bf.onDeskTouchEnd);\n\tdocument.addEventListener(\"touchcancel\", bf.onDeskTouchCancel);\n\tdocument.addEventListener(\"contextmenu\", bf.onDeskTouchContextMenu);\n\tunInitializeItemTouchEvents.call(this);\n\n\tclearTimeout(dkiv.longTouchCheck);\n\tdkiv.longTouchCheck = setTimeout(\n\t\ttapHoldCheck.bind(this, event),\n\t\tpublicConstants.TOUCH_HOLD_TIME\n\t);\n\n\tevent.stopPropagation();\n};\n\n// onLimberGridMouseDownCheck\nexport const mouseDownCheck = function (event, offsetX, offsetY) {\n\tconst e = getElements(this);\n\tconst privateConstants = getPrivateConstants(this);\n\n\tconst dkiv = getDeskInteractionVars(this);\n\n\tif (dkiv.mouseDownCancel === false) {\n\t\tdkiv.mouseDownTimerComplete = true;\n\n\t\tvar scrollTop = e.$limberGridView.scrollTop;\n\t\tvar scrollLeft = e.$limberGridView.scrollLeft;\n\t\tvar x = offsetX + scrollLeft - privateConstants.PADDING_LEFT;\n\t\tvar y = offsetY + scrollTop - privateConstants.PADDING_TOP;\n\n\t\tdkiv.userActionData = {\n\t\t\ttype: \"add\",\n\t\t\taddPositionX: x,\n\t\t\taddPositionY: y,\n\t\t};\n\n\t\te.$limberGridViewAddCutGuide.style.height = 1 + \"px\";\n\t\te.$limberGridViewAddCutGuide.style.width = 1 + \"px\";\n\t\te.$limberGridViewAddCutGuide.style.transform = `translate(${x}px, ${y}px)`;\n\t\te.$limberGridViewAddCutGuide.setAttribute(\"data-after\", `w: 0px, h: 0px`);\n\n\t\tloadInitState(this);\n\t} else {\n\t\t// mouseDown cancel before TimerComplete\n\t}\n};\n\n// onLimberGridTouchStartCheck\nexport const tapHoldCheck = function (event) {\n\tconst e = getElements(this);\n\n\tconst dkiv = getDeskInteractionVars(this);\n\n\tif (dkiv.tapHoldCancel === false) {\n\t\tdkiv.tapHoldTimerComplete = true;\n\n\t\tvar touchPositionOnLimberGrid = calculateTouchPosOnDesk(this, event);\n\n\t\tvar x = touchPositionOnLimberGrid.x;\n\t\tvar y = touchPositionOnLimberGrid.y;\n\n\t\tdkiv.userActionData = {\n\t\t\ttype: \"add\",\n\t\t\taddPositionX: x,\n\t\t\taddPositionY: y,\n\t\t};\n\n\t\tvar removeAddItemOnTouchHoldGuideFunction = function () {\n\t\t\te.$limberGridViewTouchHoldGuide.classList.remove(\n\t\t\t\t\"limber-grid-view-touch-hold-guide-active\"\n\t\t\t);\n\t\t};\n\t\tsetTimeout(removeAddItemOnTouchHoldGuideFunction.bind(this), 500);\n\n\t\te.$limberGridViewAddCutGuide.style.height = 1 + \"px\";\n\t\te.$limberGridViewAddCutGuide.style.width = 1 + \"px\";\n\t\te.$limberGridViewAddCutGuide.style.transform = `translate(${x}px, ${y}px)`;\n\t\te.$limberGridViewAddCutGuide.setAttribute(\"data-after\", `w: 0px, h: 0px`);\n\n\t\tloadInitState(this);\n\n\t\te.$limberGridViewTouchHoldGuide.style.transform = `translate(${x}px, ${y}px)`;\n\t\te.$limberGridViewTouchHoldGuide.classList.add(\n\t\t\t\"limber-grid-view-touch-hold-guide-active\"\n\t\t);\n\n\t\tevent.preventDefault();\n\t} else {\n\t\t// touchstart cancel before TimerComplete\n\t}\n};\n\nexport const onDeskMouseMove = function (event) {\n\tconst e = getElements(this);\n\tconst privateConstants = getPrivateConstants(this);\n\tconst publicConstants = getPublicConstants(this);\n\n\tconst dkiv = getDeskInteractionVars(this);\n\tconst bf = getBindedFunctions(this);\n\n\tif (dkiv.mouseDownTimerComplete === true) {\n\t\te.$limberGridViewAddCutGuide.classList.remove(\n\t\t\t\"limber-grid-view-add-cut-guide-allow\",\n\t\t\t\"limber-grid-view-add-cut-guide-disallow\"\n\t\t);\n\n\t\tconst scrollTop = e.$limberGridView.scrollTop;\n\t\tconst scrollLeft = e.$limberGridView.scrollLeft;\n\n\t\tconst x = dkiv.userActionData.addPositionX;\n\t\tconst y = dkiv.userActionData.addPositionY;\n\n\t\tconst newWidth =\n\t\t\tevent.offsetX - x + scrollLeft - privateConstants.PADDING_LEFT;\n\t\tconst newHeight =\n\t\t\tevent.offsetY - y + scrollTop - privateConstants.PADDING_TOP;\n\n\t\tdkiv.userActionData.newWidth = newWidth;\n\t\tdkiv.userActionData.newHeight = newHeight;\n\n\t\tconst yMousePosition = event.offsetY + scrollTop;\n\t\tadjustHeight(this, yMousePosition);\n\n\t\tif (newWidth > 0 && newHeight > 0) {\n\t\t\te.$limberGridViewAddCutGuide.style.width = newWidth + \"px\";\n\t\t\te.$limberGridViewAddCutGuide.style.height = newHeight + \"px\";\n\t\t\te.$limberGridViewAddCutGuide.setAttribute(\n\t\t\t\t\"data-after\",\n\t\t\t\t`w: ${parseInt(newWidth)}px, h: ${parseInt(newHeight)}px`\n\t\t\t);\n\t\t}\n\n\t\tif (publicConstants.DESK_INTERACTION_MODE === \"ADD\") {\n\t\t\tclearTimeout(dkiv.addItemAllowCheckTimeOutVariable);\n\t\t\tdkiv.addItemAllowCheckTimeOutVariable = setTimeout(\n\t\t\t\taddItemAllowCheckTimeOut.bind(\n\t\t\t\t\tthis,\n\t\t\t\t\tdkiv.userActionData.addPositionX,\n\t\t\t\t\tdkiv.userActionData.addPositionY,\n\t\t\t\t\tnewWidth,\n\t\t\t\t\tnewHeight\n\t\t\t\t),\n\t\t\t\tpublicConstants.DEMO_WAIT_TIME\n\t\t\t);\n\t\t} else if (publicConstants.DESK_INTERACTION_MODE === \"CUTSPACE\") {\n\t\t\tclearTimeout(dkiv.cutSpaceAllowCheckTimeOutVariable);\n\t\t\tdkiv.cutSpaceAllowCheckTimeOutVariable = setTimeout(\n\t\t\t\tcutSpaceAllowCheckTimeOut.bind(\n\t\t\t\t\tthis,\n\t\t\t\t\tdkiv.userActionData.addPositionX,\n\t\t\t\t\tdkiv.userActionData.addPositionY,\n\t\t\t\t\tnewWidth,\n\t\t\t\t\tnewHeight\n\t\t\t\t),\n\t\t\t\tpublicConstants.DEMO_WAIT_TIME\n\t\t\t);\n\t\t}\n\t} else {\n\t\tonDeskContextMenu.call(this, event);\n\n\t\t// clearTimeout(dkiv.longPressCheck);\n\n\t\t// e.$limberGridView.removeEventListener(\"mousemove\", bf.onDeskMouseMove);\n\t\t// document.removeEventListener(\"mouseup\", bf.onDeskMouseUp);\n\t\t// document.removeEventListener(\"contextmenu\", bf.onDeskContextMenu);\n\t}\n\tevent.stopPropagation();\n};\n\nexport const onDeskTouchMove = function (event) {\n\tconst e = getElements(this);\n\tconst privateConstants = getPrivateConstants(this);\n\tconst publicConstants = getPublicConstants(this);\n\n\tconst dkiv = getDeskInteractionVars(this);\n\tconst bf = getBindedFunctions(this);\n\n\tif (dkiv.tapHoldTimerComplete === true && event.touches.length === 1) {\n\t\te.$limberGridViewAddCutGuide.classList.remove(\n\t\t\t\"limber-grid-view-add-cut-guide-allow\",\n\t\t\t\"limber-grid-view-add-cut-guide-disallow\"\n\t\t);\n\n\t\tconst scrollTop = e.$limberGridView.scrollTop;\n\t\tconst scrollLeft = e.$limberGridView.scrollLeft;\n\n\t\tconst x = dkiv.userActionData.addPositionX;\n\t\tconst y = dkiv.userActionData.addPositionY;\n\n\t\tconst touchPositionOnLimberGrid = calculateTouchPosOnDesk(this, event);\n\n\t\tconst newWidth = touchPositionOnLimberGrid.x - x;\n\t\tconst newHeight = touchPositionOnLimberGrid.y - y;\n\n\t\tif (touchPositionOnLimberGrid !== false) {\n\t\t\tdkiv.userActionData.newWidth = newWidth;\n\t\t\tdkiv.userActionData.newHeight = newHeight;\n\n\t\t\tif (newWidth > 0 && newHeight > 0) {\n\t\t\t\te.$limberGridViewAddCutGuide.style.width = newWidth + \"px\";\n\t\t\t\te.$limberGridViewAddCutGuide.style.height = newHeight + \"px\";\n\t\t\t\te.$limberGridViewAddCutGuide.setAttribute(\n\t\t\t\t\t\"data-after\",\n\t\t\t\t\t`w: ${parseInt(newWidth)}px, h: ${parseInt(newHeight)}px`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (touchPositionOnLimberGrid !== false) {\n\t\t\tconst limberGridViewBoundingClientRect = e.$limberGridView.getBoundingClientRect();\n\t\t\tconst limberGridViewWidthVisibleWidth =\n\t\t\t\te.$limberGridView.offsetWidth - limberGridViewBoundingClientRect.left;\n\t\t\tconst limberGridViewHeightVisibleHeight =\n\t\t\t\te.$limberGridView.offsetHeight - limberGridViewBoundingClientRect.top;\n\t\t\tconst limberGridViewOnVisibleAreaX =\n\t\t\t\ttouchPositionOnLimberGrid.x +\n\t\t\t\tprivateConstants.PADDING_LEFT -\n\t\t\t\tscrollLeft;\n\t\t\tconst limberGridViewOnVisibleAreaY =\n\t\t\t\ttouchPositionOnLimberGrid.y + privateConstants.PADDING_TOP - scrollTop;\n\n\t\t\tconst yTouchPosition = touchPositionOnLimberGrid.y;\n\t\t\tadjustHeight(this, yTouchPosition);\n\n\t\t\tconst programScrolled = adjustScroll(\n\t\t\t\tthis,\n\t\t\t\tlimberGridViewOnVisibleAreaY,\n\t\t\t\tlimberGridViewHeightVisibleHeight\n\t\t\t);\n\n\t\t\tif (publicConstants.DESK_INTERACTION_MODE === \"ADD\") {\n\t\t\t\tclearTimeout(dkiv.addItemAllowCheckTimeOutVariable);\n\t\t\t\tif (programScrolled !== true) {\n\t\t\t\t\tdkiv.addItemAllowCheckTimeOutVariable = setTimeout(\n\t\t\t\t\t\taddItemAllowCheckTimeOut.bind(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tdkiv.userActionData.addPositionX,\n\t\t\t\t\t\t\tdkiv.userActionData.addPositionY,\n\t\t\t\t\t\t\tnewWidth,\n\t\t\t\t\t\t\tnewHeight\n\t\t\t\t\t\t),\n\t\t\t\t\t\tpublicConstants.DEMO_WAIT_TIME\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else if (publicConstants.DESK_INTERACTION_MODE === \"CUTSPACE\") {\n\t\t\t\tclearTimeout(dkiv.cutSpaceAllowCheckTimeOutVariable);\n\t\t\t\tif (programScrolled !== true) {\n\t\t\t\t\tdkiv.cutSpaceAllowCheckTimeOutVariable = setTimeout(\n\t\t\t\t\t\tcutSpaceAllowCheckTimeOut.bind(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tdkiv.userActionData.addPositionX,\n\t\t\t\t\t\t\tdkiv.userActionData.addPositionY,\n\t\t\t\t\t\t\tnewWidth,\n\t\t\t\t\t\t\tnewHeight\n\t\t\t\t\t\t),\n\t\t\t\t\t\tpublicConstants.DEMO_WAIT_TIME\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.preventDefault();\n\t} else {\n\t\tonDeskContextMenu.call(this);\n\t\t// clearTimeout(dkiv.longTouchCheck);\n\n\t\t// e.$limberGridView.removeEventListener(\"touchmove\", bf.onDeskTouchMove);\n\t\t// document.removeEventListener(\"touchend\", bf.onDeskTouchEnd);\n\t\t// document.removeEventListener(\"touchcancel\", bf.onDeskTouchCancel);\n\t\t// document.removeEventListener(\"contextmenu\", bf.onDeskTouchContextMenu);\n\t\t// initializeItemTouchEvents.call(this);\n\t}\n\n\tevent.stopPropagation();\n};\n\nexport const onDeskMouseUp = function (event) {\n\tconst e = getElements(this);\n\tconst publicConstants = getPublicConstants(this);\n\n\tconst dkiv = getDeskInteractionVars(this);\n\n\tclearTimeout(dkiv.addItemAllowCheckTimeOutVariable);\n\tclearTimeout(dkiv.longPressCheck);\n\tvar itemAddedFlag = false;\n\tif (dkiv.mouseDownTimerComplete === true) {\n\t\tif (publicConstants.DESK_INTERACTION_MODE === \"ADD\") {\n\t\t\tif (\n\t\t\t\taddItemAllowCheck(\n\t\t\t\t\tthis,\n\t\t\t\t\tdkiv.userActionData.addPositionX,\n\t\t\t\t\tdkiv.userActionData.addPositionY,\n\t\t\t\t\tdkiv.userActionData.newWidth,\n\t\t\t\t\tdkiv.userActionData.newHeight\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tvar item = {\n\t\t\t\t\tx: dkiv.userActionData.addPositionX,\n\t\t\t\t\ty: dkiv.userActionData.addPositionY,\n\t\t\t\t\twidth: dkiv.userActionData.newWidth,\n\t\t\t\t\theight: dkiv.userActionData.newHeight,\n\t\t\t\t};\n\n\t\t\t\tvar scrollTop = e.$limberGridView.scrollTop;\n\n\t\t\t\tvar renderDetails = addItem(this, item, false, \"addItemInteractive\");\n\t\t\t\titemAddedFlag = true;\n\n\t\t\t\te.$limberGridView.scrollTop = scrollTop;\n\t\t\t}\n\t\t} else if (publicConstants.DESK_INTERACTION_MODE === \"CUTSPACE\") {\n\t\t\tconst cutDetails = cutSpaceAllowCheck(\n\t\t\t\tthis,\n\t\t\t\tdkiv.userActionData.addPositionX,\n\t\t\t\tdkiv.userActionData.addPositionY,\n\t\t\t\tdkiv.userActionData.newWidth,\n\t\t\t\tdkiv.userActionData.newHeight\n\t\t\t);\n\t\t\tif (cutDetails) {\n\t\t\t\tshiftItemsUp(\n\t\t\t\t\tthis,\n\t\t\t\t\tcutDetails.y,\n\t\t\t\t\tcutDetails.shiftHeight\n\t\t\t\t\t// dkiv.userActionData.addPositionY,\n\t\t\t\t\t// dkiv.userActionData.newHeight\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tdkiv.mouseDownCancel = true;\n\t}\n\tonDeskContextMenu.call(this);\n\tevent.stopPropagation();\n};\n\nexport const onDeskTouchEnd = function (event) {\n\tconst e = getElements(this);\n\tconst publicConstants = getPublicConstants(this);\n\n\tconst dkiv = getDeskInteractionVars(this);\n\n\tclearTimeout(dkiv.addItemAllowCheckTimeOutVariable);\n\tclearTimeout(dkiv.longTouchCheck);\n\tvar itemAddedFlag = false;\n\tif (dkiv.tapHoldTimerComplete === true && event.touches.length === 0) {\n\t\tif (publicConstants.DESK_INTERACTION_MODE === \"ADD\") {\n\t\t\tif (\n\t\t\t\taddItemAllowCheck(\n\t\t\t\t\tthis,\n\t\t\t\t\tdkiv.userActionData.addPositionX,\n\t\t\t\t\tdkiv.userActionData.addPositionY,\n\t\t\t\t\tdkiv.userActionData.newWidth,\n\t\t\t\t\tdkiv.userActionData.newHeight\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tvar item = {\n\t\t\t\t\tx: dkiv.userActionData.addPositionX,\n\t\t\t\t\ty: dkiv.userActionData.addPositionY,\n\t\t\t\t\twidth: dkiv.userActionData.newWidth,\n\t\t\t\t\theight: dkiv.userActionData.newHeight,\n\t\t\t\t};\n\n\t\t\t\tvar scrollTop = e.$limberGridView.scrollTop;\n\n\t\t\t\tvar renderDetails = addItem(this, item, false, \"addItemInteractive\");\n\t\t\t\titemAddedFlag = true;\n\n\t\t\t\te.$limberGridView.scrollTop = scrollTop;\n\t\t\t}\n\t\t} else if (publicConstants.DESK_INTERACTION_MODE === \"CUTSPACE\") {\n\t\t\tconst cutDetails = cutSpaceAllowCheck(\n\t\t\t\tthis,\n\t\t\t\tdkiv.userActionData.addPositionX,\n\t\t\t\tdkiv.userActionData.addPositionY,\n\t\t\t\tdkiv.userActionData.newWidth,\n\t\t\t\tdkiv.userActionData.newHeight\n\t\t\t);\n\t\t\tif (cutDetails) {\n\t\t\t\tshiftItemsUp(\n\t\t\t\t\tthis,\n\t\t\t\t\tcutDetails.y,\n\t\t\t\t\tcutDetails.shiftHeight\n\t\t\t\t\t// dkiv.userActionData.addPositionY,\n\t\t\t\t\t// dkiv.userActionData.newHeight\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tdkiv.tapHoldCancel = true;\n\t}\n\t// dkiv.tapHoldTimerComplete = false;\n\tonDeskContextMenu.call(this);\n\t// initializeItemTouchEvents.call(this);\n\n\tevent.stopPropagation();\n};\n\nexport const onDeskTouchCancel = function (event) {\n\t// const dkiv = getDeskInteractionVars(this);\n\n\t// dkiv.tapHoldCancel = false;\n\t// dkiv.tapHoldTimerComplete = false;\n\tonDeskContextMenu.call(this);\n\t// initializeItemTouchEvents.call(this);\n\n\t// event.stopPropagation();\n};\n\nexport const onDeskTouchContextMenu = function (event) {\n\tevent.preventDefault();\n\t// onDeskContextMenu.call(this, event);\n};\n\nexport const onDeskContextMenu = function (event) {\n\tconst e = getElements(this);\n\n\tconst dkiv = getDeskInteractionVars(this);\n\tconst bf = getBindedFunctions(this);\n\n\tclearTimeout(dkiv.addItemAllowCheckTimeOutVariable);\n\tclearTimeout(dkiv.cutSpaceAllowCheckTimeOutVariable);\n\tclearTimeout(dkiv.longPressCheck);\n\tclearTimeout(dkiv.longTouchCheck);\n\tunloadInitState(this);\n\n\te.$limberGridView.removeEventListener(\"mousemove\", bf.onDeskMouseMove);\n\tdocument.removeEventListener(\"mouseup\", bf.onDeskMouseUp);\n\tdocument.removeEventListener(\"contextmenu\", bf.onDeskContextMenu);\n\n\te.$limberGridView.removeEventListener(\"touchmove\", bf.onDeskTouchMove);\n\tdocument.removeEventListener(\"touchend\", bf.onDeskTouchEnd);\n\tdocument.removeEventListener(\"touchcancel\", bf.onDeskTouchCancel);\n\tdocument.removeEventListener(\"contextmenu\", bf.onDeskTouchContextMenu);\n\n\tinitializeItemTouchEvents.call(this);\n\n\tdkiv.userActionData = {};\n\n\tif (event) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t}\n};\n\nexport const addItemAllowCheckTimeOut = function (x, y, width, height) {\n\tconst e = getElements(this);\n\n\tif (addItemAllowCheck(this, x, y, width, height) === false) {\n\t\te.$limberGridViewAddCutGuide.classList.remove(\n\t\t\t\"limber-grid-view-add-cut-guide-allow\"\n\t\t);\n\t\te.$limberGridViewAddCutGuide.classList.add(\n\t\t\t\"limber-grid-view-add-cut-guide-disallow\"\n\t\t);\n\t} else {\n\t\te.$limberGridViewAddCutGuide.classList.remove(\n\t\t\t\"limber-grid-view-add-cut-guide-disallow\"\n\t\t);\n\t\te.$limberGridViewAddCutGuide.classList.add(\n\t\t\t\"limber-grid-view-add-cut-guide-allow\"\n\t\t);\n\t}\n};\n\nexport const cutSpaceAllowCheckTimeOut = function (x, y, width, height) {\n\tconst e = getElements(this);\n\n\tif (cutSpaceAllowCheck(this, x, y, width, height) === false) {\n\t\te.$limberGridViewAddCutGuide.classList.remove(\n\t\t\t\"limber-grid-view-add-cut-guide-allow\"\n\t\t);\n\t\te.$limberGridViewAddCutGuide.classList.add(\n\t\t\t\"limber-grid-view-add-cut-guide-disallow\"\n\t\t);\n\t} else {\n\t\te.$limberGridViewAddCutGuide.classList.remove(\n\t\t\t\"limber-grid-view-add-cut-guide-disallow\"\n\t\t);\n\t\te.$limberGridViewAddCutGuide.classList.add(\n\t\t\t\"limber-grid-view-add-cut-guide-allow\"\n\t\t);\n\t}\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nimport {\n\tdoRectsOverlap,\n\tdoRectsOnlyTouch,\n\tisPointInsideRect,\n\tdoesPointTouchRect,\n} from \"../rect/rectUtils\";\nimport getPublicConstants, {\n\tgetPublicConstantByName,\n} from \"../../store/constants/publicConstants\";\nimport getPrivateConstants from \"../../store/constants/privateConstants\";\nimport {\n\tgetPositionData,\n\tgetModifiedPositionData,\n\tsetModifiedPositionData,\n} from \"../../store/variables/essentials\";\nimport getElements from \"../../store/variables/elements\";\n\nexport const getResizeAffectedItems = (context, item, index) => {\n\tconst pd = getPositionData(context);\n\tconst mpd = getModifiedPositionData(context);\n\tconst privateConstants = getPrivateConstants(context);\n\n\tconst len = pd.length;\n\tconst affectedArr = new Array(len);\n\tlet count = 0;\n\n\tconst _item = { ...item };\n\t_item.x -= privateConstants.MARGIN;\n\t_item.y -= privateConstants.MARGIN;\n\t_item.width += privateConstants.MARGIN;\n\t_item.height += privateConstants.MARGIN;\n\tconst temp = { x: 0, y: 0, height: 0, width: 0 };\n\n\tfor (let i = 0; i < len; i++) {\n\t\ttemp.x = pd[i].x - privateConstants.MARGIN;\n\t\ttemp.y = pd[i].y - privateConstants.MARGIN;\n\t\ttemp.width = pd[i].width + privateConstants.MARGIN;\n\t\ttemp.height = pd[i].height + privateConstants.MARGIN;\n\t\tif (\n\t\t\t(doRectsOverlap(temp, _item) || doRectsOnlyTouch(temp, _item)) &&\n\t\t\ti !== index\n\t\t) {\n\t\t\taffectedArr[count++] = i;\n\t\t\tmpd[i].x = undefined;\n\t\t\tmpd[i].y = undefined;\n\t\t}\n\t}\n\n\tconst result = new Array(count + 1);\n\tfor (let i = 0; i < count; i++) {\n\t\tresult[i] = affectedArr[i];\n\t}\n\tresult[count] = index;\n\n\treturn result;\n};\n\nexport const getMoveAffectedItems = (context, item, index) => {\n\tconst pd = getPositionData(context);\n\tconst mpd = getModifiedPositionData(context);\n\tconst privateConstants = getPrivateConstants(context);\n\n\tconst len = pd.length;\n\tconst affectedArr = new Array(len);\n\tlet count = 0;\n\n\tconst _item = { ...item };\n\t_item.x -= privateConstants.MARGIN;\n\t_item.y -= privateConstants.MARGIN;\n\t_item.width += privateConstants.MARGIN;\n\t_item.height += privateConstants.MARGIN;\n\tconst temp = { x: 0, y: 0, height: 0, width: 0 };\n\n\tfor (let i = 0; i < len; i++) {\n\t\ttemp.x = pd[i].x - privateConstants.MARGIN;\n\t\ttemp.y = pd[i].y - privateConstants.MARGIN;\n\t\ttemp.width = pd[i].width + privateConstants.MARGIN;\n\t\ttemp.height = pd[i].height + privateConstants.MARGIN;\n\t\tif (doRectsOverlap(temp, _item) || doRectsOnlyTouch(temp, _item)) {\n\t\t\tif (i !== index) {\n\t\t\t\taffectedArr[count++] = i;\n\t\t\t\tmpd[i].x = undefined;\n\t\t\t\tmpd[i].y = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst result = new Array(count + 1);\n\tfor (let i = 0; i < count; i++) {\n\t\tresult[i] = affectedArr[i];\n\t}\n\tresult[count] = index;\n\n\treturn result;\n};\n\nexport const resizeItemInitialChecks = (context, index, width, height) => {\n\tconst pd = getPositionData(context);\n\tconst privateConstants = getPrivateConstants(context);\n\n\tif (index < 0 || index >= pd.length) {\n\t\t// invalid index\n\t\tthrow \"Index out of bounds.\";\n\t}\n\n\tif (typeof width !== \"number\" || typeof height !== \"number\") {\n\t\tthrow \"Width or Height is not a number.\";\n\t}\n\n\tif (pd[index].x + width + privateConstants.MARGIN > privateConstants.WIDTH) {\n\t\t// falls outside\n\t\tthrow \"Right edges falls outside the grid area.\";\n\t}\n\n\tif (\n\t\twidth < privateConstants.DEFINED_MIN_HEIGHT_AND_WIDTH ||\n\t\theight < privateConstants.DEFINED_MIN_HEIGHT_AND_WIDTH\n\t) {\n\t\t// very small. TO DO: let the developers decide the smallest item size but can't be less than 150\n\t\tthrow `Width or height less than min height or width ${privateConstants.DEFINED_MIN_HEIGHT_AND_WIDTH}.`;\n\t}\n\n\treturn true;\n};\n\nexport const moveItemInitialChecks = (context, index, toX, toY) => {\n\tconst pd = getPositionData(context);\n\tconst privateConstants = getPrivateConstants(context);\n\n\tif (index < 0 || index >= pd.length) {\n\t\t// invalid index\n\t\tthrow \"Index out of bounds.\";\n\t}\n\n\tif (typeof toX !== \"number\" || typeof toY !== \"number\") {\n\t\tthrow \"toX or toY is not a number.\";\n\t}\n\n\tif (toX < privateConstants.MARGIN || toY < privateConstants.MARGIN) {\n\t\t// falls outside\n\t\tthrow \"Left edges falls outside the grid area.\";\n\t}\n\n\tif (\n\t\ttoX + pd[index].width + privateConstants.MARGIN >\n\t\tprivateConstants.WIDTH\n\t) {\n\t\t// falls outside\n\t\tthrow \"Right edges falls outside the grid area.\";\n\t}\n\n\treturn true;\n};\n\nexport const resetDemoUIChanges = (context) => {\n\tconst pd = getPositionData(context);\n\tconst e = getElements(context);\n\n\tconst len = pd.length;\n\tfor (var i = 0; i < len; i++) {\n\t\te.$limberGridViewItems[i].style.transform =\n\t\t\t\"translate(\" + pd[i].x + \"px, \" + pd[i].y + \"px)\";\n\t\te.$limberGridViewItems[i].classList.remove(\"limberGridViewItemDemo\");\n\t}\n};\n\nexport const movePointAdjust = (context, toX, toY) => {\n\tconst pd = getPositionData(context);\n\tconst privateConstants = getPrivateConstants(context);\n\n\tconst len = pd.length;\n\tconst temp = { x: 0, y: 0, height: 0, width: 0 };\n\tconst pt = { x: toX, y: toY };\n\tlet inside;\n\tfor (let i = 0; i < len; i++) {\n\t\ttemp.x = pd[i].x - privateConstants.MARGIN;\n\t\ttemp.y = pd[i].y - privateConstants.MARGIN;\n\t\ttemp.width = pd[i].width + privateConstants.MARGIN * 2;\n\t\ttemp.height = pd[i].height + privateConstants.MARGIN * 2;\n\t\tif (isPointInsideRect(temp, pt) || doesPointTouchRect(temp, pt)) {\n\t\t\tinside = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (inside !== undefined) {\n\t\ttoX = pd[inside].x;\n\t\ttoY = pd[inside].y;\n\t}\n\treturn { toX, toY, overlappedItemIndex: inside };\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\n// import {\n// \tfindFreeSpaces,\n// \tmergeFreeSpaces,\n// \tfindAffectedItemsOnMove,\n// \tfindAffectedItemsOnResize,\n// \tfitItemsIntoFreeSpaces,\n// \tfindMatchingSpace,\n// \tfitRemainingItems,\n// \tfitRemainingItemsAboveDeepestLine,\n// \tfitRemainingItemsBelowDeepestLine,\n// \tgetItemsFromPointDepth,\n// \tshitftItemsBelow,\n// \tmergePlains,\n// \tsubtractPlanes,\n// } from \"./calcUtils\";\nimport {\n\tgetResizeAffectedItems,\n\tgetMoveAffectedItems,\n\tresizeItemInitialChecks,\n\tmoveItemInitialChecks,\n\tresetDemoUIChanges,\n\tmovePointAdjust,\n} from \"./itemInteractionUtils\";\nimport { arrangeMove, arrangeResize } from \"../arrange/arrange\";\nimport getPrivateConstants from \"../../store/constants/privateConstants\";\nimport getPublicConstants from \"../../store/constants/publicConstants\";\nimport {\n\tgetPositionData,\n\tgetModifiedPositionData,\n\tsetPositionData,\n\tsetModifiedPositionData,\n\tgetCallbacks,\n} from \"../../store/variables/essentials\";\nimport getElements from \"../../store/variables/elements\";\n\n// import { renderItems } from \"../renderers/renderers\";\n\nexport const resizeItem = async function (index, width, height) {\n\tconst pd = getPositionData(this);\n\tconst e = getElements(this);\n\tconst callbacks = getCallbacks(this);\n\n\tindex = parseInt(index);\n\tresizeItemInitialChecks(this, index, width, height);\n\n\tresetDemoUIChanges(this);\n\n\tsetModifiedPositionData(this, pd);\n\tconst mpd = getModifiedPositionData(this);\n\tmpd[index].width = width;\n\tmpd[index].height = height;\n\n\tconst modifiedItem = {\n\t\tx: pd[index].x,\n\t\ty: pd[index].y,\n\t\twidth: width,\n\t\theight: height,\n\t};\n\tconst affectedItems = getResizeAffectedItems(this, modifiedItem, index);\n\n\tconst arranged = await arrangeResize(\n\t\tthis,\n\t\taffectedItems,\n\t\tmodifiedItem.y + modifiedItem.height,\n\t\tmodifiedItem.x + modifiedItem.width\n\t);\n\n\tsetPositionData(this, mpd);\n\n\te.$limberGridViewItems[index].style.width = `${mpd[index].width}px`;\n\te.$limberGridViewItems[index].style.height = `${mpd[index].height}px`;\n\n\tconst arrangedArr = Object.keys(arranged);\n\tconst len = arrangedArr.length;\n\tfor (let i = 0; i < len; i++) {\n\t\tconst key = arrangedArr[i];\n\t\tconst item = arranged[key];\n\t\te.$limberGridViewItems[\n\t\t\tkey\n\t\t].style.transform = `translate(${item.x}px, ${item.y}px)`;\n\t}\n\n\tif (callbacks.resizeComplete) {\n\t\tcallbacks.resizeComplete(index, width, height, arrangedArr);\n\t}\n};\n\nexport const resizeItemDemo = async function (index, width, height) {\n\tconst pd = getPositionData(this);\n\tconst e = getElements(this);\n\n\tindex = parseInt(index);\n\tresizeItemInitialChecks(this, index, width, height);\n\n\tresetDemoUIChanges(this);\n\n\tsetModifiedPositionData(this, pd);\n\tconst mpd = getModifiedPositionData(this);\n\tmpd[index].width = width;\n\tmpd[index].height = height;\n\n\tconst modifiedItem = {\n\t\tx: pd[index].x,\n\t\ty: pd[index].y,\n\t\twidth: width,\n\t\theight: height,\n\t};\n\tconst affectedItems = getResizeAffectedItems(this, modifiedItem, index);\n\n\tconst arranged = await arrangeResize(\n\t\tthis,\n\t\taffectedItems,\n\t\tmodifiedItem.y + modifiedItem.height,\n\t\tmodifiedItem.x + modifiedItem.width,\n\t\ttrue\n\t);\n\n\tconst arrangedArr = Object.keys(arranged);\n\tconst len = arrangedArr.length;\n\tfor (let i = 0; i < len; i++) {\n\t\tconst key = arrangedArr[i];\n\t\tconst item = arranged[key];\n\t\te.$limberGridViewItems[\n\t\t\tkey\n\t\t].style.transform = `translate(${item.x}px, ${item.y}px)`;\n\t}\n};\n\nexport const moveItem = async function (index, toX, toY) {\n\tconst pd = getPositionData(this);\n\tconst e = getElements(this);\n\tconst callbacks = getCallbacks(this);\n\tconst publicConstants = getPublicConstants(this);\n\n\tindex = parseInt(index);\n\tif (publicConstants.LATCH_MOVED_ITEM) {\n\t\t// change toX & toY to top left of the overlapping item\n\t\t// provide a flag for developers to switch it on or off any time from UI by the user\n\t\t// maybe \"LATCH_MOVED_ITEM\"\n\t\tconst adjustedPt = movePointAdjust(this, toX, toY);\n\t\ttoX = adjustedPt.toX;\n\t\ttoY = adjustedPt.toY;\n\t}\n\n\tmoveItemInitialChecks(this, index, toX, toY);\n\n\tresetDemoUIChanges(this);\n\n\tsetModifiedPositionData(this, pd);\n\tconst mpd = getModifiedPositionData(this);\n\tmpd[index].x = toX;\n\tmpd[index].y = toY;\n\n\tconst modifiedItem = {\n\t\tx: toX,\n\t\ty: toY,\n\t\twidth: pd[index].width,\n\t\theight: pd[index].height,\n\t};\n\tconst affectedItems = getMoveAffectedItems(this, modifiedItem, index);\n\n\tconst arranged = await arrangeMove(\n\t\tthis,\n\t\taffectedItems,\n\t\ttoY,\n\t\ttoY + pd[index].height\n\t);\n\n\tsetPositionData(this, mpd);\n\n\te.$limberGridViewItems[index].classList.remove(\"limberGridViewItemDemo\");\n\te.$limberGridViewItems[\n\t\tindex\n\t].style.transform = `translate(${mpd[index].x}px, ${mpd[index].y}px)`;\n\tif (!publicConstants.ANIMATE_MOVED_ITEM) {\n\t\t// below two statements needs its own flag maybe \"ANIMATE_MOVED_ITEM\"\n\t\te.$limberGridViewItems[index].style.transition = \"none\";\n\t\tsetTimeout(() => {\n\t\t\te.$limberGridViewItems[index].style.transition = \"\";\n\t\t}, publicConstants.ANIMATE_TIME);\n\t}\n\n\tconst arrangedArr = Object.keys(arranged);\n\tconst len = arrangedArr.length;\n\tfor (let i = 0; i < len; i++) {\n\t\tconst key = arrangedArr[i];\n\t\tconst item = arranged[key];\n\t\te.$limberGridViewItems[\n\t\t\tkey\n\t\t].style.transform = `translate(${item.x}px, ${item.y}px)`;\n\t}\n\n\tif (callbacks.resizeComplete) {\n\t\tcallbacks.moveComplete(index, toX, toY, arrangedArr);\n\t}\n};\n\nexport const moveItemDemo = async function (index, toX, toY) {\n\tconst pd = getPositionData(this);\n\tconst e = getElements(this);\n\tconst publicConstants = getPublicConstants(this);\n\n\tindex = parseInt(index);\n\tif (publicConstants.LATCH_MOVED_ITEM) {\n\t\t// change toX & toY to top left of the overlapping item\n\t\t// provide a flag for developers to switch it on or off any time from UI by the user\n\t\tconst adjustedPt = movePointAdjust(this, toX, toY);\n\t\ttoX = adjustedPt.toX;\n\t\ttoY = adjustedPt.toY;\n\n\t\tif (!isNaN(adjustedPt.overlappedItemIndex)) {\n\t\t\te.$limberGridViewMoveGuide.style.transform =\n\t\t\t\t\"translate(\" + toX + \"px, \" + toY + \"px)\";\n\t\t\te.$limberGridViewMoveGuide.classList.add(\n\t\t\t\t\"limber-grid-view-move-guide-active\"\n\t\t\t);\n\t\t}\n\t}\n\n\tmoveItemInitialChecks(this, index, toX, toY);\n\n\tresetDemoUIChanges(this);\n\n\tsetModifiedPositionData(this, pd);\n\tconst mpd = getModifiedPositionData(this);\n\tmpd[index].x = toX;\n\tmpd[index].y = toY;\n\n\tconst modifiedItem = {\n\t\tx: toX,\n\t\ty: toY,\n\t\twidth: pd[index].width,\n\t\theight: pd[index].height,\n\t};\n\tconst affectedItems = getMoveAffectedItems(this, modifiedItem, index);\n\n\tconst arranged = await arrangeMove(\n\t\tthis,\n\t\taffectedItems,\n\t\ttoY,\n\t\ttoY + pd[index].height,\n\t\ttrue\n\t);\n\n\te.$limberGridViewItems[index].classList.add(\"limberGridViewItemDemo\");\n\n\tconst arrangedArr = Object.keys(arranged);\n\tconst len = arrangedArr.length;\n\tfor (let i = 0; i < len; i++) {\n\t\tconst key = arrangedArr[i];\n\t\tconst item = arranged[key];\n\t\te.$limberGridViewItems[\n\t\t\tkey\n\t\t].style.transform = `translate(${item.x}px, ${item.y}px)`;\n\t}\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nimport {\n\tgetLines,\n\tgetMarginAtPoint,\n\tadjustHeight,\n\tadjustScroll,\n} from \"../utils/essentials\";\n// import {\n// \tresizePlane,\n// \tresizePlaneDemo,\n// \tmovePlane,\n// \tmovePlaneDemo,\n// } from \"../calc/calcPosition\";\nimport getPublicConstants from \"../../store/constants/publicConstants\";\nimport getPrivateConstants from \"../../store/constants/privateConstants\";\nimport {\n\tgetCallbacks,\n\tgetPositionData,\n} from \"../../store/variables/essentials\";\nimport getElements from \"../../store/variables/elements\";\nimport {\n\t// calculateMousePosOnLimberGrid,\n\t// calculateTouchPosOnLimberGrid,\n\t// calculateTouchPosOnLimberGridItem,\n\tcalculateMousePosOnDesk,\n\tcalculateTouchPosOnDesk,\n\tcalculateTouchPosOnItem,\n} from \"./eventHandlerUtils.js\";\nimport {\n\tgetUserActionData,\n\tloadResizingState,\n\tunloadResizingState,\n\tloadMoveState,\n\tunloadMoveState,\n\tloadOnMoveState,\n\tunloadOnMoveState,\n} from \"./itemInteractionUtils.js\";\nimport { onDeskTouchStart } from \"./deskInteraction\";\nimport {\n\tmoveItem,\n\tmoveItemDemo,\n\tresizeItem,\n\tresizeItemDemo,\n} from \"../interaction/itemInteraction\";\nimport { getBindedFunctions } from \"../../store/variables/bindedFunctions\";\nimport { getItemInteractionVars } from \"../../store/variables/eventSpecific\";\n\n// let userActionData = {};\n// let mouseDownCancel = false;\n// let mouseDownTimerComplete = true;\n// let touchHoldCancel = false;\n// // let tapHoldCancel = false;\n// let touchHoldTimerComplete = false;\n// // let tapHoldTimerComplete = false;\n// let longPressCheck;\n// let longTouchCheck;\n// let showResizeDemoTimeOutVariable;\n// let showMoveDemoTimeOutVariable;\n\nexport const onItemMouseDown = function (event) {\n\tconst e = getElements(this);\n\tconst publicConstants = getPublicConstants(this);\n\tconst pd = getPositionData(this);\n\n\tconst iiv = getItemInteractionVars(this);\n\tconst bf = getBindedFunctions(this);\n\n\tif (event.which !== 1) {\n\t\tonItemContextMenu.call(this, event);\n\t\treturn;\n\t}\n\n\tconst _userActionData = getUserActionData(this, event);\n\n\tif (!_userActionData) {\n\t\treturn;\n\t}\n\n\tObject.assign(iiv.userActionData, _userActionData);\n\n\tif (iiv.userActionData.type === \"move\") {\n\t\tiiv.mouseDownCancel = false;\n\t\tiiv.mouseDownTimerComplete = false;\n\n\t\tdocument.addEventListener(\"mousemove\", bf.onItemMouseMove);\n\t\tdocument.addEventListener(\"mouseup\", bf.onItemMouseUp);\n\t\tdocument.addEventListener(\"contextmenu\", bf.onItemContextMenu);\n\n\t\tclearTimeout(iiv.longPressCheck);\n\t\tiiv.longPressCheck = setTimeout(\n\t\t\tmouseDownCheck.bind(this, event),\n\t\t\tpublicConstants.MOUSE_DOWN_TIME\n\t\t);\n\n\t\tevent.preventDefault();\n\t} else if (iiv.userActionData.type === \"resize\") {\n\t\tiiv.mouseDownCancel = false;\n\t\tiiv.mouseDownTimerComplete = true;\n\n\t\te.$limberGridView.addEventListener(\"mousemove\", bf.onItemMouseMove);\n\t\tdocument.addEventListener(\"mouseup\", bf.onItemMouseUp);\n\t\tdocument.addEventListener(\"contextmenu\", bf.onItemContextMenu);\n\n\t\tiiv.userActionData.itemX = pd[iiv.userActionData.itemIndex].x;\n\t\tiiv.userActionData.itemY = pd[iiv.userActionData.itemIndex].y;\n\n\t\tloadResizingState(this, iiv.userActionData);\n\n\t\tevent.preventDefault();\n\t}\n\n\t//\n\tevent.stopPropagation();\n};\n\nexport const onItemTouchStart = function (event) {\n\tconst e = getElements(this);\n\tconst publicConstants = getPublicConstants(this);\n\tconst pd = getPositionData(this);\n\n\tconst iiv = getItemInteractionVars(this);\n\tconst bf = getBindedFunctions(this);\n\n\tif (event.touches.length !== 1) {\n\t\tonItemTouchContextMenu.call(this, event);\n\t\treturn;\n\t}\n\n\tif (event.which !== 0) {\n\t\tonItemTouchContextMenu.call(this, event);\n\t\treturn;\n\t}\n\n\tconst touchPosOnLimberGridItem = calculateTouchPosOnItem(this, event);\n\tif (touchPosOnLimberGridItem === false) {\n\t\treturn;\n\t}\n\n\tconst _userActionData = getUserActionData(this, event);\n\tif (!_userActionData) {\n\t\treturn;\n\t}\n\n\tObject.assign(iiv.userActionData, _userActionData);\n\n\tif (iiv.userActionData.type === \"move\") {\n\t\tiiv.touchHoldCancel = false;\n\t\tiiv.touchHoldTimerComplete = false;\n\n\t\t// e.$limberGridView.removeEventListener(\"touchstart\", bf.onDeskTouchStart);\n\t\tdocument.addEventListener(\"touchmove\", bf.onItemTouchMove);\n\t\tdocument.addEventListener(\"touchend\", bf.onItemTouchEnd);\n\t\tdocument.addEventListener(\"touchcancel\", bf.onItemTouchCancel);\n\t\tdocument.addEventListener(\"contextmenu\", bf.onItemTouchContextMenu);\n\n\t\tiiv.longTouchCheck = setTimeout(\n\t\t\ttapHoldCheck.bind(this, event),\n\t\t\tpublicConstants.TOUCH_HOLD_TIME\n\t\t);\n\n\t\tevent.preventDefault();\n\t} else if (iiv.userActionData.type === \"resize\") {\n\t\tiiv.touchHoldCancel = false;\n\t\tiiv.touchHoldTimerComplete = true;\n\n\t\t// e.$limberGridView.removeEventListener(\"touchstart\", bf.onDeskTouchStart);\n\t\te.$limberGridView.addEventListener(\"touchmove\", bf.onItemTouchMove);\n\t\tdocument.addEventListener(\"touchend\", bf.onItemTouchEnd);\n\t\tdocument.addEventListener(\"touchcancel\", bf.onItemTouchCancel);\n\t\t//\n\t\tdocument.addEventListener(\"contextmenu\", bf.onItemTouchContextMenu);\n\n\t\tiiv.userActionData.itemX = pd[iiv.userActionData.itemIndex].x;\n\t\tiiv.userActionData.itemY = pd[iiv.userActionData.itemIndex].y;\n\n\t\tloadResizingState(this, iiv.userActionData);\n\n\t\tevent.preventDefault();\n\t}\n\n\tevent.stopPropagation();\n};\n\nexport const mouseDownCheck = function (event) {\n\tconst iiv = getItemInteractionVars(this);\n\n\tif (iiv.mouseDownCancel === false) {\n\t\tiiv.mouseDownTimerComplete = true;\n\n\t\tloadMoveState(this, iiv.userActionData, event);\n\t}\n};\n\nexport const tapHoldCheck = function (event) {\n\tconst iiv = getItemInteractionVars(this);\n\n\tif (iiv.touchHoldCancel === false) {\n\t\tiiv.touchHoldTimerComplete = true;\n\n\t\tloadMoveState(this, iiv.userActionData, event);\n\t}\n};\n\nexport const onItemMouseMove = function (event) {\n\tconst e = getElements(this);\n\tconst privateConstants = getPrivateConstants(this);\n\tconst publicConstants = getPublicConstants(this);\n\n\tconst iiv = getItemInteractionVars(this);\n\tconst bf = getBindedFunctions(this);\n\n\tif (iiv.mouseDownTimerComplete === true) {\n\t\tif (iiv.userActionData.type === \"move\") {\n\t\t\tloadOnMoveState(this, iiv.userActionData, event, \"move\");\n\n\t\t\tclearTimeout(iiv.showMoveDemoTimeOutVariable);\n\n\t\t\tconst mousePositionOnLimberGrid = calculateMousePosOnDesk(this, event);\n\n\t\t\tif (mousePositionOnLimberGrid !== false) {\n\t\t\t\tconst yMousePosition = mousePositionOnLimberGrid.y;\n\t\t\t\tadjustHeight(this, yMousePosition);\n\n\t\t\t\tiiv.showMoveDemoTimeOutVariable = setTimeout(\n\t\t\t\t\tshowMoveDemo.bind(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\tiiv.userActionData.itemIndex,\n\t\t\t\t\t\tmousePositionOnLimberGrid\n\t\t\t\t\t),\n\t\t\t\t\tpublicConstants.DEMO_WAIT_TIME\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tloadOnMoveState(this, iiv.userActionData, event, \"resize\");\n\n\t\t\tclearTimeout(iiv.showResizeDemoTimeOutVariable);\n\n\t\t\tconst scrollTop = e.$limberGridView.scrollTop;\n\t\t\tconst scrollLeft = e.$limberGridView.scrollLeft;\n\n\t\t\tconst x = iiv.userActionData.itemX;\n\t\t\tconst y = iiv.userActionData.itemY;\n\n\t\t\tconst newWidth =\n\t\t\t\tevent.offsetX - x + scrollLeft - privateConstants.PADDING_LEFT;\n\t\t\tconst newHeight =\n\t\t\t\tevent.offsetY - y + scrollTop - privateConstants.PADDING_TOP;\n\n\t\t\tiiv.userActionData.newWidth = newWidth;\n\t\t\tiiv.userActionData.newHeight = newHeight;\n\n\t\t\tconst yMousePosition = event.offsetY + scrollTop;\n\t\t\tadjustHeight(this, yMousePosition);\n\n\t\t\tif (newWidth > 0 && newHeight > 0) {\n\t\t\t\te.$limberGridViewPseudoItem.style.width = newWidth + \"px\";\n\t\t\t\te.$limberGridViewPseudoItem.style.height = newHeight + \"px\";\n\t\t\t\te.$limberGridViewPseudoItem.setAttribute(\n\t\t\t\t\t\"data-after\",\n\t\t\t\t\t`w: ${parseInt(newWidth)}px, h: ${parseInt(newHeight)}px`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tiiv.showResizeDemoTimeOutVariable = setTimeout(\n\t\t\t\tshowResizeDemo.bind(\n\t\t\t\t\tthis,\n\t\t\t\t\tiiv.userActionData.itemIndex,\n\t\t\t\t\tnewWidth,\n\t\t\t\t\tnewHeight\n\t\t\t\t),\n\t\t\t\tpublicConstants.DEMO_WAIT_TIME\n\t\t\t);\n\t\t}\n\t} else {\n\t\tiiv.mouseDownCancel = true;\n\n\t\tonItemContextMenu.call(this, event);\n\t\t// clearTimeout(iiv.longPressCheck);\n\t\t// document.removeEventListener(\"mousemove\", bf.onItemMouseMove);\n\t\t// e.$limberGridView.removeEventListener(\"mousemove\", bf.onItemMouseMove);\n\t\t// document.removeEventListener(\"mouseup\", bf.onItemMouseUp);\n\t\t// document.removeEventListener(\"contextmenu\", bf.onItemContextMenu);\n\n\t\t// canceling mouseHold\n\t}\n\tevent.preventDefault();\n\tevent.stopPropagation();\n};\n\nexport const onItemTouchMove = function (event) {\n\tconst e = getElements(this);\n\tconst privateConstants = getPrivateConstants(this);\n\tconst publicConstants = getPublicConstants(this);\n\n\tconst iiv = getItemInteractionVars(this);\n\tconst bf = getBindedFunctions(this);\n\n\tif (iiv.touchHoldTimerComplete === true && event.touches.length === 1) {\n\t\tif (iiv.userActionData.type === \"move\") {\n\t\t\tloadOnMoveState(this, iiv.userActionData, event, \"move\");\n\n\t\t\tclearTimeout(iiv.showMoveDemoTimeOutVariable);\n\n\t\t\tconst touchPositionOnLimberGrid = calculateTouchPosOnDesk(this, event);\n\n\t\t\tif (touchPositionOnLimberGrid !== false) {\n\t\t\t\tconst scrollTop = e.$limberGridView.scrollTop;\n\t\t\t\tconst scrollLeft = e.$limberGridView.scrollLeft;\n\n\t\t\t\tconst limberGridViewBoundingClientRect = e.$limberGridView.getBoundingClientRect();\n\t\t\t\tconst limberGridViewWidthVisibleWidth =\n\t\t\t\t\te.$limberGridView.offsetWidth - limberGridViewBoundingClientRect.left;\n\t\t\t\tconst limberGridViewHeightVisibleHeight =\n\t\t\t\t\te.$limberGridView.offsetHeight - limberGridViewBoundingClientRect.top;\n\t\t\t\tconst limberGridViewOnVisibleAreaX =\n\t\t\t\t\ttouchPositionOnLimberGrid.x +\n\t\t\t\t\tprivateConstants.PADDING_LEFT -\n\t\t\t\t\tscrollLeft;\n\t\t\t\tconst limberGridViewOnVisibleAreaY =\n\t\t\t\t\ttouchPositionOnLimberGrid.y +\n\t\t\t\t\tprivateConstants.PADDING_TOP -\n\t\t\t\t\tscrollTop;\n\n\t\t\t\tconst yTouchPosition = touchPositionOnLimberGrid.y;\n\t\t\t\tadjustHeight(this, yTouchPosition);\n\n\t\t\t\tconst programScrolled = adjustScroll(\n\t\t\t\t\tthis,\n\t\t\t\t\tlimberGridViewOnVisibleAreaY,\n\t\t\t\t\tlimberGridViewHeightVisibleHeight\n\t\t\t\t);\n\n\t\t\t\tif (programScrolled !== true) {\n\t\t\t\t\tiiv.showMoveDemoTimeOutVariable = setTimeout(\n\t\t\t\t\t\tshowMoveDemo.bind(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tiiv.userActionData.itemIndex,\n\t\t\t\t\t\t\ttouchPositionOnLimberGrid\n\t\t\t\t\t\t),\n\t\t\t\t\t\tpublicConstants.DEMO_WAIT_TIME\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tloadOnMoveState(this, iiv.userActionData, event, \"resize\");\n\n\t\t\tclearTimeout(iiv.showResizeDemoTimeOutVariable);\n\n\t\t\tconst x = iiv.userActionData.itemX;\n\t\t\tconst y = iiv.userActionData.itemY;\n\n\t\t\tconst touchPositionOnLimberGrid = calculateTouchPosOnDesk(this, event);\n\n\t\t\tconst newWidth = touchPositionOnLimberGrid.x - x;\n\t\t\tconst newHeight = touchPositionOnLimberGrid.y - y;\n\n\t\t\tif (touchPositionOnLimberGrid !== false) {\n\t\t\t\tiiv.userActionData.newWidth = newWidth;\n\t\t\t\tiiv.userActionData.newHeight = newHeight;\n\n\t\t\t\tif (newWidth > 0 && newHeight > 0) {\n\t\t\t\t\te.$limberGridViewPseudoItem.style.width = newWidth + \"px\";\n\t\t\t\t\te.$limberGridViewPseudoItem.style.height = newHeight + \"px\";\n\t\t\t\t\te.$limberGridViewPseudoItem.setAttribute(\n\t\t\t\t\t\t\"data-after\",\n\t\t\t\t\t\t`w: ${parseInt(newWidth)}px, h: ${parseInt(newHeight)}px`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (touchPositionOnLimberGrid !== false) {\n\t\t\t\tconst scrollTop = e.$limberGridView.scrollTop;\n\t\t\t\tconst scrollLeft = e.$limberGridView.scrollLeft;\n\n\t\t\t\tconst limberGridViewBoundingClientRect = e.$limberGridView.getBoundingClientRect();\n\t\t\t\tconst limberGridViewWidthVisibleWidth =\n\t\t\t\t\te.$limberGridView.offsetWidth - limberGridViewBoundingClientRect.left;\n\t\t\t\tconst limberGridViewHeightVisibleHeight =\n\t\t\t\t\te.$limberGridView.offsetHeight - limberGridViewBoundingClientRect.top;\n\t\t\t\tconst limberGridViewOnVisibleAreaX =\n\t\t\t\t\ttouchPositionOnLimberGrid.x +\n\t\t\t\t\tprivateConstants.PADDING_LEFT -\n\t\t\t\t\tscrollLeft;\n\t\t\t\tconst limberGridViewOnVisibleAreaY =\n\t\t\t\t\ttouchPositionOnLimberGrid.y +\n\t\t\t\t\tprivateConstants.PADDING_TOP -\n\t\t\t\t\tscrollTop;\n\n\t\t\t\tconst yTouchPosition = touchPositionOnLimberGrid.y;\n\t\t\t\tadjustHeight(this, yTouchPosition);\n\n\t\t\t\tconst programScrolled = adjustScroll(\n\t\t\t\t\tthis,\n\t\t\t\t\tlimberGridViewOnVisibleAreaY,\n\t\t\t\t\tlimberGridViewHeightVisibleHeight\n\t\t\t\t);\n\n\t\t\t\tif (programScrolled !== true) {\n\t\t\t\t\tiiv.showResizeDemoTimeOutVariable = setTimeout(\n\t\t\t\t\t\tshowResizeDemo.bind(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tiiv.userActionData.itemIndex,\n\t\t\t\t\t\t\tnewWidth,\n\t\t\t\t\t\t\tnewHeight\n\t\t\t\t\t\t),\n\t\t\t\t\t\tpublicConstants.DEMO_WAIT_TIME\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconsole.log(\"else\");\n\t\tiiv.touchHoldCancel = true;\n\n\t\tonItemTouchContextMenu.call(this, event);\n\t\t// clearTimeout(iiv.longTouchCheck);\n\n\t\t// document.removeEventListener(\"contextmenu\", bf.onItemContextMenu);\n\n\t\t// document.removeEventListener(\"touchmove\", bf.onItemTouchMove);\n\t\t// e.$limberGridView.removeEventListener(\"touchmove\", bf.onItemTouchMove);\n\t\t// document.removeEventListener(\"touchend\", bf.onItemTouchEnd);\n\t\t// document.removeEventListener(\"contextmenu\", bf.onItemTouchContextMenu);\n\t\t// document.removeEventListener(\"touchcancel\", bf.onItemTouchCancel);\n\n\t\t// e.$limberGridView.addEventListener(\"touchstart\", bf.onDeskTouchStart);\n\n\t\t// canceling taphold\n\t}\n\n\tevent.stopPropagation();\n};\n\nexport const onItemMouseUp = async function (event) {\n\tconst e = getElements(this);\n\tconst pd = getPositionData(this);\n\n\tconst iiv = getItemInteractionVars(this);\n\tconst bf = getBindedFunctions(this);\n\n\tclearTimeout(iiv.showMoveDemoTimeOutVariable);\n\tclearTimeout(iiv.showResizeDemoTimeOutVariable);\n\n\tif (iiv.mouseDownTimerComplete === true) {\n\t\tif (iiv.userActionData.type === \"move\") {\n\t\t\t// unloadMoveState(this, iiv.userActionData);\n\t\t\t// unloadOnMoveState(this);\n\n\t\t\tconst mousePositionOnLimberGrid = calculateMousePosOnDesk(this, event);\n\t\t\tvar updatedCoordinates = {};\n\t\t\ttry {\n\t\t\t\tif (mousePositionOnLimberGrid !== false) {\n\t\t\t\t\tawait moveItem.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\tiiv.userActionData.itemIndex,\n\t\t\t\t\t\tmousePositionOnLimberGrid.x,\n\t\t\t\t\t\tmousePositionOnLimberGrid.y\n\t\t\t\t\t);\n\t\t\t\t\tupdatedCoordinates.x = mousePositionOnLimberGrid.x;\n\t\t\t\t\tupdatedCoordinates.y = mousePositionOnLimberGrid.y;\n\t\t\t\t} else {\n\t\t\t\t\tthrow \"Mouse position outside grid area.\";\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t\trevertShowMoveOrResizeDemo(this);\n\t\t\t}\n\t\t} else {\n\t\t\t// unloadResizingState(this, iiv.userActionData);\n\t\t\t// unloadOnMoveState(this);\n\n\t\t\ttry {\n\t\t\t\tvar newWidth = iiv.userActionData.newWidth;\n\t\t\t\tvar newHeight = iiv.userActionData.newHeight;\n\n\t\t\t\tawait resizeItem.call(\n\t\t\t\t\tthis,\n\t\t\t\t\tiiv.userActionData.itemIndex,\n\t\t\t\t\tnewWidth,\n\t\t\t\t\tnewHeight\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\trevertShowMoveOrResizeDemo(this);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tiiv.mouseDownCancel = true;\n\t\t// clearTimeout(iiv.longPressCheck);\n\t\t// canceling mouseHold\n\t}\n\n\tonItemContextMenu.call(this, event);\n\n\t// document.removeEventListener(\"mousemove\", bf.onItemMouseMove);\n\t// e.$limberGridView.removeEventListener(\"mousemove\", bf.onItemMouseMove);\n\t// document.removeEventListener(\"mouseup\", bf.onItemMouseUp);\n\t// document.removeEventListener(\"contextmenu\", bf.onItemContextMenu);\n\n\t// event.preventDefault();\n\t// event.stopPropagation();\n\n\tiiv.userActionData = {};\n};\n\nexport const onItemTouchEnd = async function (event) {\n\tconsole.log(\"onItemTouchEnd\");\n\tconst e = getElements(this);\n\tconst pd = getPositionData(this);\n\n\tconst iiv = getItemInteractionVars(this);\n\tconst bf = getBindedFunctions(this);\n\n\tclearTimeout(iiv.showMoveDemoTimeOutVariable);\n\tclearTimeout(iiv.showResizeDemoTimeOutVariable);\n\n\tif (iiv.touchHoldTimerComplete === true && event.touches.length === 0) {\n\t\tif (iiv.userActionData.type === \"move\") {\n\t\t\t// unloadMoveState(this, iiv.userActionData);\n\t\t\t// unloadOnMoveState(this);\n\n\t\t\tconst touchPositionOnLimberGrid = calculateTouchPosOnDesk(this, event);\n\t\t\tvar updatedCoordinates = {};\n\t\t\ttry {\n\t\t\t\tif (touchPositionOnLimberGrid !== false) {\n\t\t\t\t\tawait moveItem.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\tiiv.userActionData.itemIndex,\n\t\t\t\t\t\ttouchPositionOnLimberGrid.x,\n\t\t\t\t\t\ttouchPositionOnLimberGrid.y\n\t\t\t\t\t);\n\t\t\t\t\tupdatedCoordinates.x = touchPositionOnLimberGrid.x;\n\t\t\t\t\tupdatedCoordinates.y = touchPositionOnLimberGrid.y;\n\t\t\t\t} else {\n\t\t\t\t\tthrow \"Touch position outside grid area.\";\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t\trevertShowMoveOrResizeDemo(this);\n\t\t\t}\n\t\t} else {\n\t\t\t// unloadResizingState(this, iiv.userActionData);\n\t\t\t// unloadOnMoveState(this);\n\n\t\t\ttry {\n\t\t\t\tvar newWidth = iiv.userActionData.newWidth;\n\t\t\t\tvar newHeight = iiv.userActionData.newHeight;\n\n\t\t\t\tawait resizeItem.call(\n\t\t\t\t\tthis,\n\t\t\t\t\tiiv.userActionData.itemIndex,\n\t\t\t\t\tnewWidth,\n\t\t\t\t\tnewHeight\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\trevertShowMoveOrResizeDemo(this);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tiiv.touchHoldCancel = true;\n\t\t// clearTimeout(iiv.longTouchCheck);\n\t\t// canceling taphold\n\t}\n\n\tonItemTouchContextMenu.call(this, event);\n\t// document.removeEventListener(\"contextmenu\", bf.onItemContextMenu);\n\n\t// document.removeEventListener(\"touchmove\", bf.onItemTouchMove);\n\t// e.$limberGridView.removeEventListener(\"touchmove\", bf.onItemTouchMove);\n\t// document.removeEventListener(\"touchend\", bf.onItemTouchEnd);\n\t// document.removeEventListener(\"contextmenu\", bf.onItemTouchContextMenu);\n\t// document.removeEventListener(\"touchcancel\", bf.onItemTouchCancel);\n\n\t// e.$limberGridView.addEventListener(\"touchstart\", bf.onDeskTouchStart);\n\n\tevent.stopPropagation();\n\n\tiiv.userActionData = {};\n};\n\nexport const onItemContextMenu = function (event) {\n\tconst e = getElements(this);\n\n\tconst iiv = getItemInteractionVars(this);\n\tconst bf = getBindedFunctions(this);\n\n\tclearTimeout(iiv.showMoveDemoTimeOutVariable);\n\tclearTimeout(iiv.showResizeDemoTimeOutVariable);\n\tclearTimeout(iiv.longPressCheck);\n\tclearTimeout(iiv.longTouchCheck);\n\n\tunloadResizingState(this, iiv.userActionData);\n\tunloadMoveState(this, iiv.userActionData);\n\tunloadOnMoveState(this);\n\trevertShowMoveOrResizeDemo(this);\n\n\tdocument.removeEventListener(\"mousemove\", bf.onItemMouseMove);\n\te.$limberGridView.removeEventListener(\"mousemove\", bf.onItemMouseMove);\n\tdocument.removeEventListener(\"mouseup\", bf.onItemMouseUp);\n\tdocument.removeEventListener(\"contextmenu\", bf.onItemContextMenu);\n\n\tdocument.removeEventListener(\"touchmove\", bf.onItemTouchMove);\n\te.$limberGridView.removeEventListener(\"touchmove\", bf.onItemTouchMove);\n\tdocument.removeEventListener(\"touchend\", bf.onItemTouchEnd);\n\tdocument.removeEventListener(\"contextmenu\", bf.onItemTouchContextMenu);\n\tdocument.removeEventListener(\"touchcancel\", bf.onItemTouchCancel);\n\n\tiiv.userActionData = {};\n\t//\n\t// iiv.mouseDownCancel = false;\n\t// iiv.mouseDownTimerComplete = false;\n\n\t//\n\n\tevent.preventDefault();\n\tevent.stopPropagation();\n};\n\nexport const onItemTouchContextMenu = function (event) {\n\t// event.preventDefault();\n\tonItemContextMenu.call(this, event);\n};\n\nexport const onItemTouchCancel = function (event) {\n\t// const e = getElements(this);\n\n\t// const iiv = getItemInteractionVars(this);\n\t// const bf = getBindedFunctions(this);\n\n\tonItemContextMenu.call(this, event);\n\t// iiv.touchHoldTimerComplete = false;\n\t// e.$limberGridView.addEventListener(\"touchstart\", bf.onDeskTouchStart);\n};\n\nexport const showMoveDemo = async function (index, mousePosition) {\n\tconst e = getElements(this);\n\n\ttry {\n\t\tif (mousePosition !== false) {\n\t\t\tawait moveItemDemo.call(this, index, mousePosition.x, mousePosition.y);\n\n\t\t\t// e.$limberGridViewMoveGuide.style.transform =\n\t\t\t// \t\"translate(\" + mousePosition.x + \"px, \" + mousePosition.y + \"px)\";\n\t\t\t// e.$limberGridViewMoveGuide.classList.add(\n\t\t\t// \t\"limber-grid-view-move-guide-active\"\n\t\t\t// );\n\n\t\t\te.$pseudoContainerItem.classList.remove(\n\t\t\t\t\"limber-grid-view-pseudo-container-item-move-disallow\"\n\t\t\t);\n\t\t\te.$pseudoContainerItem.classList.add(\n\t\t\t\t\"limber-grid-view-pseudo-container-item-move-allow\"\n\t\t\t);\n\t\t} else {\n\t\t\tthrow \"Invalid mouse position.\";\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(error);\n\t\te.$pseudoContainerItem.classList.remove(\n\t\t\t\"limber-grid-view-pseudo-container-item-move-allow\"\n\t\t);\n\t\te.$pseudoContainerItem.classList.add(\n\t\t\t\"limber-grid-view-pseudo-container-item-move-disallow\"\n\t\t);\n\t}\n};\n\nexport const showResizeDemo = async function (index, width, height) {\n\tconst e = getElements(this);\n\n\ttry {\n\t\tawait resizeItemDemo.call(this, index, width, height);\n\t\te.$limberGridViewPseudoItem.classList.add(\n\t\t\t\"limber-grid-view-pseudo-item-resize-allow\"\n\t\t);\n\t} catch (error) {\n\t\tconsole.error(error);\n\t\te.$limberGridViewPseudoItem.classList.add(\n\t\t\t\"limber-grid-view-pseudo-item-resize-disallow\"\n\t\t);\n\t}\n};\n\nexport const revertShowMoveOrResizeDemo = function (context) {\n\tconst e = getElements(context);\n\tconst pd = getPositionData(context);\n\n\tconst len = e.$limberGridViewItems.length;\n\tfor (let i = 0; i < len; i++) {\n\t\te.$limberGridViewItems[\n\t\t\ti\n\t\t].style.transform = `translate(${pd[i].x}px, ${pd[i].y}px)`;\n\t}\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nexport const DESK_INTERACTION_MODE = { ADD: true, CUTSPACE: true };\n\nexport const LATCH_MOVED_ITEM = { true: true, false: true };\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nimport { getOptions } from \"../store/variables/options\";\nimport {\n\tgetPositionData,\n\tsetPositionData,\n\tgetModifiedPositionData,\n\tsetModifiedPositionData,\n\tsetPseudoContainerId,\n\tgetPseudoContainerId,\n} from \"../store/variables/essentials\";\nimport getElements, {\n\tset$body,\n\tset$pseudoContainer,\n\tset$limberGridViewContainer,\n\tset$limberGridView,\n\tset$pseudoContainerItem,\n\tset$limberGridViewPseudoItem,\n\tset$limberGridViewMoveGuide,\n\tset$limberGridViewHeightAdjustGuide,\n\tset$limberGridViewAddCutGuide,\n\tset$limberGridViewTouchHoldGuide,\n} from \"../store/variables/elements\";\nimport getPrivateConstants, {\n\tsetWidth,\n\tsetHeight,\n\tsetPaddingLeft,\n\tsetPaddingRight,\n\tsetPaddingTop,\n\tsetPaddingBottom,\n\tsetWidthScaleFactor,\n\tsetMargin,\n\tsetDefinedMinHeightAndWidth,\n\tgetDefinedMinHeightAndWidth,\n\tsetGridWidth,\n\tsetGridHeight,\n\tsetGridMargin,\n\tsetMinHeightAndWidth,\n} from \"../store/constants/privateConstants\";\nimport getPublicConstants, {\n\tsetPublicConstantByName,\n} from \"../store/constants/publicConstants\";\nimport { checkPositionData } from \"../libs/renderers/rendererUtils\";\nimport { getRandomString } from \"../libs/utils/utils\";\nimport { arrangeFromHeight } from \"../libs/arrange/arrange\";\nimport { DESK_INTERACTION_MODE } from \"../store/flags/flagDetails\";\n\nexport const init = async function (context, isResize, autoArrange) {\n\t// if (typeof options.el === \"string\") {\n\t// \tconst el = document.getElementById(options.el);\n\t// \tif (!el) {\n\t// \t\tthrow `No for element found for id ${options.el}`;\n\t// \t}\n\t// \tset$el(el);\n\t// } else if (options.el instanceof Element) {\n\t// \tset$el(options.el);\n\t// } else {\n\t// \tthrow \"Valid DOM Element or Id required\";\n\t// }\n\n\t// set$body(context, document.getElementsByTagName(\"body\")[0]);\n\t// setPseudoElementId(\n\t// \tcontext,\n\t// \t\"limber-grid-view-pseudo-container-\" + getRandomString()\n\t// );\n\t// e.$body[0].insertAdjacentHTML(\n\t// \t\"beforeend\",\n\t// \t`<div id = ${getPseudoElementId(\n\t// \t\tcontext\n\t// \t)} class = \"limber-grid-view-pseudo-container\"></div>`\n\t// );\n\t// set$bodyPseudoEl(\n\t// \tcontext,\n\t// \tdocument.getElementById(getPseudoElementId(context))\n\t// );\n\n\t// e.$el.innerHTML = `<div class = \"limber-grid-view-container\"><style></style><div class = \"limber-grid-view\"></div><div class = \"limber-grid-view-license\"><div class = \"limber-grid-view-license-icon\">©</div><div class = \"limber-grid-view-license-details\">LimberGridView Copyright © 2018-2020, Subendra Kumar Sharma. License: GNU General Public License version 3, or (at your option) any later version.</div></div></div>`;\n\t// set$limberGridViewContainer(\n\t// \tcontext,\n\t// \te.$el.querySelectorAll(\".limber-grid-view-container\")[0]\n\t// );\n\t// set$limberGridViewStyle(context, e.$el.getElementsByTagName(\"style\")[0]);\n\t// set$limberGridView(context, e.$el.querySelectorAll(\".limber-grid-view\")[0]);\n\n\tconst e = getElements(context);\n\tconst privateConstants = getPrivateConstants(context);\n\tconst publicConstants = getPublicConstants(context);\n\tconst pd = getPositionData(context);\n\n\tif (autoArrange === true || !checkPositionData(pd)) {\n\t\tconsole.warn(\"Auto-arranging\");\n\n\t\tsetModifiedPositionData(context, pd);\n\t\tconst mpd = getModifiedPositionData(context);\n\t\tconst len = pd.length;\n\t\tconst arr = new Array(len);\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tarr[i] = i;\n\t\t\tmpd[i].x = undefined;\n\t\t\tmpd[i].y = undefined;\n\n\t\t\tpd[i].x /= privateConstants.WIDTH_SCALE_FACTOR;\n\t\t\tpd[i].y /= privateConstants.WIDTH_SCALE_FACTOR;\n\t\t\tpd[i].width /= privateConstants.WIDTH_SCALE_FACTOR;\n\t\t\tpd[i].height /= privateConstants.WIDTH_SCALE_FACTOR;\n\t\t}\n\n\t\tsetWidth(context, privateConstants.GRID_WIDTH);\n\t\tsetHeight(context, privateConstants.GRID_HEIGHT);\n\t\tsetMargin(context, privateConstants.GRID_MARGIN);\n\t\tsetWidthScaleFactor(context, 1);\n\t\tsetDefinedMinHeightAndWidth(context, privateConstants.MIN_HEIGHT_AND_WIDTH);\n\n\t\tawait arrangeFromHeight(context, arr, privateConstants.MARGIN);\n\t\tsetPositionData(context, mpd);\n\t}\n\n\tsetPaddingLeft(\n\t\tcontext,\n\t\tparseInt(\n\t\t\twindow\n\t\t\t\t.getComputedStyle(e.$limberGridView, null)\n\t\t\t\t.getPropertyValue(\"padding-left\")\n\t\t)\n\t);\n\tsetPaddingRight(\n\t\tcontext,\n\t\tparseInt(\n\t\t\twindow\n\t\t\t\t.getComputedStyle(e.$limberGridView, null)\n\t\t\t\t.getPropertyValue(\"padding-right\")\n\t\t)\n\t);\n\tsetPaddingTop(\n\t\tcontext,\n\t\tparseInt(\n\t\t\twindow\n\t\t\t\t.getComputedStyle(e.$limberGridView, null)\n\t\t\t\t.getPropertyValue(\"padding-top\")\n\t\t)\n\t);\n\tsetPaddingBottom(\n\t\tcontext,\n\t\tparseInt(\n\t\t\twindow\n\t\t\t\t.getComputedStyle(e.$limberGridView, null)\n\t\t\t\t.getPropertyValue(\"padding-bottom\")\n\t\t)\n\t);\n\n\tsetWidth(\n\t\tcontext,\n\t\te.$limberGridView.clientWidth -\n\t\t\tprivateConstants.PADDING_LEFT -\n\t\t\tprivateConstants.PADDING_RIGHT\n\t);\n\n\tsetHeight(\n\t\tcontext,\n\t\te.$limberGridView.clientHeight -\n\t\t\tprivateConstants.PADDING_TOP -\n\t\t\tprivateConstants.PADDING_BOTTOM\n\t);\n\n\t// privateConstants.WIDTH =\n\t// \te.$limberGridView.clientWidth -\n\t// \tprivateConstants.PADDING_LEFT -\n\t// \tprivateConstants.PADDING_RIGHT;\n\t// privateConstants.HEIGHT =\n\t// \te.$limberGridView.clientHeight -\n\t// \tprivateConstants.PADDING_TOP -\n\t// \tprivateConstants.PADDING_BOTTOM;\n\n\tif (isResize) {\n\t\t// resiet item x, y, width, height; MARGIN, MIN_HEIGHT_AND_WIDTH\n\t\tconst len = pd.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tpd[i].x /= privateConstants.WIDTH_SCALE_FACTOR;\n\t\t\tpd[i].y /= privateConstants.WIDTH_SCALE_FACTOR;\n\t\t\tpd[i].width /= privateConstants.WIDTH_SCALE_FACTOR;\n\t\t\tpd[i].height /= privateConstants.WIDTH_SCALE_FACTOR;\n\t\t}\n\n\t\tprivateConstants.MARGIN /= privateConstants.WIDTH_SCALE_FACTOR;\n\t\tprivateConstants.DEFINED_MIN_HEIGHT_AND_WIDTH /=\n\t\t\tprivateConstants.WIDTH_SCALE_FACTOR;\n\t}\n\n\tsetWidthScaleFactor(\n\t\tcontext,\n\t\tprivateConstants.WIDTH / privateConstants.GRID_WIDTH\n\t);\n\tsetMargin(\n\t\tcontext,\n\t\tprivateConstants.MARGIN * privateConstants.WIDTH_SCALE_FACTOR\n\t);\n\tsetDefinedMinHeightAndWidth(\n\t\tcontext,\n\t\tprivateConstants.DEFINED_MIN_HEIGHT_AND_WIDTH *\n\t\t\tprivateConstants.WIDTH_SCALE_FACTOR\n\t);\n};\n\nexport const initConstantsAndFlags = function (options) {\n\t// Private Constants BEGIN\n\tif (options?.gridData?.WIDTH && !isNaN(options.gridData.WIDTH)) {\n\t\tsetGridWidth(this, options.gridData.WIDTH);\n\t}\n\n\tif (options?.gridData?.HEIGHT && !isNaN(options.gridData.HEIGHT)) {\n\t\tsetGridHeight(this, options.gridData.HEIGHT);\n\t}\n\n\tif (options?.gridData?.MARGIN && !isNaN(options.gridData.MARGIN)) {\n\t\tsetGridMargin(this, options.gridData.MARGIN);\n\t}\n\n\tif (\n\t\toptions?.gridData?.MIN_HEIGHT_AND_WIDTH &&\n\t\t!isNaN(options.gridData.MIN_HEIGHT_AND_WIDTH)\n\t) {\n\t\tsetMinHeightAndWidth(this.options.gridData.MIN_HEIGHT_AND_WIDTH);\n\t}\n\t// Private Constants ENDED\n\n\t// Public Constants BEGIN\n\tif (\n\t\toptions?.publicConstants?.mobileAspectRatio &&\n\t\t!isNaN(options.publicConstants.mobileAspectRatio)\n\t) {\n\t\tsetPublicConstantByName(\n\t\t\tthis,\n\t\t\t\"MOBILE_ASPECT_RATIO\",\n\t\t\toptions.publicConstants.mobileAspectRatio\n\t\t);\n\t}\n\n\tif (\n\t\toptions?.publicConstants?.moveGuideRadius &&\n\t\t!isNaN(options.publicConstants.moveGuideRadius)\n\t) {\n\t\tsetPublicConstantByName(\n\t\t\tthis,\n\t\t\t\"MOVE_GUIDE_RADIUS\",\n\t\t\toptions.publicConstants.moveGuideRadius\n\t\t);\n\t}\n\n\tif (\n\t\toptions?.publicConstants?.resizeSquareGuideLength &&\n\t\t!isNaN(options.publicConstants.resizeSquareGuideLength)\n\t) {\n\t\tsetPublicConstantByName(\n\t\t\tthis,\n\t\t\t\"RESIZE_SQUARE_GUIDE_LENGTH\",\n\t\t\toptions.publicConstants.resizeSquareGuideLength\n\t\t);\n\t}\n\n\tif (\n\t\toptions?.publicConstants?.resizeSquareBorderGuideWidth &&\n\t\t!isNaN(options.publicConstants.resizeSquareBorderGuideWidth)\n\t) {\n\t\tsetPublicConstantByName(\n\t\t\tthis,\n\t\t\t\"RESIZE_SQUARE_GUIDE_BORDER_WIDTH\",\n\t\t\toptions.publicConstants.resizeSquareBorderGuideWidth\n\t\t);\n\t}\n\n\tif (\n\t\toptions?.publicConstants?.autoScrollDistance &&\n\t\t!isNaN(options.publicConstants.autoScrollDistance)\n\t) {\n\t\tsetPublicConstantByName(\n\t\t\tthis,\n\t\t\t\"AUTO_SCROLL_DISTANCE\",\n\t\t\toptions.publicConstants.autoScrollDistance\n\t\t);\n\t}\n\n\tif (\n\t\toptions?.publicConstants?.autoScrollPoint &&\n\t\t!isNaN(options.publicConstants.autoScrollPoint)\n\t) {\n\t\tsetPublicConstantByName(\n\t\t\tthis,\n\t\t\t\"AUTO_SCROLL_POINT\",\n\t\t\toptions.publicConstants.autoScrollPoint\n\t\t);\n\t}\n\n\tif (\n\t\toptions?.publicConstants?.moveOrResizeHeightIncrements &&\n\t\t!isNaN(options.publicConstants.moveOrResizeHeightIncrements)\n\t) {\n\t\tsetPublicConstantByName(\n\t\t\tthis,\n\t\t\t\"MOVE_OR_RESIZE_HEIGHT_INCREMENTS\",\n\t\t\toptions.publicConstants.moveOrResizeHeightIncrements\n\t\t);\n\t}\n\n\tif (\n\t\toptions?.publicConstants?.mouseDownTime &&\n\t\t!isNaN(options.publicConstants.mouseDownTime)\n\t) {\n\t\tsetPublicConstantByName(\n\t\t\tthis,\n\t\t\t\"MOUSE_DOWN_TIME\",\n\t\t\toptions.publicConstants.mouseDownTime\n\t\t);\n\t}\n\n\tif (\n\t\toptions?.publicConstants?.touchHoldTime &&\n\t\t!isNaN(options.publicConstants.touchHoldTime)\n\t) {\n\t\tsetPublicConstantByName(\n\t\t\tthis,\n\t\t\t\"TOUCH_HOLD_TIME\",\n\t\t\toptions.publicConstants.touchHoldTime\n\t\t);\n\t}\n\n\tif (\n\t\toptions?.publicConstants?.demoWaitTime &&\n\t\t!isNaN(options.publicConstants.demoWaitTime)\n\t) {\n\t\tsetPublicConstantByName(\n\t\t\tthis,\n\t\t\t\"DEMO_WAIT_TIME\",\n\t\t\toptions.publicConstants.demoWaitTime\n\t\t);\n\t}\n\n\tif (\n\t\toptions?.publicConstants?.windowResizeWaitTime &&\n\t\t!isNaN(options.publicConstants.windowResizeWaitTime)\n\t) {\n\t\tsetPublicConstantByName(\n\t\t\tthis,\n\t\t\t\"WINDOW_RESIZE_WAIT_TIME\",\n\t\t\toptions.publicConstants.windowResizeWaitTime\n\t\t);\n\t}\n\n\tif (\n\t\toptions?.publicConstants?.deskInteractionMode &&\n\t\tDESK_INTERACTION_MODE[options.publicConstants.deskInteractionMode]\n\t) {\n\t\tsetPublicConstantByName(\n\t\t\tthis,\n\t\t\t\"DESK_INTERACTION_MODE\",\n\t\t\toptions.publicConstants.deskInteractionMode\n\t\t);\n\t}\n\n\tif (typeof options?.publicConstants?.latchMovedItem === \"boolean\") {\n\t\tsetPublicConstantByName(\n\t\t\tthis,\n\t\t\t\"LATCH_MOVED_ITEM\",\n\t\t\toptions.publicConstants.latchMovedItem\n\t\t);\n\t}\n\n\tif (typeof options?.publicConstants?.animateMovedItem === \"boolean\") {\n\t\tsetPublicConstantByName(\n\t\t\tthis,\n\t\t\t\"ANIMATE_MOVED_ITEM\",\n\t\t\toptions.publicConstants.animateMovedItem\n\t\t);\n\t}\n\n\tif (\n\t\toptions?.publicConstants?.animateTime &&\n\t\t!isNaN(options.publicConstants.animateTime)\n\t) {\n\t\tsetPublicConstantByName(\n\t\t\tthis,\n\t\t\t\"ANIMATE_TIME\",\n\t\t\toptions.publicConstants.animateTime\n\t\t);\n\t}\n\n\t// Public Constants ENDED\n\n\t// Miscellaneous BEGIN\n\n\t// Miscellaneous ENDED\n};\n\nexport const initRender = function () {\n\tconst e = getElements(this);\n\tconst options = getOptions(this);\n\n\tset$body(this, document.getElementsByTagName(\"body\")[0]);\n\n\tlet pseudoContainerId;\n\tdo {\n\t\tpseudoContainerId =\n\t\t\t\"limber-grid-view-pseudo-container-\" + getRandomString();\n\t} while (document.getElementById(pseudoContainerId) !== null);\n\tsetPseudoContainerId(this, pseudoContainerId);\n\n\tconst pseudoContainer = document.createElement(\"div\");\n\tpseudoContainer.setAttribute(\"class\", \"limber-grid-view-pseudo-container\");\n\tpseudoContainer.setAttribute(\"id\", pseudoContainerId);\n\tset$pseudoContainer(this, pseudoContainer);\n\n\t// pseudo container should be kept in defined container, if not defined then body\n\tif (options.pseudoElementContainer) {\n\t\tlet $pseudoElementContainer;\n\t\tif (typeof options.pseudoElementContainer === \"string\") {\n\t\t\t$pseudoElementContainer = document.getElementById(\n\t\t\t\toptions.pseudoElementContainer\n\t\t\t);\n\t\t} else if (options.pseudoElementContainer instanceof Element) {\n\t\t\t$pseudoElementContainer = options.pseudoElementContainer;\n\t\t}\n\t\t$pseudoElementContainer.appendChild(pseudoContainer);\n\t} else {\n\t\te.$body.appendChild(pseudoContainer);\n\t}\n\n\te.$el.innerHTML = `<div class = \"limber-grid-view-container\"><div class = \"limber-grid-view\"></div><div class = \"limber-grid-view-license\"><div class = \"limber-grid-view-license-icon\">©</div><div class = \"limber-grid-view-license-details\">LimberGridView Copyright © 2018-2020, Subendra Kumar Sharma. License: GNU General Public License version 3, or (at your option) any later version.</div></div></div>`;\n\tset$limberGridViewContainer(\n\t\tthis,\n\t\te.$el.getElementsByClassName(\"limber-grid-view-container\")[0]\n\t);\n\tset$limberGridView(this, e.$el.getElementsByClassName(\"limber-grid-view\")[0]);\n\n\tconst pseudoContainerItem = document.createElement(\"div\");\n\tconst limberGridViewPseudoItem = document.createElement(\"div\");\n\tconst limberGridViewMoveGuide = document.createElement(\"div\"); // thing that shows to if there is a latch on item available on move\n\tconst limberGridViewHeightAdjustGuide = document.createElement(\"div\");\n\tconst limberGridViewAddCutGuide = document.createElement(\"div\"); // desk interaction rect\n\tconst limberGridViewTouchHoldGuide = document.createElement(\"div\"); // touch hold animation\n\tlimberGridViewTouchHoldGuide.innerHTML = \"<div></div>\";\n\n\tpseudoContainerItem.setAttribute(\n\t\t\"class\",\n\t\t\"limber-grid-view-pseudo-container-item\"\n\t);\n\tlimberGridViewPseudoItem.setAttribute(\n\t\t\"class\",\n\t\t\"limber-grid-view-pseudo-item\"\n\t);\n\tlimberGridViewMoveGuide.setAttribute(\"class\", \"limber-grid-view-move-guide\");\n\tlimberGridViewHeightAdjustGuide.setAttribute(\n\t\t\"class\",\n\t\t\"limber-grid-view-height-adjust-guide\"\n\t);\n\tlimberGridViewAddCutGuide.setAttribute(\n\t\t\"class\",\n\t\t\"limber-grid-view-add-cut-guide\"\n\t);\n\tlimberGridViewTouchHoldGuide.setAttribute(\n\t\t\"class\",\n\t\t\"limber-grid-view-touch-hold-guide\"\n\t);\n\n\te.$pseudoContainer.appendChild(pseudoContainerItem);\n\te.$limberGridView.appendChild(limberGridViewPseudoItem);\n\te.$limberGridView.appendChild(limberGridViewMoveGuide);\n\te.$limberGridView.appendChild(limberGridViewHeightAdjustGuide);\n\te.$limberGridView.appendChild(limberGridViewAddCutGuide);\n\te.$limberGridView.appendChild(limberGridViewTouchHoldGuide);\n\n\tset$pseudoContainerItem(this, pseudoContainerItem);\n\tset$limberGridViewPseudoItem(this, limberGridViewPseudoItem);\n\tset$limberGridViewMoveGuide(this, limberGridViewMoveGuide);\n\tset$limberGridViewHeightAdjustGuide(this, limberGridViewHeightAdjustGuide);\n\tset$limberGridViewAddCutGuide(this, limberGridViewAddCutGuide);\n\tset$limberGridViewTouchHoldGuide(this, limberGridViewTouchHoldGuide);\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nimport getPublicConstants from \"../../store/constants/publicConstants\";\n// import getPrivateConstants from \"../../store/constants/privateConstants\";\nimport getOptions from \"../../store/variables/options\";\nimport { getCallbacks } from \"../../store/variables/essentials\";\nimport { getBindedFunctions } from \"../../store/variables/bindedFunctions\";\nimport { init } from \"../../initializers/initializers\";\nimport { render } from \"../renderers/renderers\";\n\nexport const onWindowResize = function (event) {\n\tconst publicConstants = getPublicConstants(this);\n\n\tsetTimeout(\n\t\tgetBindedFunctions(this).onWindowResizeTimerCallback,\n\t\t// onWindowResizeTimerCallback,\n\t\tpublicConstants.WINDOW_RESIZE_WAIT_TIME\n\t\t// this\n\t);\n\twindow.removeEventListener(\"resize\", getBindedFunctions(this).onWindowResize);\n};\n\nexport const onWindowResizeTimerCallback = async function (event) {\n\tawait init(this, true, false);\n\trender(this);\n\n\tconst options = getOptions(this);\n\n\tif (options.reRenderOnResize !== false) {\n\t\twindow.addEventListener(\"resize\", getBindedFunctions(this).onWindowResize);\n\t}\n};\n\nexport const onItemClick = function (event) {\n\tconst callbacks = getCallbacks(this);\n\n\tcallbacks.onItemClickCallback(event);\n};\n","/*\n\nLimberGridView, a powerful JavaScript Libary that gives you movable, resizable(any size) and auto-arranging grids.\n\nCopyright © 2018-2020, Subendra Kumar Sharma. All Rights reserved. (jobs.sharma.subendra.kr@gmail.com)\n\nThis file is part of LimberGridView.\n\nLimberGridView is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nLimberGridView is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with LimberGridView.  If not, see <https://www.gnu.org/licenses/>.\n\nWritten by Subendra Kumar Sharma.\n\n*/\n\nimport \"./index.css\";\nimport \"./index.scss\";\n\nimport {\n\tonItemMouseDown,\n\tonItemTouchStart,\n\tonItemMouseMove,\n\tonItemTouchMove,\n\tonItemMouseUp,\n\tonItemTouchEnd,\n\tonItemContextMenu,\n\tonItemTouchContextMenu,\n\tonItemTouchCancel,\n} from \"./libs/eventHandlerLib/itemInteraction\";\nimport {\n\tonDeskMouseDown,\n\tonDeskTouchStart,\n\tonDeskMouseMove,\n\tonDeskTouchMove,\n\tonDeskMouseUp,\n\tonDeskTouchEnd,\n\tonDeskContextMenu,\n\tonDeskTouchContextMenu,\n\tonDeskTouchCancel,\n} from \"./libs/eventHandlerLib/deskInteraction\";\nimport {\n\tonWindowResize,\n\tonWindowResizeTimerCallback,\n} from \"./libs/eventHandlerLib/miscellaneous\";\n\nimport { fixTo } from \"./libs/utils/utils\";\nimport {\n\tgetPublicConstants,\n\tsetPublicConstantByName,\n} from \"./store/constants/publicConstants\";\nimport {\n\tgetPrivateConstants,\n\t// setGridWidth,\n\t// setGridHeight,\n\t// setGridMargin,\n\t// setMinHeightAndWidth,\n} from \"./store/constants/privateConstants\";\nimport { setOptions } from \"./store/variables/options\";\n\nimport {\n\tsetPositionData,\n\tgetPositionData,\n\tsetGridData,\n\tsetCallbacks,\n\t// setPseudoContainerId,\n\t// getPseudoContainerId,\n} from \"./store/variables/essentials\";\nimport {\n\t// getElements,\n\t// set$body,\n\tset$el,\n\t// set$pseudoContainer,\n\t// set$limberGridViewContainer,\n\t// set$limberGridView,\n\t// set$pseudoContainerItem,\n\t// set$limberGridViewPseudoItem,\n\t// set$limberGridViewMoveGuide,\n\t// set$limberGridViewHeightAdjustGuide,\n\t// set$limberGridViewAddCutGuide,\n\t// set$limberGridViewTouchHoldGuide,\n} from \"./store/variables/elements\";\nimport {\n\tDESK_INTERACTION_MODE,\n\tLATCH_MOVED_ITEM,\n} from \"./store/flags/flagDetails\";\nimport { getBindedFunctions } from \"./store/variables/bindedFunctions\";\n\nimport {\n\trender,\n\trenderItem as _renderItem,\n\taddItem as _addItem,\n\tremoveItem as _removeItem,\n} from \"./libs/renderers/renderers\";\n// import { removeItems, addItems } from \"./libs/renderers/addOrRemoveItems\";\nimport {\n\tinit,\n\tinitConstantsAndFlags,\n\tinitRender,\n} from \"./initializers/initializers\";\n\nLimberGridView.prototype.constructor = LimberGridView;\n\n// ----------------------------------------------------------------------------------------- //\n\n// ---------------------------------- INPUT DATA FORMAT ------------------------------------ //\n\n// ----------------------------------------------------------------------------------------- //\n\n/*\n\n\tprocessTypes : render, addItems, addItemInteractive, removeItems, resizeItems, onDemand(default for invoked), <custom> (for invoked)\n\n\tvar options = {\n\t\tel : \"#\",\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// id of the parent element with #\n\t\teditable : true, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// true/false (optional default true)\n\t\tenableInteractiveAddAndCut : true,\t\t\t\t\t\t\t\t\t\t\t\t\t\t// true/false (optional default true)\n\t\tenableTouchInteraction : true,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// true/false (optional default true)\n\t\t//dataType : \"string\", \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// string/node\n\t\tautoArrange : true,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// true/false (compulsory if x and y not present else optional)\n\t\treRenderOnResize : true, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// true/false (optional default true)\n\t\tisMobileCheck: function\n\t\tpseudoElementContainer: string or element\n\t\titemMouseDownMoveCheck: function \t\t\t\t\t\t\t\t\t\t\t\t\t\t// x clicked/touched, y clicked/touched, item, index\n\t\titemMouseDownResizeCheck: function \t\t\t\t\t\t\t\t\t\t\t\t\t\t// x clicked/touched, y clicked/touched, item, index\n\n\t\tgridData : {\n\t\t\tWIDTH : 1920,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// width of limberGridView\n\t\t\tHEIGHT : 1080, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// height of limberGridView\n\t\t\tMARGIN : 8, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// margin for items\n\t\t\tMIN_HEIGHT_AND_WIDTH: 150 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// min height and width of items\n\t\t},\n\t\tpositionData: [\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// position Data\n\t\t\t{x : <value>, y : <value>, width : <value>, height : <value>},\n\t\t\t\t{x : <value>, y : <value>, width : <value>, height : <value>},\n\n\t\t\t\t\tOR (if autoArrange set to true)\n\n\t\t\t\t{width : <value>, height : <value>},\n\t\t\t\t{width : <value>, height : <value>},\n\t\t\t\t...,\n\t\t\t\t...,\n\t\t\t\t...\n\t\t],\n\t\tcallbacks : {\n\t\t\trenderComplete : function(){}, \t\t\t\t\t\t\t\t\t\t\t\t\t\t// callback for completion of render function or renderItem, passes index of rendered Item if only was rendered by external program or passes index undefined if it was first render\n\t\t\trenderContent : function(index, width, height, type){},\t\t\t\t\t\t\t\t\t// callback to get data inside an item, type is \"isAdd\" on addItem and type is \"isResize\" on resizeItem. Update slipping \"isResize\" as it is not likely to be needed\n\t\t\taddComplete : function(index){}\n\t\t\tremoveComplete: function(index){}\n\t\t\tmoveComplete: function(index, toX, toY, arrangedIndices) {}\n\t\t\tresizeComplete: function(index, width, height, arrangedIndices){}\n\t\t\trenderPlugin: function (renderData, element) {}\n\t\t\tremovePlugin: function(element){}\n\n\t\t\t//getItemRenderDataCallback : function(index, width, height, processType){}, \t\t\t// callback to get string or node object to render inside the item\n\t\t\tonItemClickCallback : function(event){},\t\t\t\t\t\t\t\t\t\t\t// click callback for item\n\t\t\t//itemsRenderComplete : function([index, index, ...], scale, processType){}, \t\t\t// callback for completion of renderItems function\n\t\t\t//resizeCompleteCallback : function(index, {x, y, width, height}){}, \t\t\t\t\t// callback for completion of resizing an item\n\t\t\t//moveCompleteCallback : function(status, index, {x, y, width, height} or event){}, \t\t\t\t\t// callback for completion of moving an item\n\t\t\t//addCompleteCallback : function([index, index, ...], width, height, processType){}, \t// callback for completion of adding an item\n\t\t\t//removeCompleteCallback : function([index, index, ...]){}, \t\t\t\t\t\t\t// callback for completion of removing an item\n\t\t},\n\t\tpublicConstants: {\n\t\t\tmobileAspectRatio : <value>, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// aspect ratio of for mobile devices\n\n\t\t\tmoveGuideRadius: number,\n\t\t\tresizeSquareGuideLength: number\n\t\t\tresizeSquareGuideBorderWidth: number\n\t\t\tautoScrollDistance: number\n\t\t\tautoScrollPoint: number\n\t\t\tmoveOrResizeHeightIncrements: number\n\n\t\t\tmouseDownTime: number\n\t\t\ttouchHoldTime: number\n\t\t\tdemoWaitTime: number\n\t\t\twindowResizeWaitTime: number\n\n\t\t\tdeskInteractionMode: \"ADD\"/\"CUTSPACE\"\n\n\t\t\tlatchMovedItem: boolean\n\t\t\tanimateMovedItem: boolean\n\t\t\tanimateTime: number\n\t\t}\n\t}\n\t*/\n\n// ----------------------------------------------------------------------------------------- //\n\n// ---------------------------------- INPUT DATA FORMAT END -------------------------------- //\n\n// ----------------------------------------------------------------------------------------- //\n\n// ----------------------------------------------------------------------------------------- //\n\n// ---------------------------------- CONSTANTS YOU CAN CHANGE ----------------------------- //\n\n// ----------------------------------------------------------------------------------------- //\n\n// LimberGridView.prototype.MOVE_GUIDE_RADIUS = 10;\n// LimberGridView.prototype.RESIZE_SQUARE_GUIDE_LENGTH = 10;\n// LimberGridView.prototype.RESIZE_SQUARE_BORDER_GUIDE_WIDTH = 3;\n// LimberGridView.prototype.AUTO_SCROLL_DISTANCE = 50;\n// LimberGridView.prototype.AUTO_SCROLL_POINT = 50;\n// LimberGridView.prototype.MOVE_OR_RESIZE_HEIGHT_INCREMENTS = 50;\n\n// LimberGridView.prototype.MOUSE_DOWN_TIME = 500;\n// LimberGridView.prototype.TOUCH_HOLD_TIME = 300;\n// LimberGridView.prototype.DEMO_WAIT_TIME = 500;\n// LimberGridView.prototype.WINDOW_RESIZE_WAIT_TIME = 1000;\n// LimberGridView.prototype.MARGIN = 5;\n\n// LimberGridView.prototype.MOBILE_ASPECT_RATIO = 16 / 9;\n\n// LimberGridView.prototype.ADD_OR_CUTSPACE_TOGGLE = \"ADD\";\n\n// ----------------------------------------------------------------------------------------- //\n\n// ---------------------------------- CONSTANTS YOU CAN CHANGE END ------------------------- //\n\n// ----------------------------------------------------------------------------------------- //\n\nfunction LimberGridView(options) {\n\tthis.initializeStore();\n\tsetOptions(this, options);\n\tsetPositionData(this, options.positionData);\n\tsetCallbacks(this, options.callbacks);\n\n\t// INITIALIZATION BEGIN\n\tif (typeof options.el === \"string\") {\n\t\tconst el = document.getElementById(options.el);\n\t\tif (!el) {\n\t\t\tthrow `No for element found for id ${options.el}`;\n\t\t}\n\t\tset$el(this, el);\n\t} else if (options.el instanceof Element) {\n\t\tset$el(this, options.el);\n\t} else {\n\t\tthrow \"Valid DOM Element or Id required\";\n\t}\n\n\tinitConstantsAndFlags.call(this, options);\n\tinitRender.call(this);\n\n\t// INITIALIZATION ENDED\n\n\tif (this.options.reRenderOnResize === true) {\n\t\twindow.addEventListener(\"resize\", getBindedFunctions(this).onWindowResize);\n\t}\n\n\tsetTimeout(\n\t\tasync function () {\n\t\t\tawait init(this, false, options.autoArrange);\n\t\t\trender(this, true);\n\t\t}.bind(this)\n\t);\n}\n\nLimberGridView.prototype.initializeStore = function () {\n\tthis.options = {\n\t\teditable: true,\n\t\treRenderOnResize: true,\n\t\tenableInteractiveAddAndCut: true,\n\t\tenableTouchInteraction: true,\n\t};\n\tthis.store = {\n\t\tvariables: {\n\t\t\telements: {\n\t\t\t\t$body: undefined,\n\t\t\t\t$pseudoContainer: undefined,\n\t\t\t\t$pseudoContainerItem: undefined,\n\t\t\t\t$el: undefined,\n\t\t\t\t$limberGridViewContainer: undefined,\n\t\t\t\t$limberGridView: undefined,\n\t\t\t\t$limberGridViewItems: [],\n\t\t\t\t$limberGridViewPseudoItem: undefined,\n\t\t\t\t$limberGridViewMoveGuide: undefined,\n\t\t\t\t$limberGridViewHeightAdjustGuide: undefined,\n\t\t\t\t$limberGridViewAddCutGuide: undefined, // limberGridViewAddItemGuide\n\t\t\t\t$limberGridViewTouchHoldGuide: undefined, // limberGridViewAddItemOnTouchHoldGuide\n\t\t\t\t//  DEBUG elements:\n\t\t\t\t$limberGridViewDebugMergedTempRects: [],\n\t\t\t\t$limberGridViewDebugStackTopRect: undefined,\n\t\t\t\t$limberGridViewDebugStackTopAdjRect: undefined,\n\t\t\t\t$limberGridViewDebugMergedRect: undefined,\n\t\t\t\t$limberGridViewDebugAdjRect: undefined,\n\t\t\t\t$limberGridViewDebugResultStackRects: [],\n\t\t\t\t$limberGridViewDebugStackRects: [],\n\t\t\t\t$limberGridViewDebugUnmergedRects: [],\n\t\t\t\t$limberGridViewDebugMergedFreeRects: [],\n\t\t\t},\n\t\t\tessentials: {\n\t\t\t\tpseudoContainerId: undefined,\n\t\t\t\tpositionData: [],\n\t\t\t\tmodifiedPositionData: [],\n\t\t\t\tgridData: {},\n\t\t\t\tcallbacks: {},\n\t\t\t},\n\t\t\tbindedFunctions: {\n\t\t\t\tonItemMouseDown: onItemMouseDown.bind(this),\n\t\t\t\tonItemTouchStart: onItemTouchStart.bind(this),\n\t\t\t\tonItemMouseMove: onItemMouseMove.bind(this),\n\t\t\t\tonItemTouchMove: onItemTouchMove.bind(this),\n\t\t\t\tonItemMouseUp: onItemMouseUp.bind(this),\n\t\t\t\tonItemTouchEnd: onItemTouchEnd.bind(this),\n\t\t\t\tonItemContextMenu: onItemContextMenu.bind(this),\n\t\t\t\tonItemTouchContextMenu: onItemTouchContextMenu.bind(this),\n\t\t\t\tonItemTouchCancel: onItemTouchCancel.bind(this),\n\t\t\t\t// Desk\n\t\t\t\tonDeskMouseDown: onDeskMouseDown.bind(this),\n\t\t\t\tonDeskTouchStart: onDeskTouchStart.bind(this),\n\t\t\t\tonDeskMouseMove: onDeskMouseMove.bind(this),\n\t\t\t\tonDeskTouchMove: onDeskTouchMove.bind(this),\n\t\t\t\tonDeskMouseUp: onDeskMouseUp.bind(this),\n\t\t\t\tonDeskTouchEnd: onDeskTouchEnd.bind(this),\n\t\t\t\tonDeskTouchCancel: onDeskTouchCancel.bind(this),\n\t\t\t\tonDeskTouchContextMenu: onDeskTouchContextMenu.bind(this),\n\t\t\t\tonDeskContextMenu: onDeskContextMenu.bind(this),\n\n\t\t\t\t//\n\t\t\t\tonWindowResize: onWindowResize.bind(this),\n\t\t\t\tonWindowResizeTimerCallback: onWindowResizeTimerCallback.bind(this),\n\t\t\t},\n\t\t\teventSpecific: {\n\t\t\t\titemInteraction: {\n\t\t\t\t\tuserActionData: {},\n\t\t\t\t\tmouseDownCancel: false,\n\t\t\t\t\tmouseDownTimerComplete: true,\n\t\t\t\t\ttouchHoldCancel: false,\n\t\t\t\t\ttouchHoldTimerComplete: false,\n\t\t\t\t\tlongPressCheck: undefined,\n\t\t\t\t\tlongTouchCheck: undefined,\n\t\t\t\t\tshowResizeDemoTimeOutVariable: undefined,\n\t\t\t\t\tshowMoveDemoTimeOutVariable: undefined,\n\t\t\t\t},\n\t\t\t\tdeskInteraction: {\n\t\t\t\t\tuserActionData: {},\n\t\t\t\t\tmouseDownCancel: false,\n\t\t\t\t\tmouseDownTimerComplete: false,\n\t\t\t\t\ttapHoldCancel: false,\n\t\t\t\t\ttapHoldTimerComplete: false,\n\t\t\t\t\tlongPressCheck: undefined,\n\t\t\t\t\tlongTouchCheck: undefined,\n\t\t\t\t\taddItemAllowCheckTimeOutVariable: undefined,\n\t\t\t\t\tcutSpaceAllowCheckTimeOutVariable: undefined,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tconstants: {\n\t\t\tprivateConstants: {\n\t\t\t\t// reinitialized in init i.e. first render and window resize BEGIN\n\t\t\t\tWIDTH: 0,\n\t\t\t\tHEIGHT: 0,\n\n\t\t\t\tPADDING_LEFT: 0,\n\t\t\t\tPADDING_RIGHT: 0,\n\t\t\t\tPADDING_TOP: 0,\n\t\t\t\tPADDING_BOTTOM: 0,\n\n\t\t\t\tWIDTH_SCALE_FACTOR: 1,\n\n\t\t\t\tMARGIN: 8,\n\t\t\t\tDEFINED_MIN_HEIGHT_AND_WIDTH: 150,\n\t\t\t\t// reinitialized in init i.e. first render and window resize ENDED\n\n\t\t\t\t// These should be decided and set only once for app development, if custom values are used then it should be passed everytime\n\t\t\t\tGRID_WIDTH: 1920,\n\t\t\t\tGRID_HEIGHT: 1080,\n\t\t\t\tGRID_MARGIN: 8,\n\t\t\t\tMIN_HEIGHT_AND_WIDTH: 150,\n\t\t\t},\n\t\t\tpublicConstants: {\n\t\t\t\tMOBILE_ASPECT_RATIO: 5 / 4,\n\n\t\t\t\tMOVE_GUIDE_RADIUS: 10,\n\t\t\t\tRESIZE_SQUARE_GUIDE_LENGTH: 10,\n\t\t\t\tRESIZE_SQUARE_GUIDE_BORDER_WIDTH: 3,\n\t\t\t\tAUTO_SCROLL_DISTANCE: 50,\n\t\t\t\tAUTO_SCROLL_POINT: 50,\n\t\t\t\tMOVE_OR_RESIZE_HEIGHT_INCREMENTS: 50,\n\n\t\t\t\tMOUSE_DOWN_TIME: 500,\n\t\t\t\tTOUCH_HOLD_TIME: 300,\n\t\t\t\tDEMO_WAIT_TIME: 500,\n\t\t\t\tWINDOW_RESIZE_WAIT_TIME: 1000,\n\n\t\t\t\tDESK_INTERACTION_MODE: \"ADD\",\n\n\t\t\t\tLATCH_MOVED_ITEM: true,\n\n\t\t\t\tANIMATE_MOVED_ITEM: false,\n\t\t\t\tANIMATE_TIME: 250,\n\t\t\t},\n\t\t},\n\t};\n};\n\nLimberGridView.prototype.renderItem = function (index) {\n\t_renderItem(this, index);\n};\n\nLimberGridView.prototype.getGridData = function () {\n\tconst privateConstants = getPrivateConstants(this);\n\tconst pd = getPositionData(this);\n\n\tconst len = pd.length;\n\tconst arr = new Array(len);\n\tfor (let i = 0; i < len; i++) {\n\t\tarr[i] = {\n\t\t\tx: fixTo(pd[i].x / privateConstants.WIDTH_SCALE_FACTOR),\n\t\t\ty: fixTo(pd[i].y / privateConstants.WIDTH_SCALE_FACTOR),\n\t\t\twidth: fixTo(pd[i].width / privateConstants.WIDTH_SCALE_FACTOR),\n\t\t\theight: fixTo(pd[i].height / privateConstants.WIDTH_SCALE_FACTOR),\n\t\t};\n\t}\n\n\t// TO DO: have to scale positionData to GRID_HEIGHT, GRID_WIDTH and GRID_MARGIN\n\t// Have to send a copy since it will be scaled to output specifications\n\treturn {\n\t\tgridData: {\n\t\t\theight: privateConstants.GRID_HEIGHT,\n\t\t\twidth: privateConstants.GRID_WIDTH,\n\t\t\tmargin: privateConstants.GRID_MARGIN,\n\t\t\tMIN_HEIGHT_AND_WIDTH: privateConstants.MIN_HEIGHT_AND_WIDTH,\n\t\t},\n\t\tpositionData: arr,\n\t};\n};\n\nLimberGridView.prototype.setDeskInteractMode = function (flag) {\n\tif (DESK_INTERACTION_MODE[flag]) {\n\t\tsetPublicConstantByName(this, \"DESK_INTERACTION_MODE\", flag);\n\t}\n};\n\nLimberGridView.prototype.setLatchMovedItem = function (flag) {\n\tif (LATCH_MOVED_ITEM[flag]) {\n\t\tsetPublicConstantByName(this, \"LATCH_MOVED_ITEM\", flag);\n\t}\n};\n\nLimberGridView.prototype.addItem = function (item) {\n\tif (!item) {\n\t\tconst privateConstants = getPrivateConstants(this);\n\t\titem = {\n\t\t\twidth: privateConstants.DEFINED_MIN_HEIGHT_AND_WIDTH,\n\t\t\theight: privateConstants.DEFINED_MIN_HEIGHT_AND_WIDTH,\n\t\t};\n\t}\n\n\t_addItem(this, item);\n};\n\nLimberGridView.prototype.removeItem = function (index) {\n\tif (Number.isInteger(index)) {\n\t\t_removeItem(this, index);\n\t}\n};\n\nLimberGridView.prototype.setIsMobileCheck = function (f) {\n\tthis.options.isMobileCheck = f;\n};\n\nexport default LimberGridView;\n"],"sourceRoot":""}